{"version":3,"file":"IoTMonitoringSystem-C3cVzcRJ.js","sources":["../../node_modules/lucide-react/dist/esm/icons/battery-low.js","../../node_modules/lucide-react/dist/esm/icons/bluetooth.js","../../node_modules/lucide-react/dist/esm/icons/droplets.js","../../node_modules/lucide-react/dist/esm/icons/radio.js","../../node_modules/lucide-react/dist/esm/icons/watch.js","../../src/components/IoT/IoTMonitoringSystem.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M22 14v-4\", key: \"14q9d5\" }],\n  [\"path\", { d: \"M6 14v-4\", key: \"14a6bd\" }],\n  [\"rect\", { x: \"2\", y: \"6\", width: \"16\", height: \"12\", rx: \"2\", key: \"13zb55\" }]\n];\nconst BatteryLow = createLucideIcon(\"battery-low\", __iconNode);\n\nexport { __iconNode, BatteryLow as default };\n//# sourceMappingURL=battery-low.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"m7 7 10 10-5 5V2l5 5L7 17\", key: \"1q5490\" }]];\nconst Bluetooth = createLucideIcon(\"bluetooth\", __iconNode);\n\nexport { __iconNode, Bluetooth as default };\n//# sourceMappingURL=bluetooth.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z\",\n      key: \"1ptgy4\"\n    }\n  ],\n  [\n    \"path\",\n    {\n      d: \"M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97\",\n      key: \"1sl1rz\"\n    }\n  ]\n];\nconst Droplets = createLucideIcon(\"droplets\", __iconNode);\n\nexport { __iconNode, Droplets as default };\n//# sourceMappingURL=droplets.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M16.247 7.761a6 6 0 0 1 0 8.478\", key: \"1fwjs5\" }],\n  [\"path\", { d: \"M19.075 4.933a10 10 0 0 1 0 14.134\", key: \"ehdyv1\" }],\n  [\"path\", { d: \"M4.925 19.067a10 10 0 0 1 0-14.134\", key: \"1q22gi\" }],\n  [\"path\", { d: \"M7.753 16.239a6 6 0 0 1 0-8.478\", key: \"r2q7qm\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"2\", key: \"1c9p78\" }]\n];\nconst Radio = createLucideIcon(\"radio\", __iconNode);\n\nexport { __iconNode, Radio as default };\n//# sourceMappingURL=radio.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 10v2.2l1.6 1\", key: \"n3r21l\" }],\n  [\n    \"path\",\n    { d: \"m16.13 7.66-.81-4.05a2 2 0 0 0-2-1.61h-2.68a2 2 0 0 0-2 1.61l-.78 4.05\", key: \"18k57s\" }\n  ],\n  [\"path\", { d: \"m7.88 16.36.8 4a2 2 0 0 0 2 1.61h2.72a2 2 0 0 0 2-1.61l.81-4.05\", key: \"16ny36\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"6\", key: \"1vlfrh\" }]\n];\nconst Watch = createLucideIcon(\"watch\", __iconNode);\n\nexport { __iconNode, Watch as default };\n//# sourceMappingURL=watch.js.map\n","import React, { useState, useEffect, useRef } from 'react';\nimport { usePatient } from '../../context/PatientContext';\nimport Card from '../UI/Card';\nimport Alert from '../UI/Alert';\nimport Tooltip from '../UI/Tooltip';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { \n  Smartphone, \n  Watch,\n  Heart,\n  Activity,\n  Thermometer,\n  Droplets,\n  Zap,\n  Wifi,\n  WifiOff,\n  Battery,\n  BatteryLow,\n  AlertTriangle,\n  CheckCircle,\n  Plus,\n  TrendingUp,\n  TrendingDown,\n  Calendar,\n  Clock,\n  MapPin,\n  Settings,\n  Bluetooth,\n  Radio,\n  Monitor,\n  Stethoscope,\n  Eye,\n  Pill,\n  Scale,\n  Moon,\n  Sun,\n  Navigation,\n  Search\n} from 'lucide-react';\n\ninterface IoTDevice {\n  id: string;\n  name: string;\n  type: 'wearable' | 'sensor' | 'pump' | 'monitor' | 'implant' | 'mobile_app';\n  brand: string;\n  model: string;\n  status: 'connected' | 'disconnected' | 'low_battery' | 'error' | 'syncing';\n  battery_level?: number;\n  last_sync: string;\n  connection_type: 'bluetooth' | 'wifi' | 'cellular' | 'nfc';\n  patient_id: string;\n  location?: {\n    latitude: number;\n    longitude: number;\n    address: string;\n  };\n  firmware_version: string;\n  data_types: string[];\n}\n\ninterface IoTReading {\n  id: string;\n  device_id: string;\n  metric: string;\n  value: number;\n  unit: string;\n  timestamp: string;\n  quality: 'excellent' | 'good' | 'fair' | 'poor';\n  alert_triggered: boolean;\n  context?: {\n    activity: string;\n    medication_time?: string;\n    sleep_stage?: string;\n    stress_level?: number;\n  };\n}\n\ninterface DeviceAlert {\n  id: string;\n  device_id: string;\n  type: 'critical' | 'warning' | 'info';\n  title: string;\n  message: string;\n  timestamp: string;\n  resolved: boolean;\n  action_taken?: string;\n}\n\ninterface HealthTrend {\n  metric: string;\n  current_value: number;\n  trend_7d: number;\n  trend_30d: number;\n  percentile_rank: number;\n  target_range: [number, number];\n  status: 'optimal' | 'good' | 'concerning' | 'critical';\n}\n\nconst IoTMonitoringSystem: React.FC = () => {\n  const { state } = usePatient();\n  const { currentPatient } = state;\n  const [devices, setDevices] = useState<IoTDevice[]>([]);\n  const [readings, setReadings] = useState<IoTReading[]>([]);\n  const [alerts, setAlerts] = useState<DeviceAlert[]>([]);\n  const [healthTrends, setHealthTrends] = useState<HealthTrend[]>([]);\n  const [selectedDevice, setSelectedDevice] = useState<string | null>(null);\n  const [selectedTimeframe, setSelectedTimeframe] = useState<'1h' | '6h' | '24h' | '7d'>('24h');\n  const [realTimeEnabled, setRealTimeEnabled] = useState(true);\n  const [isScanning, setIsScanning] = useState(false);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    if (currentPatient) {\n      initializeDevices();\n      startRealTimeMonitoring();\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [currentPatient, realTimeEnabled]);\n\n  const initializeDevices = () => {\n    if (!currentPatient) return;\n\n    const demoDevices: IoTDevice[] = [\n      {\n        id: 'device-1',\n        name: 'Apple Watch Series 9',\n        type: 'wearable',\n        brand: 'Apple',\n        model: 'A2986',\n        status: 'connected',\n        battery_level: 78,\n        last_sync: new Date().toISOString(),\n        connection_type: 'bluetooth',\n        patient_id: currentPatient.id,\n        location: {\n          latitude: 37.7749,\n          longitude: -122.4194,\n          address: 'San Francisco, CA'\n        },\n        firmware_version: '10.1.1',\n        data_types: ['heart_rate', 'ecg', 'blood_oxygen', 'activity', 'sleep', 'fall_detection']\n      },\n      {\n        id: 'device-2',\n        name: 'Dexcom G7 CGM',\n        type: 'sensor',\n        brand: 'Dexcom',\n        model: 'G7',\n        status: 'connected',\n        battery_level: 92,\n        last_sync: new Date(Date.now() - 300000).toISOString(),\n        connection_type: 'bluetooth',\n        patient_id: currentPatient.id,\n        firmware_version: '1.2.4',\n        data_types: ['glucose_level', 'glucose_trend']\n      },\n      {\n        id: 'device-3',\n        name: 'Fitbit Sense 2',\n        type: 'wearable',\n        brand: 'Fitbit',\n        model: 'FB521',\n        status: 'low_battery',\n        battery_level: 15,\n        last_sync: new Date(Date.now() - 1800000).toISOString(),\n        connection_type: 'wifi',\n        patient_id: currentPatient.id,\n        firmware_version: '3.14.159',\n        data_types: ['stress_level', 'skin_temperature', 'heart_rate_variability']\n      },\n      {\n        id: 'device-4',\n        name: 'Withings Body+ Scale',\n        type: 'sensor',\n        brand: 'Withings',\n        model: 'WBS05',\n        status: 'connected',\n        last_sync: new Date(Date.now() - 7200000).toISOString(),\n        connection_type: 'wifi',\n        patient_id: currentPatient.id,\n        firmware_version: '2.8.1',\n        data_types: ['weight', 'body_fat', 'muscle_mass', 'bone_mass', 'water_percentage']\n      },\n      {\n        id: 'device-5',\n        name: 'OncoSafeRx Mobile App',\n        type: 'mobile_app',\n        brand: 'OncoSafeRx',\n        model: 'v3.2.1',\n        status: 'connected',\n        battery_level: 85,\n        last_sync: new Date(Date.now() - 60000).toISOString(),\n        connection_type: 'cellular',\n        patient_id: currentPatient.id,\n        firmware_version: '3.2.1',\n        data_types: ['medication_adherence', 'symptoms', 'mood', 'pain_level', 'side_effects']\n      },\n      {\n        id: 'device-6',\n        name: 'Philips HealthSuite',\n        type: 'monitor',\n        brand: 'Philips',\n        model: 'HSP-100',\n        status: 'connected',\n        last_sync: new Date(Date.now() - 180000).toISOString(),\n        connection_type: 'wifi',\n        patient_id: currentPatient.id,\n        firmware_version: '1.5.2',\n        data_types: ['blood_pressure', 'pulse', 'temperature', 'respiratory_rate']\n      }\n    ];\n\n    setDevices(demoDevices);\n    setSelectedDevice(demoDevices[0].id);\n    generateInitialReadings(demoDevices);\n    generateHealthTrends();\n  };\n\n  const generateInitialReadings = (deviceList: IoTDevice[]) => {\n    const readings: IoTReading[] = [];\n    const now = Date.now();\n\n    deviceList.forEach(device => {\n      device.data_types.forEach(dataType => {\n        // Generate last 24 hours of data\n        for (let i = 0; i < 288; i++) { // Every 5 minutes\n          const timestamp = new Date(now - (i * 5 * 60 * 1000));\n          readings.push(generateReading(device.id, dataType, timestamp.toISOString()));\n        }\n      });\n    });\n\n    setReadings(readings);\n  };\n\n  const generateReading = (deviceId: string, metric: string, timestamp: string): IoTReading => {\n    const baseValues: { [key: string]: { base: number; variance: number; unit: string } } = {\n      heart_rate: { base: 72, variance: 15, unit: 'bpm' },\n      blood_oxygen: { base: 98, variance: 2, unit: '%' },\n      blood_pressure_systolic: { base: 120, variance: 15, unit: 'mmHg' },\n      blood_pressure_diastolic: { base: 80, variance: 10, unit: 'mmHg' },\n      glucose_level: { base: 110, variance: 30, unit: 'mg/dL' },\n      temperature: { base: 36.5, variance: 0.8, unit: '°C' },\n      weight: { base: 70, variance: 1, unit: 'kg' },\n      stress_level: { base: 3, variance: 2, unit: '/10' },\n      pain_level: { base: 2, variance: 2, unit: '/10' },\n      medication_adherence: { base: 95, variance: 10, unit: '%' },\n      activity: { base: 5000, variance: 2000, unit: 'steps' }\n    };\n\n    const config = baseValues[metric] || { base: 50, variance: 10, unit: '' };\n    const value = config.base + (Math.random() - 0.5) * config.variance;\n    \n    return {\n      id: `reading-${deviceId}-${metric}-${Date.now()}-${Math.random()}`,\n      device_id: deviceId,\n      metric,\n      value: Math.round(value * 100) / 100,\n      unit: config.unit,\n      timestamp,\n      quality: ['excellent', 'good', 'fair'][Math.floor(Math.random() * 3)] as any,\n      alert_triggered: Math.random() < 0.05, // 5% chance of alert\n      context: metric === 'heart_rate' ? {\n        activity: ['resting', 'walking', 'exercising'][Math.floor(Math.random() * 3)],\n        stress_level: Math.floor(Math.random() * 10)\n      } : undefined\n    };\n  };\n\n  const generateHealthTrends = () => {\n    const trends: HealthTrend[] = [\n      {\n        metric: 'Heart Rate',\n        current_value: 72,\n        trend_7d: -2.3,\n        trend_30d: 1.8,\n        percentile_rank: 65,\n        target_range: [60, 100],\n        status: 'good'\n      },\n      {\n        metric: 'Blood Oxygen',\n        current_value: 98,\n        trend_7d: 0.5,\n        trend_30d: -0.2,\n        percentile_rank: 85,\n        target_range: [95, 100],\n        status: 'optimal'\n      },\n      {\n        metric: 'Stress Level',\n        current_value: 4.2,\n        trend_7d: 1.1,\n        trend_30d: -0.8,\n        percentile_rank: 45,\n        target_range: [0, 3],\n        status: 'concerning'\n      },\n      {\n        metric: 'Medication Adherence',\n        current_value: 94,\n        trend_7d: -3.2,\n        trend_30d: 2.1,\n        percentile_rank: 78,\n        target_range: [90, 100],\n        status: 'good'\n      }\n    ];\n\n    setHealthTrends(trends);\n  };\n\n  const startRealTimeMonitoring = () => {\n    if (!realTimeEnabled) return;\n\n    intervalRef.current = setInterval(() => {\n      // Generate new readings for all connected devices\n      const connectedDevices = devices.filter(d => d.status === 'connected');\n      \n      connectedDevices.forEach(device => {\n        device.data_types.forEach(dataType => {\n          if (Math.random() < 0.3) { // 30% chance of new reading per interval\n            const newReading = generateReading(device.id, dataType, new Date().toISOString());\n            setReadings(prev => [newReading, ...prev.slice(0, 999)]); // Keep last 1000 readings\n            \n            // Check for alerts\n            if (newReading.alert_triggered) {\n              generateDeviceAlert(device, newReading);\n            }\n          }\n        });\n      });\n\n      // Simulate device status changes\n      if (Math.random() < 0.1) { // 10% chance\n        setDevices(prev => prev.map(device => ({\n          ...device,\n          battery_level: device.battery_level ? Math.max(0, device.battery_level - Math.random() * 2) : undefined,\n          last_sync: Math.random() < 0.8 ? new Date().toISOString() : device.last_sync\n        })));\n      }\n    }, 5000); // Update every 5 seconds\n  };\n\n  const generateDeviceAlert = (device: IoTDevice, reading: IoTReading) => {\n    const alertTypes = [\n      {\n        type: 'critical' as const,\n        title: 'Critical Reading Detected',\n        message: `${reading.metric} reading of ${reading.value} ${reading.unit} is outside critical range`\n      },\n      {\n        type: 'warning' as const,\n        title: 'Unusual Pattern Detected',\n        message: `${reading.metric} shows abnormal pattern requiring attention`\n      },\n      {\n        type: 'info' as const,\n        title: 'Device Sync Complete',\n        message: `${device.name} has successfully synced new data`\n      }\n    ];\n\n    const alert = alertTypes[Math.floor(Math.random() * alertTypes.length)];\n    \n    const newAlert: DeviceAlert = {\n      id: `alert-${Date.now()}`,\n      device_id: device.id,\n      type: alert.type,\n      title: alert.title,\n      message: alert.message,\n      timestamp: new Date().toISOString(),\n      resolved: false\n    };\n\n    setAlerts(prev => [newAlert, ...prev]);\n  };\n\n  const scanForDevices = async () => {\n    setIsScanning(true);\n    \n    // Simulate device discovery\n    await new Promise(resolve => setTimeout(resolve, 3000));\n    \n    // Add a new device (for demo)\n    const newDevice: IoTDevice = {\n      id: `device-${Date.now()}`,\n      name: 'AliveCor KardiaMobile',\n      type: 'sensor',\n      brand: 'AliveCor',\n      model: 'AC-009',\n      status: 'connected',\n      battery_level: 67,\n      last_sync: new Date().toISOString(),\n      connection_type: 'bluetooth',\n      patient_id: currentPatient!.id,\n      firmware_version: '2.1.0',\n      data_types: ['ecg', 'heart_rhythm']\n    };\n\n    setDevices(prev => [...prev, newDevice]);\n    setIsScanning(false);\n  };\n\n  const getDeviceIcon = (type: string) => {\n    switch (type) {\n      case 'wearable': return <Watch className=\"w-5 h-5\" />;\n      case 'sensor': return <Activity className=\"w-5 h-5\" />;\n      case 'pump': return <Droplets className=\"w-5 h-5\" />;\n      case 'monitor': return <Monitor className=\"w-5 h-5\" />;\n      case 'implant': return <Heart className=\"w-5 h-5\" />;\n      case 'mobile_app': return <Smartphone className=\"w-5 h-5\" />;\n      default: return <Activity className=\"w-5 h-5\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'connected': return 'text-green-600';\n      case 'disconnected': return 'text-red-600';\n      case 'low_battery': return 'text-yellow-600';\n      case 'error': return 'text-red-600';\n      case 'syncing': return 'text-blue-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'connected': return <CheckCircle className=\"w-4 h-4 text-green-600\" />;\n      case 'disconnected': return <WifiOff className=\"w-4 h-4 text-red-600\" />;\n      case 'low_battery': return <BatteryLow className=\"w-4 h-4 text-yellow-600\" />;\n      case 'error': return <AlertTriangle className=\"w-4 h-4 text-red-600\" />;\n      case 'syncing': return <LoadingSpinner size=\"sm\" />;\n      default: return <Activity className=\"w-4 h-4 text-gray-600\" />;\n    }\n  };\n\n  const getConnectionIcon = (type: string) => {\n    switch (type) {\n      case 'bluetooth': return <Bluetooth className=\"w-3 h-3\" />;\n      case 'wifi': return <Wifi className=\"w-3 h-3\" />;\n      case 'cellular': return <Radio className=\"w-3 h-3\" />;\n      case 'nfc': return <Zap className=\"w-3 h-3\" />;\n      default: return <Activity className=\"w-3 h-3\" />;\n    }\n  };\n\n  const getTrendIcon = (trend: number) => {\n    if (trend > 1) return <TrendingUp className=\"w-4 h-4 text-green-600\" />;\n    if (trend < -1) return <TrendingDown className=\"w-4 h-4 text-red-600\" />;\n    return <Activity className=\"w-4 h-4 text-gray-600\" />;\n  };\n\n  const getHealthStatusColor = (status: string) => {\n    switch (status) {\n      case 'optimal': return 'text-green-600 bg-green-50';\n      case 'good': return 'text-blue-600 bg-blue-50';\n      case 'concerning': return 'text-yellow-600 bg-yellow-50';\n      case 'critical': return 'text-red-600 bg-red-50';\n      default: return 'text-gray-600 bg-gray-50';\n    }\n  };\n\n  const selectedDeviceData = selectedDevice ? devices.find(d => d.id === selectedDevice) : null;\n  const deviceReadings = selectedDeviceData \n    ? readings.filter(r => r.device_id === selectedDevice).slice(0, 20)\n    : [];\n\n  if (!currentPatient) {\n    return (\n      <Card>\n        <div className=\"text-center py-12\">\n          <Smartphone className=\"w-16 h-16 mx-auto mb-4 text-gray-300\" />\n          <h3 className=\"text-xl font-semibold text-gray-500 mb-2\">IoT Health Monitoring</h3>\n          <p className=\"text-gray-400 max-w-md mx-auto\">\n            Select a patient to monitor their connected health devices and IoT sensors\n          </p>\n        </div>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <Card className=\"bg-gradient-to-r from-green-50 to-blue-50 border-green-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-12 h-12 bg-green-100 rounded-full flex items-center justify-center\">\n              <Smartphone className=\"w-6 h-6 text-green-600\" />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">IoT Health Monitoring</h1>\n              <p className=\"text-gray-600\">\n                Connected devices for {currentPatient.demographics.firstName} {currentPatient.demographics.lastName}\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className={`w-3 h-3 rounded-full ${realTimeEnabled ? 'bg-green-500 animate-pulse' : 'bg-gray-400'}`}></div>\n              <span className=\"text-sm font-medium text-gray-600\">\n                Real-time: {realTimeEnabled ? 'Active' : 'Paused'}\n              </span>\n            </div>\n            <button\n              onClick={() => setRealTimeEnabled(!realTimeEnabled)}\n              className={`relative w-12 h-6 rounded-full transition-colors ${\n                realTimeEnabled ? 'bg-green-500' : 'bg-gray-300'\n              }`}\n            >\n              <div className={`absolute w-5 h-5 bg-white rounded-full top-0.5 transition-transform ${\n                realTimeEnabled ? 'translate-x-6' : 'translate-x-0.5'\n              }`} />\n            </button>\n          </div>\n        </div>\n      </Card>\n\n      {/* Active Alerts */}\n      {alerts.filter(a => !a.resolved).length > 0 && (\n        <div className=\"space-y-2\">\n          {alerts.filter(a => !a.resolved).slice(0, 3).map(alert => (\n            <Alert\n              key={alert.id}\n              type={alert.type === 'critical' ? 'error' : alert.type === 'warning' ? 'warning' : 'info'}\n              title={alert.title}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm\">{alert.message}</p>\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Device: {devices.find(d => d.id === alert.device_id)?.name} • {new Date(alert.timestamp).toLocaleTimeString()}\n                  </p>\n                </div>\n                <button\n                  onClick={() => setAlerts(prev => prev.map(a => a.id === alert.id ? {...a, resolved: true} : a))}\n                  className=\"ml-4 px-3 py-1 bg-white bg-opacity-20 rounded hover:bg-opacity-30 text-sm\"\n                >\n                  Resolve\n                </button>\n              </div>\n            </Alert>\n          ))}\n        </div>\n      )}\n\n      {/* Device Grid */}\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {devices.map((device) => (\n          <Card \n            key={device.id} \n            className={`cursor-pointer transition-all hover:shadow-md ${\n              selectedDevice === device.id ? 'ring-2 ring-blue-500 bg-blue-50' : ''\n            }`}\n            onClick={() => setSelectedDevice(device.id)}\n          >\n            <div className=\"flex items-start justify-between mb-3\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-10 h-10 bg-gray-100 rounded-lg flex items-center justify-center\">\n                  {getDeviceIcon(device.type)}\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">{device.name}</h3>\n                  <p className=\"text-sm text-gray-600\">{device.brand} {device.model}</p>\n                </div>\n              </div>\n              {getStatusIcon(device.status)}\n            </div>\n\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-gray-600\">Status:</span>\n                <span className={`font-medium capitalize ${getStatusColor(device.status)}`}>\n                  {device.status.replace('_', ' ')}\n                </span>\n              </div>\n\n              {device.battery_level && (\n                <div className=\"flex items-center justify-between text-sm\">\n                  <span className=\"text-gray-600\">Battery:</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-8 h-2 bg-gray-200 rounded-full overflow-hidden\">\n                      <div \n                        className={`h-full rounded-full ${\n                          device.battery_level > 50 ? 'bg-green-500' :\n                          device.battery_level > 20 ? 'bg-yellow-500' : 'bg-red-500'\n                        }`}\n                        style={{ width: `${device.battery_level}%` }}\n                      />\n                    </div>\n                    <span className=\"font-medium\">{device.battery_level}%</span>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-gray-600\">Connection:</span>\n                <div className=\"flex items-center space-x-1\">\n                  {getConnectionIcon(device.connection_type)}\n                  <span className=\"font-medium capitalize\">{device.connection_type}</span>\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-gray-600\">Last sync:</span>\n                <span className=\"font-medium\">\n                  {new Date(device.last_sync).toLocaleTimeString()}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"mt-3 pt-3 border-t border-gray-200\">\n              <div className=\"text-xs text-gray-600 mb-1\">Data types:</div>\n              <div className=\"flex flex-wrap gap-1\">\n                {device.data_types.slice(0, 3).map((type, idx) => (\n                  <span key={idx} className=\"px-2 py-1 bg-blue-100 text-blue-600 rounded text-xs\">\n                    {type.replace('_', ' ')}\n                  </span>\n                ))}\n                {device.data_types.length > 3 && (\n                  <span className=\"px-2 py-1 bg-gray-100 text-gray-600 rounded text-xs\">\n                    +{device.data_types.length - 3}\n                  </span>\n                )}\n              </div>\n            </div>\n          </Card>\n        ))}\n\n        {/* Add Device Card */}\n        <Card className=\"border-2 border-dashed border-gray-300 hover:border-blue-400 transition-colors\">\n          <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n            <div className=\"w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mb-3\">\n              <Plus className=\"w-6 h-6 text-gray-400\" />\n            </div>\n            <h3 className=\"font-medium text-gray-900 mb-1\">Add New Device</h3>\n            <p className=\"text-sm text-gray-600 mb-3\">Connect wearables, sensors, or monitors</p>\n            <button\n              onClick={scanForDevices}\n              disabled={isScanning}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400\"\n            >\n              {isScanning ? <LoadingSpinner size=\"sm\" /> : <Search className=\"w-4 h-4\" />}\n              <span>{isScanning ? 'Scanning...' : 'Scan for Devices'}</span>\n            </button>\n          </div>\n        </Card>\n      </div>\n\n      {/* Health Trends Overview */}\n      <Card>\n        <div className=\"flex items-center space-x-2 mb-6\">\n          <TrendingUp className=\"w-6 h-6 text-purple-500\" />\n          <h2 className=\"text-xl font-semibold text-gray-900\">Health Trends</h2>\n          <Tooltip content=\"AI-powered analysis of health metrics trends from connected devices\">\n            <Eye className=\"w-4 h-4 text-gray-400\" />\n          </Tooltip>\n        </div>\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {healthTrends.map((trend, index) => (\n            <div key={index} className={`p-4 rounded-lg border ${getHealthStatusColor(trend.status)}`}>\n              <div className=\"flex items-center justify-between mb-2\">\n                <h3 className=\"font-semibold text-gray-900\">{trend.metric}</h3>\n                {getTrendIcon(trend.trend_7d)}\n              </div>\n              \n              <div className=\"text-2xl font-bold mb-2\">{trend.current_value}</div>\n              \n              <div className=\"space-y-1 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">7-day trend:</span>\n                  <span className={`font-medium ${trend.trend_7d > 0 ? 'text-green-600' : trend.trend_7d < 0 ? 'text-red-600' : 'text-gray-600'}`}>\n                    {trend.trend_7d > 0 ? '+' : ''}{trend.trend_7d}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Percentile:</span>\n                  <span className=\"font-medium\">{trend.percentile_rank}th</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Target:</span>\n                  <span className=\"font-medium\">{trend.target_range[0]}-{trend.target_range[1]}</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Card>\n\n      {/* Selected Device Details */}\n      {selectedDeviceData && (\n        <Card>\n          <div className=\"flex items-center space-x-2 mb-6\">\n            {getDeviceIcon(selectedDeviceData.type)}\n            <h2 className=\"text-xl font-semibold text-gray-900\">{selectedDeviceData.name}</h2>\n            <span className={`px-2 py-1 rounded-full text-xs font-medium ${getHealthStatusColor(selectedDeviceData.status)}`}>\n              {selectedDeviceData.status.replace('_', ' ')}\n            </span>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-6 mb-6\">\n            <div>\n              <h3 className=\"font-medium text-gray-900 mb-3\">Device Information</h3>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Brand:</span>\n                  <span className=\"font-medium\">{selectedDeviceData.brand}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Model:</span>\n                  <span className=\"font-medium\">{selectedDeviceData.model}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Firmware:</span>\n                  <span className=\"font-medium\">{selectedDeviceData.firmware_version}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Connection:</span>\n                  <span className=\"font-medium capitalize\">{selectedDeviceData.connection_type}</span>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"font-medium text-gray-900 mb-3\">Sync Status</h3>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Last sync:</span>\n                  <span className=\"font-medium\">{new Date(selectedDeviceData.last_sync).toLocaleString()}</span>\n                </div>\n                {selectedDeviceData.battery_level && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">Battery:</span>\n                    <span className=\"font-medium\">{selectedDeviceData.battery_level}%</span>\n                  </div>\n                )}\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Data points:</span>\n                  <span className=\"font-medium\">{deviceReadings.length}</span>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"font-medium text-gray-900 mb-3\">Location</h3>\n              {selectedDeviceData.location ? (\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex items-center space-x-1\">\n                    <MapPin className=\"w-3 h-3 text-gray-400\" />\n                    <span className=\"text-gray-600\">{selectedDeviceData.location.address}</span>\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    {selectedDeviceData.location.latitude.toFixed(4)}, {selectedDeviceData.location.longitude.toFixed(4)}\n                  </div>\n                </div>\n              ) : (\n                <span className=\"text-sm text-gray-500\">Location not available</span>\n              )}\n            </div>\n          </div>\n\n          {/* Recent Readings */}\n          <div>\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"font-medium text-gray-900\">Recent Readings</h3>\n              <select\n                value={selectedTimeframe}\n                onChange={(e) => setSelectedTimeframe(e.target.value as any)}\n                className=\"border border-gray-300 rounded-md px-3 py-1 text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"1h\">Last Hour</option>\n                <option value=\"6h\">Last 6 Hours</option>\n                <option value=\"24h\">Last 24 Hours</option>\n                <option value=\"7d\">Last 7 Days</option>\n              </select>\n            </div>\n\n            {deviceReadings.length > 0 ? (\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Metric</th>\n                      <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Value</th>\n                      <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Quality</th>\n                      <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Time</th>\n                      <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Context</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200\">\n                    {deviceReadings.slice(0, 10).map((reading) => (\n                      <tr key={reading.id} className={reading.alert_triggered ? 'bg-red-50' : ''}>\n                        <td className=\"px-3 py-2 text-sm font-medium text-gray-900 capitalize\">\n                          {reading.metric.replace('_', ' ')}\n                        </td>\n                        <td className=\"px-3 py-2 text-sm text-gray-900\">\n                          {reading.value} {reading.unit}\n                          {reading.alert_triggered && <AlertTriangle className=\"w-3 h-3 text-red-500 inline ml-1\" />}\n                        </td>\n                        <td className=\"px-3 py-2 text-sm\">\n                          <span className={`px-2 py-1 rounded-full text-xs ${\n                            reading.quality === 'excellent' ? 'bg-green-100 text-green-600' :\n                            reading.quality === 'good' ? 'bg-blue-100 text-blue-600' :\n                            reading.quality === 'fair' ? 'bg-yellow-100 text-yellow-600' :\n                            'bg-red-100 text-red-600'\n                          }`}>\n                            {reading.quality}\n                          </span>\n                        </td>\n                        <td className=\"px-3 py-2 text-sm text-gray-600\">\n                          {new Date(reading.timestamp).toLocaleTimeString()}\n                        </td>\n                        <td className=\"px-3 py-2 text-sm text-gray-600\">\n                          {reading.context?.activity && (\n                            <span className=\"capitalize\">{reading.context.activity}</span>\n                          )}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <Activity className=\"w-8 h-8 mx-auto mb-2 text-gray-300\" />\n                <p className=\"text-gray-500\">No recent readings available</p>\n              </div>\n            )}\n          </div>\n        </Card>\n      )}\n\n      {/* System Summary */}\n      <Card className=\"bg-gray-50\">\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Monitor className=\"w-5 h-5 text-gray-400\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">System Overview</h3>\n        </div>\n        <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 text-center\">\n          <div>\n            <div className=\"text-2xl font-bold text-green-600\">{devices.filter(d => d.status === 'connected').length}</div>\n            <div className=\"text-sm text-gray-600\">Connected</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-red-600\">{devices.filter(d => d.status === 'disconnected').length}</div>\n            <div className=\"text-sm text-gray-600\">Offline</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-yellow-600\">{devices.filter(d => d.status === 'low_battery').length}</div>\n            <div className=\"text-sm text-gray-600\">Low Battery</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-blue-600\">{readings.length}</div>\n            <div className=\"text-sm text-gray-600\">Total Readings</div>\n          </div>\n          <div>\n            <div className=\"text-2xl font-bold text-purple-600\">{alerts.filter(a => !a.resolved).length}</div>\n            <div className=\"text-sm text-gray-600\">Active Alerts</div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default IoTMonitoringSystem;\n"],"names":["__iconNode","BatteryLow","createLucideIcon","Bluetooth","Droplets","Radio","Watch","IoTMonitoringSystem","state","usePatient","currentPatient","devices","setDevices","useState","readings","setReadings","alerts","setAlerts","healthTrends","setHealthTrends","selectedDevice","setSelectedDevice","selectedTimeframe","setSelectedTimeframe","realTimeEnabled","setRealTimeEnabled","isScanning","setIsScanning","intervalRef","useRef","useEffect","initializeDevices","startRealTimeMonitoring","demoDevices","generateInitialReadings","generateHealthTrends","deviceList","now","device","dataType","i","timestamp","generateReading","deviceId","metric","config","value","d","newReading","prev","generateDeviceAlert","reading","alertTypes","alert","newAlert","scanForDevices","resolve","newDevice","getDeviceIcon","type","jsx","Activity","Monitor","Heart","Smartphone","getStatusColor","status","getStatusIcon","CheckCircle","WifiOff","AlertTriangle","LoadingSpinner","getConnectionIcon","Wifi","Zap","getTrendIcon","trend","TrendingUp","TrendingDown","getHealthStatusColor","selectedDeviceData","deviceReadings","r","jsxs","Card","a","Alert","idx","Plus","Search","Tooltip","Eye","index","MapPin","e"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}