{"version":3,"file":"ClinicalDecisionSupport-Bb9jb5ei.js","sources":["../../src/components/AI/ClinicalDecisionSupport.tsx","../../src/pages/ClinicalDecisionSupport.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Brain, Target, TrendingUp, AlertTriangle, CheckCircle, Clock, Users, FileText, Lightbulb, Activity, Shield } from 'lucide-react';\nimport Card from '../UI/Card';\n\ninterface ClinicalRecommendation {\n  id: string;\n  type: 'drug_selection' | 'dosing' | 'monitoring' | 'alternative' | 'contraindication' | 'genetic_testing';\n  priority: 'critical' | 'high' | 'medium' | 'low';\n  confidence: number;\n  title: string;\n  description: string;\n  rationale: string;\n  evidence: string[];\n  actions: string[];\n  alternatives?: string[];\n  monitoring?: string[];\n  timeline?: string;\n  cost?: 'low' | 'medium' | 'high';\n  efficacy?: number;\n  safety?: number;\n}\n\ninterface PatientProfile {\n  demographics: {\n    age: number;\n    gender: 'male' | 'female' | 'other';\n    weight: number;\n    height: number;\n    ethnicity?: string;\n  };\n  diagnosis: {\n    primary: string;\n    stage?: string;\n    histology?: string;\n    biomarkers?: Record<string, string>;\n    prognosis?: 'excellent' | 'good' | 'fair' | 'poor';\n  };\n  medicalHistory: {\n    comorbidities: string[];\n    previousTreatments: string[];\n    allergies: string[];\n    familyHistory: string[];\n  };\n  labValues: {\n    creatinine?: number;\n    bilirubin?: number;\n    ast?: number;\n    alt?: number;\n    plateletCount?: number;\n    neutrophilCount?: number;\n    hemoglobin?: number;\n  };\n  genetics: {\n    tested: boolean;\n    variants?: Record<string, string>;\n    phenotypes?: Record<string, string>;\n  };\n  preferences: {\n    qualityOfLife?: number;\n    treatmentGoals?: string[];\n    contraindications?: string[];\n  };\n}\n\ninterface ClinicalDecisionSupportProps {\n  patientProfile: PatientProfile;\n  currentMedications: string[];\n  proposedTreatment?: string;\n  onRecommendationAccept: (recommendation: ClinicalRecommendation) => void;\n}\n\nconst ClinicalDecisionSupport: React.FC<ClinicalDecisionSupportProps> = ({\n  patientProfile,\n  currentMedications,\n  proposedTreatment,\n  onRecommendationAccept\n}) => {\n  const [recommendations, setRecommendations] = useState<ClinicalRecommendation[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [selectedPriority, setSelectedPriority] = useState<string>('all');\n  const [acceptedRecommendations, setAcceptedRecommendations] = useState<Set<string>>(new Set());\n\n  // AI-powered recommendation generation\n  const generateRecommendations = async () => {\n    setLoading(true);\n\n    // Simulate AI analysis\n    await new Promise(resolve => setTimeout(resolve, 2000));\n\n    const recs: ClinicalRecommendation[] = [];\n\n    // Age-based recommendations\n    if (patientProfile.demographics.age > 65) {\n      recs.push({\n        id: '1',\n        type: 'dosing',\n        priority: 'high',\n        confidence: 90,\n        title: 'Geriatric Dosing Adjustment',\n        description: 'Consider reduced initial dosing due to advanced age',\n        rationale: 'Elderly patients have reduced clearance and increased sensitivity to chemotherapy',\n        evidence: ['Geriatric Oncology Guidelines', 'Age-adjusted dosing studies'],\n        actions: ['Reduce initial dose by 20-25%', 'Monitor closely for toxicity'],\n        monitoring: ['CBC weekly', 'Comprehensive metabolic panel', 'Performance status'],\n        timeline: 'Before treatment initiation',\n        cost: 'low',\n        efficacy: 85,\n        safety: 95\n      });\n    }\n\n    // Genetic testing recommendations\n    if (!patientProfile.genetics.tested && patientProfile.diagnosis.primary.includes('breast')) {\n      recs.push({\n        id: '2',\n        type: 'genetic_testing',\n        priority: 'high',\n        confidence: 95,\n        title: 'BRCA Testing Recommended',\n        description: 'Genetic testing for BRCA1/2 mutations indicated',\n        rationale: 'Results will guide treatment selection and family counseling',\n        evidence: ['NCCN Guidelines', 'ASCO/SGO Guidelines'],\n        actions: ['Order BRCA1/2 testing', 'Consider genetic counseling'],\n        alternatives: ['Germline vs somatic testing', 'Multigene panel'],\n        timeline: 'Before treatment decision',\n        cost: 'medium',\n        efficacy: 90,\n        safety: 100\n      });\n    }\n\n    // Renal function considerations\n    if (patientProfile.labValues.creatinine && patientProfile.labValues.creatinine > 1.5) {\n      recs.push({\n        id: '3',\n        type: 'dosing',\n        priority: 'critical',\n        confidence: 95,\n        title: 'Renal Dose Adjustment Required',\n        description: 'Significant renal impairment detected - dose adjustment needed',\n        rationale: 'Elevated creatinine indicates reduced drug clearance',\n        evidence: ['Kidney Disease Guidelines', 'Pharmacokinetic studies'],\n        actions: ['Calculate CrCl using Cockcroft-Gault', 'Adjust dose per renal function'],\n        monitoring: ['Creatinine before each cycle', 'Electrolytes', 'Urine output'],\n        timeline: 'Immediate',\n        cost: 'low',\n        efficacy: 80,\n        safety: 98\n      });\n    }\n\n    // Biomarker-based treatment selection\n    if (patientProfile.diagnosis.biomarkers?.HER2 === 'positive') {\n      recs.push({\n        id: '4',\n        type: 'drug_selection',\n        priority: 'high',\n        confidence: 98,\n        title: 'HER2-Targeted Therapy Indicated',\n        description: 'HER2-positive status indicates benefit from targeted therapy',\n        rationale: 'HER2-targeted agents significantly improve outcomes in HER2+ cancers',\n        evidence: ['Multiple RCTs', 'FDA approval studies', 'Real-world evidence'],\n        actions: ['Add trastuzumab to regimen', 'Consider pertuzumab combination'],\n        alternatives: ['Trastuzumab emtansine (T-DM1)', 'Trastuzumab deruxtecan'],\n        monitoring: ['ECHO/MUGA before treatment', 'Cardiac function q3months'],\n        timeline: 'Treatment planning',\n        cost: 'high',\n        efficacy: 95,\n        safety: 88\n      });\n    }\n\n    // Drug interaction check\n    if (currentMedications.includes('warfarin') && proposedTreatment?.includes('fluorouracil')) {\n      recs.push({\n        id: '5',\n        type: 'contraindication',\n        priority: 'critical',\n        confidence: 92,\n        title: 'Major Drug Interaction Detected',\n        description: 'Warfarin and 5-FU interaction increases bleeding risk',\n        rationale: '5-FU inhibits warfarin metabolism leading to increased anticoagulation',\n        evidence: ['Drug interaction studies', 'Case reports'],\n        actions: ['Consider alternative anticoagulant', 'If unavoidable, reduce warfarin dose'],\n        alternatives: ['Apixaban', 'Rivaroxaban', 'Enoxaparin'],\n        monitoring: ['INR weekly', 'Signs of bleeding', 'CBC'],\n        timeline: 'Before treatment start',\n        cost: 'medium',\n        efficacy: 90,\n        safety: 70\n      });\n    }\n\n    // Performance status considerations\n    if (patientProfile.preferences.qualityOfLife && patientProfile.preferences.qualityOfLife < 70) {\n      recs.push({\n        id: '6',\n        type: 'alternative',\n        priority: 'medium',\n        confidence: 85,\n        title: 'Consider Less Intensive Regimen',\n        description: 'Poor performance status suggests need for modified approach',\n        rationale: 'Quality of life preservation is priority given current functional status',\n        evidence: ['QOL studies', 'Palliative care guidelines'],\n        actions: ['Discuss goals of care', 'Consider single-agent therapy'],\n        alternatives: ['Palliative care consultation', 'Best supportive care'],\n        timeline: 'Treatment planning',\n        cost: 'low',\n        efficacy: 60,\n        safety: 85\n      });\n    }\n\n    // Hepatic function check\n    if (patientProfile.labValues.bilirubin && patientProfile.labValues.bilirubin > 2.0) {\n      recs.push({\n        id: '7',\n        type: 'dosing',\n        priority: 'high',\n        confidence: 90,\n        title: 'Hepatic Dose Adjustment Required',\n        description: 'Elevated bilirubin requires dose modification',\n        rationale: 'Hepatic impairment reduces drug metabolism',\n        evidence: ['Hepatic impairment studies', 'FDA guidelines'],\n        actions: ['Reduce dose by 50% for moderate impairment', 'Consider alternative'],\n        monitoring: ['LFTs before each cycle', 'Bilirubin trend'],\n        timeline: 'Before treatment',\n        cost: 'low',\n        efficacy: 75,\n        safety: 92\n      });\n    }\n\n    setRecommendations(recs);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (patientProfile) {\n      generateRecommendations();\n    }\n  }, [patientProfile, currentMedications, proposedTreatment]);\n\n  const filteredRecommendations = useMemo(() => {\n    return recommendations.filter(rec => {\n      if (selectedCategory !== 'all' && rec.type !== selectedCategory) return false;\n      if (selectedPriority !== 'all' && rec.priority !== selectedPriority) return false;\n      return true;\n    });\n  }, [recommendations, selectedCategory, selectedPriority]);\n\n  const priorityStats = useMemo(() => {\n    const stats = { critical: 0, high: 0, medium: 0, low: 0 };\n    recommendations.forEach(rec => stats[rec.priority]++);\n    return stats;\n  }, [recommendations]);\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'critical': return 'text-red-600 bg-red-50 border-red-200';\n      case 'high': return 'text-orange-600 bg-orange-50 border-orange-200';\n      case 'medium': return 'text-yellow-600 bg-yellow-50 border-yellow-200';\n      case 'low': return 'text-green-600 bg-green-50 border-green-200';\n      default: return 'text-gray-600 bg-gray-50 border-gray-200';\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'drug_selection': return <Target className=\"w-5 h-5\" />;\n      case 'dosing': return <Activity className=\"w-5 h-5\" />;\n      case 'monitoring': return <Clock className=\"w-5 h-5\" />;\n      case 'alternative': return <Lightbulb className=\"w-5 h-5\" />;\n      case 'contraindication': return <AlertTriangle className=\"w-5 h-5\" />;\n      case 'genetic_testing': return <FileText className=\"w-5 h-5\" />;\n      default: return <Brain className=\"w-5 h-5\" />;\n    }\n  };\n\n  const formatType = (type: string) => {\n    return type.split('_').map(word => \n      word.charAt(0).toUpperCase() + word.slice(1)\n    ).join(' ');\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <Card>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Brain className=\"w-6 h-6 text-primary-600\" />\n            <h2 className=\"text-xl font-semibold text-gray-900\">AI Clinical Decision Support</h2>\n            <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n              <Target className=\"w-4 h-4\" />\n              <span>Precision Medicine</span>\n            </div>\n          </div>\n          {loading && (\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-4 h-4 border-2 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n              <span className=\"text-sm text-gray-500\">Analyzing patient data...</span>\n            </div>\n          )}\n        </div>\n\n        {/* Stats Dashboard */}\n        <div className=\"mt-6 grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-red-600\">{priorityStats.critical}</div>\n            <div className=\"text-sm text-gray-500\">Critical</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-orange-600\">{priorityStats.high}</div>\n            <div className=\"text-sm text-gray-500\">High Priority</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-yellow-600\">{priorityStats.medium}</div>\n            <div className=\"text-sm text-gray-500\">Medium Priority</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-primary-600\">{recommendations.length}</div>\n            <div className=\"text-sm text-gray-500\">Total Recommendations</div>\n          </div>\n        </div>\n      </Card>\n\n      {/* Patient Summary */}\n      <Card>\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Users className=\"w-5 h-5 text-primary-600\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">Patient Profile Summary</h3>\n        </div>\n        <div className=\"grid md:grid-cols-3 gap-6\">\n          <div>\n            <h4 className=\"font-medium text-gray-900 mb-2\">Demographics</h4>\n            <div className=\"space-y-1 text-sm\">\n              <div>{patientProfile.demographics.age}y {patientProfile.demographics.gender}</div>\n              <div>{patientProfile.demographics.weight}kg, {patientProfile.demographics.height}cm</div>\n              {patientProfile.demographics.ethnicity && (\n                <div>{patientProfile.demographics.ethnicity}</div>\n              )}\n            </div>\n          </div>\n          <div>\n            <h4 className=\"font-medium text-gray-900 mb-2\">Diagnosis</h4>\n            <div className=\"space-y-1 text-sm\">\n              <div>{patientProfile.diagnosis.primary}</div>\n              {patientProfile.diagnosis.stage && <div>Stage {patientProfile.diagnosis.stage}</div>}\n              {patientProfile.diagnosis.biomarkers && (\n                <div className=\"mt-2\">\n                  {Object.entries(patientProfile.diagnosis.biomarkers).map(([marker, status]) => (\n                    <span key={marker} className=\"inline-block mr-2 px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded\">\n                      {marker}: {status}\n                    </span>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n          <div>\n            <h4 className=\"font-medium text-gray-900 mb-2\">Key Labs</h4>\n            <div className=\"space-y-1 text-sm\">\n              {patientProfile.labValues.creatinine && (\n                <div>Creatinine: {patientProfile.labValues.creatinine} mg/dL</div>\n              )}\n              {patientProfile.labValues.bilirubin && (\n                <div>Bilirubin: {patientProfile.labValues.bilirubin} mg/dL</div>\n              )}\n              {patientProfile.labValues.hemoglobin && (\n                <div>Hemoglobin: {patientProfile.labValues.hemoglobin} g/dL</div>\n              )}\n            </div>\n          </div>\n        </div>\n      </Card>\n\n      {/* Filters */}\n      <Card>\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Recommendations ({filteredRecommendations.length})</h3>\n          <div className=\"flex space-x-3\">\n            <select\n              value={selectedCategory}\n              onChange={(e) => setSelectedCategory(e.target.value)}\n              className=\"text-sm border-gray-300 rounded-md\"\n            >\n              <option value=\"all\">All Categories</option>\n              <option value=\"drug_selection\">Drug Selection</option>\n              <option value=\"dosing\">Dosing</option>\n              <option value=\"monitoring\">Monitoring</option>\n              <option value=\"alternative\">Alternatives</option>\n              <option value=\"contraindication\">Contraindications</option>\n              <option value=\"genetic_testing\">Genetic Testing</option>\n            </select>\n            <select\n              value={selectedPriority}\n              onChange={(e) => setSelectedPriority(e.target.value)}\n              className=\"text-sm border-gray-300 rounded-md\"\n            >\n              <option value=\"all\">All Priorities</option>\n              <option value=\"critical\">Critical</option>\n              <option value=\"high\">High</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"low\">Low</option>\n            </select>\n          </div>\n        </div>\n      </Card>\n\n      {/* Recommendations List */}\n      <div className=\"space-y-4\">\n        {filteredRecommendations.map(recommendation => (\n          <Card key={recommendation.id}>\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className={`flex items-center space-x-2 px-3 py-1 rounded-full border ${getPriorityColor(recommendation.priority)}`}>\n                  {getTypeIcon(recommendation.type)}\n                  <span className=\"text-sm font-medium\">{formatType(recommendation.type)}</span>\n                </div>\n                <div className={`px-3 py-1 rounded-full text-xs font-medium ${getPriorityColor(recommendation.priority)}`}>\n                  {recommendation.priority.toUpperCase()}\n                </div>\n                <div className=\"text-sm text-gray-500\">\n                  Confidence: {recommendation.confidence}%\n                </div>\n              </div>\n              <button\n                onClick={() => {\n                  setAcceptedRecommendations(prev => new Set(prev).add(recommendation.id));\n                  onRecommendationAccept(recommendation);\n                }}\n                disabled={acceptedRecommendations.has(recommendation.id)}\n                className={`px-4 py-2 text-sm rounded-lg transition-colors ${\n                  acceptedRecommendations.has(recommendation.id)\n                    ? 'bg-green-600 text-white cursor-not-allowed'\n                    : 'bg-primary-600 text-white hover:bg-primary-700'\n                }`}\n              >\n                {acceptedRecommendations.has(recommendation.id) ? (\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"w-4 h-4\" />\n                    <span>Accepted</span>\n                  </div>\n                ) : (\n                  'Accept'\n                )}\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-semibold text-gray-900 mb-2\">{recommendation.title}</h4>\n                <p className=\"text-gray-700\">{recommendation.description}</p>\n                <p className=\"text-sm text-gray-600 mt-2\">{recommendation.rationale}</p>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <h5 className=\"font-medium text-gray-900 mb-2\">Recommended Actions</h5>\n                  <ul className=\"space-y-1\">\n                    {recommendation.actions.map((action, index) => (\n                      <li key={index} className=\"text-sm flex items-start space-x-2\">\n                        <CheckCircle className=\"w-4 h-4 text-green-500 flex-shrink-0 mt-0.5\" />\n                        <span>{action}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n\n                <div>\n                  {recommendation.alternatives && (\n                    <div className=\"mb-4\">\n                      <h5 className=\"font-medium text-gray-900 mb-2\">Alternatives</h5>\n                      <div className=\"space-x-2\">\n                        {recommendation.alternatives.map(alt => (\n                          <span key={alt} className=\"inline-block px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded\">\n                            {alt}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {recommendation.monitoring && (\n                    <div>\n                      <h5 className=\"font-medium text-gray-900 mb-2\">Monitoring</h5>\n                      <ul className=\"space-y-1\">\n                        {recommendation.monitoring.map((monitor, index) => (\n                          <li key={index} className=\"text-sm flex items-start space-x-2\">\n                            <Clock className=\"w-4 h-4 text-gray-400 flex-shrink-0 mt-0.5\" />\n                            <span>{monitor}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Efficacy and Safety Metrics */}\n              {(recommendation.efficacy || recommendation.safety) && (\n                <div className=\"grid grid-cols-2 gap-4 pt-4 border-t border-gray-100\">\n                  {recommendation.efficacy && (\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-700 mb-1\">Expected Efficacy</div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div \n                          className=\"bg-green-600 h-2 rounded-full\" \n                          style={{ width: `${recommendation.efficacy}%` }}\n                        ></div>\n                      </div>\n                      <div className=\"text-xs text-gray-500 mt-1\">{recommendation.efficacy}%</div>\n                    </div>\n                  )}\n                  {recommendation.safety && (\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-700 mb-1\">Safety Profile</div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div \n                          className=\"bg-blue-600 h-2 rounded-full\" \n                          style={{ width: `${recommendation.safety}%` }}\n                        ></div>\n                      </div>\n                      <div className=\"text-xs text-gray-500 mt-1\">{recommendation.safety}%</div>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Evidence */}\n              <div className=\"pt-4 border-t border-gray-100\">\n                <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n                  <Shield className=\"w-4 h-4\" />\n                  <span>Evidence:</span>\n                  <span>{recommendation.evidence.join(', ')}</span>\n                </div>\n              </div>\n            </div>\n          </Card>\n        ))}\n      </div>\n\n      {filteredRecommendations.length === 0 && !loading && (\n        <Card>\n          <div className=\"text-center py-12\">\n            <Brain className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Recommendations</h3>\n            <p className=\"text-gray-500\">\n              {recommendations.length === 0 \n                ? 'No clinical recommendations generated for this patient profile'\n                : 'No recommendations match the selected filters'\n              }\n            </p>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default ClinicalDecisionSupport;","import React from 'react';\nimport ClinicalDecisionSupport from '../components/AI/ClinicalDecisionSupport';\n\nconst ClinicalDecisionSupportPage: React.FC = () => {\n  // Mock patient profile for demonstration\n  const mockPatientProfile = {\n    demographics: {\n      age: 62,\n      gender: 'female' as const,\n      weight: 68,\n      height: 165,\n      ethnicity: 'Caucasian'\n    },\n    diagnosis: {\n      primary: 'Invasive ductal carcinoma, breast',\n      stage: 'IIIA',\n      histology: 'Invasive ductal carcinoma',\n      biomarkers: {\n        'ER': 'positive',\n        'PR': 'positive', \n        'HER2': 'positive',\n        'Ki-67': '25%'\n      },\n      prognosis: 'good' as const\n    },\n    medicalHistory: {\n      comorbidities: ['Type 2 diabetes', 'Hypertension', 'Osteoporosis'],\n      previousTreatments: ['Metformin', 'Lisinopril', 'Alendronate'],\n      allergies: ['Penicillin', 'Sulfa drugs'],\n      familyHistory: ['Breast cancer (mother)', 'Ovarian cancer (sister)']\n    },\n    labValues: {\n      creatinine: 1.1,\n      bilirubin: 0.8,\n      ast: 28,\n      alt: 32,\n      plateletCount: 180000,\n      neutrophilCount: 4200,\n      hemoglobin: 12.5\n    },\n    genetics: {\n      tested: true,\n      variants: {\n        'BRCA1': 'wildtype',\n        'BRCA2': 'wildtype',\n        'CYP2D6': '*1/*2',\n        'CYP2C19': '*1/*17'\n      },\n      phenotypes: {\n        'CYP2D6': 'Intermediate metabolizer',\n        'CYP2C19': 'Rapid metabolizer'\n      }\n    },\n    preferences: {\n      qualityOfLife: 85,\n      treatmentGoals: ['Cure', 'Maintain quality of life', 'Minimal side effects'],\n      contraindications: ['Pregnancy', 'Severe cardiac dysfunction']\n    }\n  };\n\n  const currentMedications = [\n    'Metformin 1000mg BID',\n    'Lisinopril 10mg daily',\n    'Alendronate 70mg weekly'\n  ];\n\n  const proposedTreatment = 'Trastuzumab + Pertuzumab + Docetaxel + Carboplatin (TCHP regimen)';\n\n  const handleRecommendationAccept = (recommendation: any) => {\n    console.log('Accepted recommendation:', recommendation);\n    \n    // Show user feedback\n    alert(`✅ Recommendation \"${recommendation.title}\" has been accepted and will be integrated into the treatment plan.`);\n    \n    // In a real app, this would integrate with EHR or treatment planning system\n    // For now, we'll simulate the integration\n    setTimeout(() => {\n      console.log('Recommendation integrated into EHR system:', {\n        recommendationId: recommendation.id,\n        patientId: 'mock-patient-123',\n        timestamp: new Date().toISOString(),\n        status: 'accepted'\n      });\n    }, 1000);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">AI Clinical Decision Support</h1>\n        <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n          Intelligent treatment recommendations based on patient profile, genomics, biomarkers, and evidence-based medicine to optimize clinical outcomes.\n        </p>\n      </div>\n      \n      <ClinicalDecisionSupport\n        patientProfile={mockPatientProfile}\n        currentMedications={currentMedications}\n        proposedTreatment={proposedTreatment}\n        onRecommendationAccept={handleRecommendationAccept}\n      />\n    </div>\n  );\n};\n\nexport default ClinicalDecisionSupportPage;"],"names":["ClinicalDecisionSupport","patientProfile","currentMedications","proposedTreatment","onRecommendationAccept","recommendations","setRecommendations","useState","loading","setLoading","selectedCategory","setSelectedCategory","selectedPriority","setSelectedPriority","acceptedRecommendations","setAcceptedRecommendations","generateRecommendations","resolve","recs","useEffect","filteredRecommendations","useMemo","rec","priorityStats","stats","getPriorityColor","priority","getTypeIcon","type","jsx","Target","Activity","Clock","Lightbulb","AlertTriangle","FileText","Brain","formatType","word","jsxs","Card","Users","marker","status","e","recommendation","prev","CheckCircle","action","index","alt","monitor","Shield","ClinicalDecisionSupportPage","mockPatientProfile","handleRecommendationAccept"],"mappings":"wMAuEA,MAAMA,EAAkE,CAAC,CACvE,eAAAC,EACA,mBAAAC,EACA,kBAAAC,EACA,uBAAAC,CACF,IAAM,CACJ,KAAM,CAACC,EAAiBC,CAAkB,EAAIC,EAAAA,SAAmC,CAAA,CAAE,EAC7E,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAK,EACtC,CAACG,EAAkBC,CAAmB,EAAIJ,EAAAA,SAAiB,KAAK,EAChE,CAACK,EAAkBC,CAAmB,EAAIN,EAAAA,SAAiB,KAAK,EAChE,CAACO,EAAyBC,CAA0B,EAAIR,EAAAA,SAAsB,IAAI,GAAK,EAGvFS,EAA0B,SAAY,CAC1CP,EAAW,EAAI,EAGf,MAAM,IAAI,QAAQQ,GAAW,WAAWA,EAAS,GAAI,CAAC,EAEtD,MAAMC,EAAiC,CAAA,EAGnCjB,EAAe,aAAa,IAAM,IACpCiB,EAAK,KAAK,CACR,GAAI,IACJ,KAAM,SACN,SAAU,OACV,WAAY,GACZ,MAAO,8BACP,YAAa,sDACb,UAAW,oFACX,SAAU,CAAC,gCAAiC,6BAA6B,EACzE,QAAS,CAAC,gCAAiC,8BAA8B,EACzE,WAAY,CAAC,aAAc,gCAAiC,oBAAoB,EAChF,SAAU,8BACV,KAAM,MACN,SAAU,GACV,OAAQ,EAAA,CACT,EAIC,CAACjB,EAAe,SAAS,QAAUA,EAAe,UAAU,QAAQ,SAAS,QAAQ,GACvFiB,EAAK,KAAK,CACR,GAAI,IACJ,KAAM,kBACN,SAAU,OACV,WAAY,GACZ,MAAO,2BACP,YAAa,kDACb,UAAW,+DACX,SAAU,CAAC,kBAAmB,qBAAqB,EACnD,QAAS,CAAC,wBAAyB,6BAA6B,EAChE,aAAc,CAAC,8BAA+B,iBAAiB,EAC/D,SAAU,4BACV,KAAM,SACN,SAAU,GACV,OAAQ,GAAA,CACT,EAICjB,EAAe,UAAU,YAAcA,EAAe,UAAU,WAAa,KAC/EiB,EAAK,KAAK,CACR,GAAI,IACJ,KAAM,SACN,SAAU,WACV,WAAY,GACZ,MAAO,iCACP,YAAa,iEACb,UAAW,uDACX,SAAU,CAAC,4BAA6B,yBAAyB,EACjE,QAAS,CAAC,uCAAwC,gCAAgC,EAClF,WAAY,CAAC,+BAAgC,eAAgB,cAAc,EAC3E,SAAU,YACV,KAAM,MACN,SAAU,GACV,OAAQ,EAAA,CACT,EAICjB,EAAe,UAAU,YAAY,OAAS,YAChDiB,EAAK,KAAK,CACR,GAAI,IACJ,KAAM,iBACN,SAAU,OACV,WAAY,GACZ,MAAO,kCACP,YAAa,+DACb,UAAW,uEACX,SAAU,CAAC,gBAAiB,uBAAwB,qBAAqB,EACzE,QAAS,CAAC,6BAA8B,iCAAiC,EACzE,aAAc,CAAC,gCAAiC,wBAAwB,EACxE,WAAY,CAAC,6BAA8B,2BAA2B,EACtE,SAAU,qBACV,KAAM,OACN,SAAU,GACV,OAAQ,EAAA,CACT,EAIChB,EAAmB,SAAS,UAAU,GAAKC,GAAmB,SAAS,cAAc,GACvFe,EAAK,KAAK,CACR,GAAI,IACJ,KAAM,mBACN,SAAU,WACV,WAAY,GACZ,MAAO,kCACP,YAAa,wDACb,UAAW,yEACX,SAAU,CAAC,2BAA4B,cAAc,EACrD,QAAS,CAAC,qCAAsC,sCAAsC,EACtF,aAAc,CAAC,WAAY,cAAe,YAAY,EACtD,WAAY,CAAC,aAAc,oBAAqB,KAAK,EACrD,SAAU,yBACV,KAAM,SACN,SAAU,GACV,OAAQ,EAAA,CACT,EAICjB,EAAe,YAAY,eAAiBA,EAAe,YAAY,cAAgB,IACzFiB,EAAK,KAAK,CACR,GAAI,IACJ,KAAM,cACN,SAAU,SACV,WAAY,GACZ,MAAO,kCACP,YAAa,8DACb,UAAW,2EACX,SAAU,CAAC,cAAe,4BAA4B,EACtD,QAAS,CAAC,wBAAyB,+BAA+B,EAClE,aAAc,CAAC,+BAAgC,sBAAsB,EACrE,SAAU,qBACV,KAAM,MACN,SAAU,GACV,OAAQ,EAAA,CACT,EAICjB,EAAe,UAAU,WAAaA,EAAe,UAAU,UAAY,GAC7EiB,EAAK,KAAK,CACR,GAAI,IACJ,KAAM,SACN,SAAU,OACV,WAAY,GACZ,MAAO,mCACP,YAAa,gDACb,UAAW,6CACX,SAAU,CAAC,6BAA8B,gBAAgB,EACzD,QAAS,CAAC,6CAA8C,sBAAsB,EAC9E,WAAY,CAAC,yBAA0B,iBAAiB,EACxD,SAAU,mBACV,KAAM,MACN,SAAU,GACV,OAAQ,EAAA,CACT,EAGHZ,EAAmBY,CAAI,EACvBT,EAAW,EAAK,CAClB,EAEAU,EAAAA,UAAU,IAAM,CACVlB,GACFe,EAAA,CAEJ,EAAG,CAACf,EAAgBC,EAAoBC,CAAiB,CAAC,EAE1D,MAAMiB,EAA0BC,EAAAA,QAAQ,IAC/BhB,EAAgB,OAAOiB,GACxB,EAAAZ,IAAqB,OAASY,EAAI,OAASZ,GAC3CE,IAAqB,OAASU,EAAI,WAAaV,EAEpD,EACA,CAACP,EAAiBK,EAAkBE,CAAgB,CAAC,EAElDW,EAAgBF,EAAAA,QAAQ,IAAM,CAClC,MAAMG,EAAQ,CAAE,SAAU,EAAG,KAAM,EAAG,OAAQ,EAAG,IAAK,CAAA,EACtD,OAAAnB,EAAgB,QAAQiB,GAAOE,EAAMF,EAAI,QAAQ,GAAG,EAC7CE,CACT,EAAG,CAACnB,CAAe,CAAC,EAEdoB,EAAoBC,GAAqB,CAC7C,OAAQA,EAAA,CACN,IAAK,WAAY,MAAO,wCACxB,IAAK,OAAQ,MAAO,iDACpB,IAAK,SAAU,MAAO,iDACtB,IAAK,MAAO,MAAO,8CACnB,QAAS,MAAO,0CAAA,CAEpB,EAEMC,EAAeC,GAAiB,CACpC,OAAQA,EAAA,CACN,IAAK,iBAAkB,OAAOC,EAAAA,IAACC,EAAA,CAAO,UAAU,SAAA,CAAU,EAC1D,IAAK,SAAU,OAAOD,EAAAA,IAACE,EAAA,CAAS,UAAU,SAAA,CAAU,EACpD,IAAK,aAAc,OAAOF,EAAAA,IAACG,EAAA,CAAM,UAAU,SAAA,CAAU,EACrD,IAAK,cAAe,OAAOH,EAAAA,IAACI,EAAA,CAAU,UAAU,SAAA,CAAU,EAC1D,IAAK,mBAAoB,OAAOJ,EAAAA,IAACK,EAAA,CAAc,UAAU,SAAA,CAAU,EACnE,IAAK,kBAAmB,OAAOL,EAAAA,IAACM,EAAA,CAAS,UAAU,SAAA,CAAU,EAC7D,QAAS,OAAON,EAAAA,IAACO,EAAA,CAAM,UAAU,SAAA,CAAU,CAAA,CAE/C,EAEMC,EAAcT,GACXA,EAAK,MAAM,GAAG,EAAE,IAAIU,GACzBA,EAAK,OAAO,CAAC,EAAE,YAAA,EAAgBA,EAAK,MAAM,CAAC,CAAA,EAC3C,KAAK,GAAG,EAGZ,OACEC,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,OAACC,EAAA,CACC,SAAA,CAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAV,EAAAA,IAACO,EAAA,CAAM,UAAU,0BAAA,CAA2B,EAC5CP,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,+BAA4B,EAChFU,EAAAA,KAAC,MAAA,CAAI,UAAU,oDACb,SAAA,CAAAV,EAAAA,IAACC,EAAA,CAAO,UAAU,SAAA,CAAU,EAC5BD,EAAAA,IAAC,QAAK,SAAA,oBAAA,CAAkB,CAAA,CAAA,CAC1B,CAAA,EACF,EACCrB,GACC+B,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAV,EAAAA,IAAC,MAAA,CAAI,UAAU,oFAAA,CAAqF,EACpGA,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,2BAAA,CAAyB,CAAA,CAAA,CACnE,CAAA,EAEJ,EAGAU,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAV,EAAAA,IAAC,MAAA,CAAI,UAAU,kCAAmC,SAAAN,EAAc,SAAS,EACzEM,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,UAAA,CAAQ,CAAA,EACjD,EACAU,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAV,EAAAA,IAAC,MAAA,CAAI,UAAU,qCAAsC,SAAAN,EAAc,KAAK,EACxEM,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,eAAA,CAAa,CAAA,EACtD,EACAU,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAV,EAAAA,IAAC,MAAA,CAAI,UAAU,qCAAsC,SAAAN,EAAc,OAAO,EAC1EM,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,iBAAA,CAAe,CAAA,EACxD,EACAU,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAV,EAAAA,IAAC,MAAA,CAAI,UAAU,sCAAuC,SAAAxB,EAAgB,OAAO,EAC7EwB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,uBAAA,CAAqB,CAAA,CAAA,CAC9D,CAAA,CAAA,CACF,CAAA,EACF,SAGCW,EAAA,CACC,SAAA,CAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAV,EAAAA,IAACY,EAAA,CAAM,UAAU,0BAAA,CAA2B,EAC5CZ,EAAAA,IAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,yBAAA,CAAuB,CAAA,EAC7E,EACAU,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAV,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,eAAY,EAC3DU,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAA,OAAC,MAAA,CAAK,SAAA,CAAAtC,EAAe,aAAa,IAAI,KAAGA,EAAe,aAAa,MAAA,EAAO,SAC3E,MAAA,CAAK,SAAA,CAAAA,EAAe,aAAa,OAAO,OAAKA,EAAe,aAAa,OAAO,IAAA,EAAE,EAClFA,EAAe,aAAa,iBAC1B,MAAA,CAAK,SAAAA,EAAe,aAAa,SAAA,CAAU,CAAA,CAAA,CAEhD,CAAA,EACF,SACC,MAAA,CACC,SAAA,CAAA4B,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,YAAS,EACxDU,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAV,EAAAA,IAAC,MAAA,CAAK,SAAA5B,EAAe,UAAU,QAAQ,EACtCA,EAAe,UAAU,OAASsC,EAAAA,KAAC,MAAA,CAAI,SAAA,CAAA,SAAOtC,EAAe,UAAU,KAAA,EAAM,EAC7EA,EAAe,UAAU,YACxB4B,EAAAA,IAAC,OAAI,UAAU,OACZ,SAAA,OAAO,QAAQ5B,EAAe,UAAU,UAAU,EAAE,IAAI,CAAC,CAACyC,EAAQC,CAAM,IACvEJ,EAAAA,KAAC,OAAA,CAAkB,UAAU,wEAC1B,SAAA,CAAAG,EAAO,KAAGC,CAAA,CAAA,EADFD,CAEX,CACD,CAAA,CACH,CAAA,CAAA,CAEJ,CAAA,EACF,SACC,MAAA,CACC,SAAA,CAAAb,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,WAAQ,EACvDU,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACZ,SAAA,CAAAtC,EAAe,UAAU,YACxBsC,EAAAA,KAAC,MAAA,CAAI,SAAA,CAAA,eAAatC,EAAe,UAAU,WAAW,QAAA,EAAM,EAE7DA,EAAe,UAAU,WACxBsC,EAAAA,KAAC,MAAA,CAAI,SAAA,CAAA,cAAYtC,EAAe,UAAU,UAAU,QAAA,EAAM,EAE3DA,EAAe,UAAU,YACxBsC,EAAAA,KAAC,MAAA,CAAI,SAAA,CAAA,eAAatC,EAAe,UAAU,WAAW,OAAA,CAAA,CAAK,CAAA,CAAA,CAE/D,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGA4B,MAACW,EAAA,CACC,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,CAAA,oBAAkBnB,EAAwB,OAAO,GAAA,EAAC,EACtGmB,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAAA,KAAC,SAAA,CACC,MAAO7B,EACP,SAAWkC,GAAMjC,EAAoBiC,EAAE,OAAO,KAAK,EACnD,UAAU,qCAEV,SAAA,CAAAf,EAAAA,IAAC,SAAA,CAAO,MAAM,MAAM,SAAA,iBAAc,EAClCA,EAAAA,IAAC,SAAA,CAAO,MAAM,iBAAiB,SAAA,iBAAc,EAC7CA,EAAAA,IAAC,SAAA,CAAO,MAAM,SAAS,SAAA,SAAM,EAC7BA,EAAAA,IAAC,SAAA,CAAO,MAAM,aAAa,SAAA,aAAU,EACrCA,EAAAA,IAAC,SAAA,CAAO,MAAM,cAAc,SAAA,eAAY,EACxCA,EAAAA,IAAC,SAAA,CAAO,MAAM,mBAAmB,SAAA,oBAAiB,EAClDA,EAAAA,IAAC,SAAA,CAAO,MAAM,kBAAkB,SAAA,iBAAA,CAAe,CAAA,CAAA,CAAA,EAEjDU,EAAAA,KAAC,SAAA,CACC,MAAO3B,EACP,SAAWgC,GAAM/B,EAAoB+B,EAAE,OAAO,KAAK,EACnD,UAAU,qCAEV,SAAA,CAAAf,EAAAA,IAAC,SAAA,CAAO,MAAM,MAAM,SAAA,iBAAc,EAClCA,EAAAA,IAAC,SAAA,CAAO,MAAM,WAAW,SAAA,WAAQ,EACjCA,EAAAA,IAAC,SAAA,CAAO,MAAM,OAAO,SAAA,OAAI,EACzBA,EAAAA,IAAC,SAAA,CAAO,MAAM,SAAS,SAAA,SAAM,EAC7BA,EAAAA,IAAC,SAAA,CAAO,MAAM,MAAM,SAAA,KAAA,CAAG,CAAA,CAAA,CAAA,CACzB,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAGAA,EAAAA,IAAC,OAAI,UAAU,YACZ,WAAwB,IAAIgB,UAC1BL,EAAA,CACC,SAAA,CAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,EAAAA,KAAC,OAAI,UAAW,6DAA6Dd,EAAiBoB,EAAe,QAAQ,CAAC,GACnH,SAAA,CAAAlB,EAAYkB,EAAe,IAAI,QAC/B,OAAA,CAAK,UAAU,sBAAuB,SAAAR,EAAWQ,EAAe,IAAI,CAAA,CAAE,CAAA,EACzE,EACAhB,EAAAA,IAAC,MAAA,CAAI,UAAW,8CAA8CJ,EAAiBoB,EAAe,QAAQ,CAAC,GACpG,SAAAA,EAAe,SAAS,YAAA,CAAY,CACvC,EACAN,EAAAA,KAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,CAAA,eACxBM,EAAe,WAAW,GAAA,CAAA,CACzC,CAAA,EACF,EACAhB,EAAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACbd,EAA2B+B,GAAQ,IAAI,IAAIA,CAAI,EAAE,IAAID,EAAe,EAAE,CAAC,EACvEzC,EAAuByC,CAAc,CACvC,EACA,SAAU/B,EAAwB,IAAI+B,EAAe,EAAE,EACvD,UAAW,kDACT/B,EAAwB,IAAI+B,EAAe,EAAE,EACzC,6CACA,gDACN,GAEC,SAAA/B,EAAwB,IAAI+B,EAAe,EAAE,EAC5CN,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAV,EAAAA,IAACkB,EAAA,CAAY,UAAU,SAAA,CAAU,EACjClB,EAAAA,IAAC,QAAK,SAAA,UAAA,CAAQ,CAAA,CAAA,CAChB,EAEA,QAAA,CAAA,CAEJ,EACF,EAEAU,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAV,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAoC,SAAAgB,EAAe,MAAM,EACvEhB,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAiB,WAAe,YAAY,EACzDA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA8B,WAAe,SAAA,CAAU,CAAA,EACtE,EAEAU,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAV,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,sBAAmB,EAClEA,EAAAA,IAAC,KAAA,CAAG,UAAU,YACX,SAAAgB,EAAe,QAAQ,IAAI,CAACG,EAAQC,IACnCV,OAAC,KAAA,CAAe,UAAU,qCACxB,SAAA,CAAAV,EAAAA,IAACkB,EAAA,CAAY,UAAU,6CAAA,CAA8C,EACrElB,EAAAA,IAAC,QAAM,SAAAmB,CAAA,CAAO,CAAA,CAAA,EAFPC,CAGT,CACD,CAAA,CACH,CAAA,EACF,SAEC,MAAA,CACE,SAAA,CAAAJ,EAAe,cACdN,OAAC,MAAA,CAAI,UAAU,OACb,SAAA,CAAAV,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,eAAY,EAC3DA,MAAC,MAAA,CAAI,UAAU,YACZ,WAAe,aAAa,IAAIqB,GAC/BrB,MAAC,QAAe,UAAU,mEACvB,SAAAqB,CAAA,EADQA,CAEX,CACD,CAAA,CACH,CAAA,EACF,EAGDL,EAAe,YACdN,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAV,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,aAAU,EACzDA,EAAAA,IAAC,KAAA,CAAG,UAAU,YACX,SAAAgB,EAAe,WAAW,IAAI,CAACM,EAASF,IACvCV,OAAC,KAAA,CAAe,UAAU,qCACxB,SAAA,CAAAV,EAAAA,IAACG,EAAA,CAAM,UAAU,4CAAA,CAA6C,EAC9DH,EAAAA,IAAC,QAAM,SAAAsB,CAAA,CAAQ,CAAA,CAAA,EAFRF,CAGT,CACD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,GAGEJ,EAAe,UAAYA,EAAe,SAC1CN,OAAC,MAAA,CAAI,UAAU,uDACZ,SAAA,CAAAM,EAAe,iBACb,MAAA,CACC,SAAA,CAAAhB,EAAAA,IAAC,MAAA,CAAI,UAAU,yCAAyC,SAAA,oBAAiB,EACzEA,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAU,gCACV,MAAO,CAAE,MAAO,GAAGgB,EAAe,QAAQ,GAAA,CAAI,CAAA,EAElD,EACAN,EAAAA,KAAC,MAAA,CAAI,UAAU,6BAA8B,SAAA,CAAAM,EAAe,SAAS,GAAA,CAAA,CAAC,CAAA,EACxE,EAEDA,EAAe,QACdN,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAV,EAAAA,IAAC,MAAA,CAAI,UAAU,yCAAyC,SAAA,iBAAc,EACtEA,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CACC,UAAU,+BACV,MAAO,CAAE,MAAO,GAAGgB,EAAe,MAAM,GAAA,CAAI,CAAA,EAEhD,EACAN,EAAAA,KAAC,MAAA,CAAI,UAAU,6BAA8B,SAAA,CAAAM,EAAe,OAAO,GAAA,CAAA,CAAC,CAAA,CAAA,CACtE,CAAA,EAEJ,QAID,MAAA,CAAI,UAAU,gCACb,SAAAN,EAAAA,KAAC,MAAA,CAAI,UAAU,oDACb,SAAA,CAAAV,EAAAA,IAACuB,EAAA,CAAO,UAAU,SAAA,CAAU,EAC5BvB,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,QACd,OAAA,CAAM,SAAAgB,EAAe,SAAS,KAAK,IAAI,CAAA,CAAE,CAAA,CAAA,CAC5C,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EA7HSA,EAAe,EA8H1B,CACD,EACH,EAECzB,EAAwB,SAAW,GAAK,CAACZ,SACvCgC,EAAA,CACC,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAV,EAAAA,IAACO,EAAA,CAAM,UAAU,sCAAA,CAAuC,EACxDP,EAAAA,IAAC,KAAA,CAAG,UAAU,yCAAyC,SAAA,qBAAkB,EACzEA,EAAAA,IAAC,KAAE,UAAU,gBACV,WAAgB,SAAW,EACxB,iEACA,+CAAA,CAEN,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EAEJ,CAEJ,EC7iBMwB,EAAwC,IAAM,CAElD,MAAMC,EAAqB,CACzB,aAAc,CACZ,IAAK,GACL,OAAQ,SACR,OAAQ,GACR,OAAQ,IACR,UAAW,WAAA,EAEb,UAAW,CACT,QAAS,oCACT,MAAO,OACP,UAAW,4BACX,WAAY,CACV,GAAM,WACN,GAAM,WACN,KAAQ,WACR,QAAS,KAAA,EAEX,UAAW,MAAA,EAEb,eAAgB,CACd,cAAe,CAAC,kBAAmB,eAAgB,cAAc,EACjE,mBAAoB,CAAC,YAAa,aAAc,aAAa,EAC7D,UAAW,CAAC,aAAc,aAAa,EACvC,cAAe,CAAC,yBAA0B,yBAAyB,CAAA,EAErE,UAAW,CACT,WAAY,IACZ,UAAW,GACX,IAAK,GACL,IAAK,GACL,cAAe,KACf,gBAAiB,KACjB,WAAY,IAAA,EAEd,SAAU,CACR,OAAQ,GACR,SAAU,CACR,MAAS,WACT,MAAS,WACT,OAAU,QACV,QAAW,QAAA,EAEb,WAAY,CACV,OAAU,2BACV,QAAW,mBAAA,CACb,EAEF,YAAa,CACX,cAAe,GACf,eAAgB,CAAC,OAAQ,2BAA4B,sBAAsB,EAC3E,kBAAmB,CAAC,YAAa,4BAA4B,CAAA,CAC/D,EAGIpD,EAAqB,CACzB,uBACA,wBACA,yBAAA,EAGIC,EAAoB,oEAEpBoD,EAA8BV,GAAwB,CAC1D,QAAQ,IAAI,2BAA4BA,CAAc,EAGtD,MAAM,qBAAqBA,EAAe,KAAK,qEAAqE,EAIpH,WAAW,IAAM,CACf,QAAQ,IAAI,6CAA8C,CACxD,iBAAkBA,EAAe,GACjC,UAAW,mBACX,UAAW,IAAI,KAAA,EAAO,YAAA,EACtB,OAAQ,UAAA,CACT,CACH,EAAG,GAAI,CACT,EAEA,OACEN,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAV,EAAAA,IAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,+BAA4B,EAClFA,EAAAA,IAAC,IAAA,CAAE,UAAU,0CAA0C,SAAA,kJAAA,CAEvD,CAAA,EACF,EAEAA,EAAAA,IAAC7B,EAAA,CACC,eAAgBsD,EAChB,mBAAApD,EACA,kBAAAC,EACA,uBAAwBoD,CAAA,CAAA,CAC1B,EACF,CAEJ"}