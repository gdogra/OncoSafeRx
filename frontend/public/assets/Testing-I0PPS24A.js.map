{"version":3,"file":"Testing-I0PPS24A.js","sources":["../../src/pages/Testing.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  TestTube, \n  Target, \n  CheckCircle, \n  AlertTriangle, \n  Users,\n  Play,\n  RotateCcw,\n  FileText,\n  Clock\n} from 'lucide-react';\nimport Card from '../components/UI/Card';\nimport Tooltip from '../components/UI/Tooltip';\n\nconst Testing: React.FC = () => {\n  const [testHistory, setTestHistory] = useState<any[]>([]);\n  const [currentTest, setCurrentTest] = useState<string | null>(null);\n\n\n  const testScenarios = [\n    {\n      id: 'drug-interaction',\n      title: 'Drug Interaction Alert',\n      description: 'Test how different personas respond to potential drug interactions',\n      difficulty: 'Medium',\n      estimatedTime: '5 min',\n      icon: AlertTriangle,\n      color: 'yellow'\n    },\n    {\n      id: 'dose-calculation',\n      title: 'Dose Calculation',\n      description: 'Test dosing calculations with various experience levels',\n      difficulty: 'Easy',\n      estimatedTime: '3 min',\n      icon: Target,\n      color: 'blue'\n    },\n    {\n      id: 'clinical-decision',\n      title: 'Clinical Decision Support',\n      description: 'Test complex clinical decision scenarios',\n      difficulty: 'Hard',\n      estimatedTime: '10 min',\n      icon: CheckCircle,\n      color: 'green'\n    },\n    {\n      id: 'genomics-workflow',\n      title: 'Genomics Analysis',\n      description: 'Test genomics interpretation workflows',\n      difficulty: 'Hard',\n      estimatedTime: '8 min',\n      icon: TestTube,\n      color: 'purple'\n    }\n  ];\n\n  const runTest = (scenarioId: string) => {\n    setCurrentTest(scenarioId);\n    \n    // Simulate test execution\n    setTimeout(() => {\n      const testResult = {\n        id: Date.now(),\n        scenarioId,\n        persona: 'Oncologist',\n        timestamp: new Date().toISOString(),\n        result: 'completed',\n        score: Math.floor(Math.random() * 100) + 1\n      };\n      \n      setTestHistory(prev => [testResult, ...prev]);\n      setCurrentTest(null);\n    }, 3000);\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'Easy': return 'text-green-700 bg-green-100';\n      case 'Medium': return 'text-yellow-700 bg-yellow-100';\n      case 'Hard': return 'text-red-700 bg-red-100';\n      default: return 'text-gray-700 bg-gray-100';\n    }\n  };\n\n  const getIconColor = (color: string) => {\n    switch (color) {\n      case 'yellow': return 'text-yellow-600 bg-yellow-100';\n      case 'blue': return 'text-blue-600 bg-blue-100';\n      case 'green': return 'text-green-600 bg-green-100';\n      case 'purple': return 'text-purple-600 bg-purple-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"text-center mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">System Testing & Validation</h1>\n        <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n          Test how different user personas interact with OncoSafeRx features. Switch personas to validate workflows, \n          UI behavior, and decision support across different user types and experience levels.\n        </p>\n      </div>\n\n      {/* Persona Selector */}\n\n      {/* Test Scenarios */}\n      <Card className=\"p-6\">\n        <div className=\"flex items-center space-x-2 mb-6\">\n          <TestTube className=\"w-6 h-6 text-primary-600\" />\n          <h2 className=\"text-xl font-semibold text-gray-900\">Test Scenarios</h2>\n        </div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-2 gap-6\">\n          {testScenarios.map((scenario) => {\n            const IconComponent = scenario.icon;\n            return (\n              <div\n                key={scenario.id}\n                className=\"border border-gray-200 rounded-lg p-6 hover:border-gray-300 transition-colors\"\n              >\n                <div className=\"flex items-start justify-between mb-4\">\n                  <div className={`w-12 h-12 rounded-lg flex items-center justify-center ${getIconColor(scenario.color)}`}>\n                    <IconComponent className=\"w-6 h-6\" />\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Tooltip \n                      content={`Difficulty: ${scenario.difficulty} - indicates complexity and required expertise level`}\n                      type=\"help\"\n                    >\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full cursor-help ${getDifficultyColor(scenario.difficulty)}`}>\n                        {scenario.difficulty}\n                      </span>\n                    </Tooltip>\n                    <Tooltip content=\"Estimated completion time for this test scenario\">\n                      <div className=\"flex items-center text-xs text-gray-500 cursor-help\">\n                        <Clock className=\"w-3 h-3 mr-1\" />\n                        {scenario.estimatedTime}\n                      </div>\n                    </Tooltip>\n                  </div>\n                </div>\n\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{scenario.title}</h3>\n                <p className=\"text-sm text-gray-600 mb-4\">{scenario.description}</p>\n\n                <button\n                  onClick={() => runTest(scenario.id)}\n                  disabled={currentTest === scenario.id}\n                  className={`w-full flex items-center justify-center space-x-2 px-4 py-2 rounded-md font-medium text-sm transition-colors ${\n                    currentTest === scenario.id\n                      ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                      : 'bg-primary-600 text-white hover:bg-primary-700'\n                  }`}\n                >\n                  {currentTest === scenario.id ? (\n                    <>\n                      <div className=\"w-4 h-4 border-2 border-gray-400 border-t-transparent rounded-full animate-spin\"></div>\n                      <span>Running Test...</span>\n                    </>\n                  ) : (\n                    <>\n                      <Play className=\"w-4 h-4\" />\n                      <span>Start Test</span>\n                    </>\n                  )}\n                </button>\n              </div>\n            );\n          })}\n        </div>\n      </Card>\n\n      {/* Test History */}\n      {testHistory.length > 0 && (\n        <Card className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-2\">\n              <FileText className=\"w-6 h-6 text-primary-600\" />\n              <h2 className=\"text-xl font-semibold text-gray-900\">Test History</h2>\n            </div>\n            <button\n              onClick={() => setTestHistory([])}\n              className=\"flex items-center space-x-2 px-3 py-1.5 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-md transition-colors\"\n            >\n              <RotateCcw className=\"w-4 h-4\" />\n              <span>Clear History</span>\n            </button>\n          </div>\n\n          <div className=\"space-y-3\">\n            {testHistory.map((test) => {\n              const scenario = testScenarios.find(s => s.id === test.scenarioId);\n              return (\n                <div key={test.id} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className={`w-8 h-8 rounded-lg flex items-center justify-center ${getIconColor(scenario?.color || 'gray')}`}>\n                      {scenario && <scenario.icon className=\"w-4 h-4\" />}\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">{scenario?.title || 'Unknown Test'}</h4>\n                      <div className=\"flex items-center space-x-3 text-sm text-gray-600\">\n                        <span>Persona: {test.persona}</span>\n                        <span>â€¢</span>\n                        <span>{new Date(test.timestamp).toLocaleString()}</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-3\">\n                    <span className=\"text-sm font-medium text-green-600\">Score: {test.score}%</span>\n                    <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </Card>\n      )}\n\n      {/* Testing Tips */}\n      <Card className=\"p-6 bg-blue-50 border border-blue-200\">\n        <div className=\"flex items-start space-x-3\">\n          <Users className=\"w-6 h-6 text-blue-600 mt-1\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-blue-900 mb-2\">Testing Tips</h3>\n            <div className=\"space-y-2 text-sm text-blue-800\">\n              <p><strong>Persona Testing:</strong> Switch between different personas to test how the system adapts to different user types and experience levels.</p>\n              <p><strong>Workflow Validation:</strong> Each persona has different preferences for risk tolerance, alert sensitivity, and decision support.</p>\n              <p><strong>UI Adaptation:</strong> Notice how the interface changes based on the selected persona's experience level and role.</p>\n              <p><strong>Feature Access:</strong> Different personas may have access to different features and capabilities within the system.</p>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Testing;"],"names":["Testing","testHistory","setTestHistory","useState","currentTest","setCurrentTest","testScenarios","AlertTriangle","Target","CheckCircle","TestTube","runTest","scenarioId","testResult","prev","getDifficultyColor","difficulty","getIconColor","color","jsxs","jsx","Card","scenario","IconComponent","Tooltip","Clock","Fragment","Play","FileText","RotateCcw","test","s","Users"],"mappings":"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"}