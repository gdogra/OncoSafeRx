{"version":3,"file":"DrugDatabase-C2haxOnZ.js","sources":["../../src/hooks/useAdvancedSearch.ts","../../src/components/Search/AdvancedSearchDialog.tsx","../../src/components/Search/SearchWithFavorites.tsx","../../src/components/DrugInfo/EnhancedDrugInfo.tsx","../../src/components/DrugInfo/DrugComparisonTool.tsx","../../src/pages/DrugDatabase.tsx"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport { Drug } from '../types';\n\nexport interface SearchFilter {\n  category: string;\n  subcategory?: string;\n  mechanism?: string;\n  indication?: string;\n  routeOfAdministration?: string;\n  isOncology?: boolean;\n  hasGenomicData?: boolean;\n  isOrphan?: boolean;\n  fdaApproved?: boolean;\n  clinicalTrialPhase?: string;\n}\n\nexport interface SearchHistory {\n  id: string;\n  query: string;\n  filters: SearchFilter;\n  timestamp: Date;\n  resultCount: number;\n}\n\nexport interface FavoriteItem {\n  id: string;\n  type: 'drug' | 'interaction' | 'protocol' | 'regimen';\n  itemId: string;\n  name: string;\n  timestamp: Date;\n  notes?: string;\n  tags: string[];\n}\n\nexport interface AdvancedSearchState {\n  query: string;\n  filters: SearchFilter;\n  results: Drug[];\n  isLoading: boolean;\n  history: SearchHistory[];\n  favorites: FavoriteItem[];\n  suggestions: string[];\n  recentSearches: string[];\n}\n\nconst STORAGE_KEYS = {\n  SEARCH_HISTORY: 'oncosaferx_search_history',\n  FAVORITES: 'oncosaferx_favorites',\n  RECENT_SEARCHES: 'oncosaferx_recent_searches'\n};\n\nexport const useAdvancedSearch = () => {\n  const [state, setState] = useState<AdvancedSearchState>({\n    query: '',\n    filters: {\n      category: '',\n      subcategory: '',\n      mechanism: '',\n      indication: '',\n      routeOfAdministration: '',\n      isOncology: undefined,\n      hasGenomicData: undefined,\n      isOrphan: undefined,\n      fdaApproved: undefined,\n      clinicalTrialPhase: ''\n    },\n    results: [],\n    isLoading: false,\n    history: [],\n    favorites: [],\n    suggestions: [],\n    recentSearches: []\n  });\n\n  // Load persisted data on mount\n  useEffect(() => {\n    try {\n      const savedHistory = localStorage.getItem(STORAGE_KEYS.SEARCH_HISTORY);\n      const savedFavorites = localStorage.getItem(STORAGE_KEYS.FAVORITES);\n      const savedRecent = localStorage.getItem(STORAGE_KEYS.RECENT_SEARCHES);\n\n      setState(prev => ({\n        ...prev,\n        history: savedHistory ? JSON.parse(savedHistory) : [],\n        favorites: savedFavorites ? JSON.parse(savedFavorites) : [],\n        recentSearches: savedRecent ? JSON.parse(savedRecent) : []\n      }));\n    } catch (error) {\n      console.error('Error loading search data from localStorage:', error);\n    }\n  }, []);\n\n  // Persist data when state changes\n  useEffect(() => {\n    try {\n      localStorage.setItem(STORAGE_KEYS.SEARCH_HISTORY, JSON.stringify(state.history));\n      localStorage.setItem(STORAGE_KEYS.FAVORITES, JSON.stringify(state.favorites));\n      localStorage.setItem(STORAGE_KEYS.RECENT_SEARCHES, JSON.stringify(state.recentSearches));\n    } catch (error) {\n      console.error('Error saving search data to localStorage:', error);\n    }\n  }, [state.history, state.favorites, state.recentSearches]);\n\n  const setQuery = (query: string) => {\n    setState(prev => ({ ...prev, query }));\n    generateSuggestions(query);\n  };\n\n  const setFilters = (filters: Partial<SearchFilter>) => {\n    setState(prev => ({\n      ...prev,\n      filters: { ...prev.filters, ...filters }\n    }));\n  };\n\n  const clearFilters = () => {\n    setState(prev => ({\n      ...prev,\n      filters: {\n        category: '',\n        subcategory: '',\n        mechanism: '',\n        indication: '',\n        routeOfAdministration: '',\n        isOncology: undefined,\n        hasGenomicData: undefined,\n        isOrphan: undefined,\n        fdaApproved: undefined,\n        clinicalTrialPhase: ''\n      }\n    }));\n  };\n\n  const generateSuggestions = (query: string) => {\n    if (query.length < 2) {\n      setState(prev => ({ ...prev, suggestions: [] }));\n      return;\n    }\n\n    // Generate suggestions based on common drug names, mechanisms, and indications\n    const commonSuggestions = [\n      'carboplatin', 'cisplatin', 'paclitaxel', 'docetaxel', 'doxorubicin',\n      'cyclophosphamide', 'bevacizumab', 'trastuzumab', 'pembrolizumab',\n      'nivolumab', 'rituximab', 'cetuximab', 'imatinib', 'erlotinib',\n      'gefitinib', 'sorafenib', 'sunitinib', 'regorafenib', 'lenvatinib',\n      'breast cancer', 'lung cancer', 'colorectal cancer', 'melanoma',\n      'lymphoma', 'leukemia', 'ovarian cancer', 'prostate cancer',\n      'EGFR inhibitor', 'PD-1 inhibitor', 'VEGF inhibitor', 'HER2 targeted',\n      'tyrosine kinase inhibitor', 'monoclonal antibody', 'checkpoint inhibitor'\n    ];\n\n    const suggestions = commonSuggestions\n      .filter(suggestion => \n        suggestion.toLowerCase().includes(query.toLowerCase())\n      )\n      .slice(0, 8);\n\n    setState(prev => ({ ...prev, suggestions }));\n  };\n\n  const performSearch = async () => {\n    setState(prev => ({ ...prev, isLoading: true }));\n\n    try {\n      const API_BASE = import.meta.env.VITE_API_URL || '/api';\n      let results: Drug[] = [];\n\n      if (state.query.trim()) {\n        // Use enhanced drug search API\n        const response = await fetch(`${API_BASE}/drugs/enhanced/search?q=${encodeURIComponent(state.query)}`);\n        \n        if (response.ok) {\n          const data = await response.json();\n          results = data.results.map((drugData: any) => ({\n            id: drugData.drug.rxcui,\n            rxcui: drugData.drug.rxcui,\n            name: drugData.drug.name,\n            genericName: drugData.drug.generic_name || drugData.drug.name,\n            brandNames: drugData.drug.brand_names || [],\n            category: drugData.drug.category || drugData.therapeuticClass || 'Unknown',\n            mechanism: drugData.drug.mechanism || drugData.mechanismOfAction || '',\n            indications: drugData.drug.indications || [],\n            contraindications: drugData.drug.contraindications || [],\n            sideEffects: drugData.drug.sideEffects || drugData.drug.adverse_reactions || [],\n            interactions: drugData.interactions || [],\n            dosing: drugData.drug.dosing || {},\n            monitoring: drugData.drug.monitoring || [],\n            fdaApproved: drugData.drug.fdaApproved !== false,\n            oncologyDrug: drugData.drug.oncologyDrug === true,\n            clinicalData: drugData\n          }));\n        } else {\n          // Fallback to basic drug search if enhanced search fails\n          const basicResponse = await fetch(`${API_BASE}/drugs/search?q=${encodeURIComponent(state.query)}`);\n          if (basicResponse.ok) {\n            const basicData = await basicResponse.json();\n            results = basicData.results.map((drug: any) => ({\n              id: drug.rxcui,\n              rxcui: drug.rxcui,\n              name: drug.name,\n              genericName: drug.generic_name || drug.name,\n              brandNames: drug.brand_names || [],\n              category: drug.therapeutic_class || 'Unknown',\n              mechanism: '',\n              indications: [],\n              contraindications: [],\n              sideEffects: [],\n              interactions: [],\n              dosing: {},\n              monitoring: [],\n              fdaApproved: true,\n              oncologyDrug: false\n            }));\n          }\n        }\n      }\n\n      // Apply client-side filters to API results\n      results = applyFiltersToResults(results, state.filters);\n      \n      // Add to search history\n      const searchHistoryItem: SearchHistory = {\n        id: `search_${Date.now()}`,\n        query: state.query,\n        filters: { ...state.filters },\n        timestamp: new Date(),\n        resultCount: results.length\n      };\n\n      // Add to recent searches if not empty\n      if (state.query.trim()) {\n        const updatedRecentSearches = [\n          state.query,\n          ...state.recentSearches.filter(s => s !== state.query)\n        ].slice(0, 10); // Keep last 10 searches\n\n        setState(prev => ({\n          ...prev,\n          results,\n          isLoading: false,\n          history: [searchHistoryItem, ...prev.history].slice(0, 50), // Keep last 50 searches\n          recentSearches: updatedRecentSearches\n        }));\n      } else {\n        setState(prev => ({\n          ...prev,\n          results,\n          isLoading: false\n        }));\n      }\n    } catch (error) {\n      console.error('Search error:', error);\n      setState(prev => ({ ...prev, isLoading: false, results: [] }));\n    }\n  };\n\n  const addToFavorites = (item: Omit<FavoriteItem, 'id' | 'timestamp'>) => {\n    const favoriteItem: FavoriteItem = {\n      ...item,\n      id: `fav_${Date.now()}`,\n      timestamp: new Date()\n    };\n\n    setState(prev => ({\n      ...prev,\n      favorites: [favoriteItem, ...prev.favorites]\n    }));\n  };\n\n  const removeFromFavorites = (favoriteId: string) => {\n    setState(prev => ({\n      ...prev,\n      favorites: prev.favorites.filter(fav => fav.id !== favoriteId)\n    }));\n  };\n\n  const updateFavorite = (favoriteId: string, updates: Partial<FavoriteItem>) => {\n    setState(prev => ({\n      ...prev,\n      favorites: prev.favorites.map(fav =>\n        fav.id === favoriteId ? { ...fav, ...updates } : fav\n      )\n    }));\n  };\n\n  const clearHistory = () => {\n    setState(prev => ({ ...prev, history: [] }));\n  };\n\n  const clearRecentSearches = () => {\n    setState(prev => ({ ...prev, recentSearches: [] }));\n  };\n\n  const isFavorite = (type: string, itemId: string): boolean => {\n    return state.favorites.some(fav => fav.type === type && fav.itemId === itemId);\n  };\n\n  // Memoized computed values\n  const activeFiltersCount = useMemo(() => {\n    const filters = state.filters;\n    let count = 0;\n    \n    if (filters.category) count++;\n    if (filters.subcategory) count++;\n    if (filters.mechanism) count++;\n    if (filters.indication) count++;\n    if (filters.routeOfAdministration) count++;\n    if (filters.isOncology !== undefined) count++;\n    if (filters.hasGenomicData !== undefined) count++;\n    if (filters.isOrphan !== undefined) count++;\n    if (filters.fdaApproved !== undefined) count++;\n    if (filters.clinicalTrialPhase) count++;\n    \n    return count;\n  }, [state.filters]);\n\n  const favoritesByType = useMemo(() => {\n    return state.favorites.reduce((acc, fav) => {\n      if (!acc[fav.type]) acc[fav.type] = [];\n      acc[fav.type].push(fav);\n      return acc;\n    }, {} as Record<string, FavoriteItem[]>);\n  }, [state.favorites]);\n\n  return {\n    // State\n    query: state.query,\n    filters: state.filters,\n    results: state.results,\n    isLoading: state.isLoading,\n    history: state.history,\n    favorites: state.favorites,\n    suggestions: state.suggestions,\n    recentSearches: state.recentSearches,\n    \n    // Computed values\n    activeFiltersCount,\n    favoritesByType,\n    \n    // Actions\n    setQuery,\n    setFilters,\n    clearFilters,\n    performSearch,\n    addToFavorites,\n    removeFromFavorites,\n    updateFavorite,\n    clearHistory,\n    clearRecentSearches,\n    isFavorite\n  };\n};\n\n// Helper function to apply filters to search results\nconst applyFiltersToResults = (drugs: Drug[], filters: SearchFilter): Drug[] => {\n  let filteredDrugs = [...drugs];\n\n  if (filters.category) {\n    filteredDrugs = filteredDrugs.filter(drug =>\n      drug.category?.toLowerCase().includes(filters.category.toLowerCase())\n    );\n  }\n\n  if (filters.mechanism) {\n    filteredDrugs = filteredDrugs.filter(drug =>\n      drug.mechanism?.toLowerCase().includes(filters.mechanism!.toLowerCase())\n    );\n  }\n\n  if (filters.indication) {\n    filteredDrugs = filteredDrugs.filter(drug =>\n      drug.indications?.some(indication =>\n        indication.toLowerCase().includes(filters.indication!.toLowerCase())\n      )\n    );\n  }\n\n  if (filters.isOncology !== undefined) {\n    filteredDrugs = filteredDrugs.filter(drug => drug.oncologyDrug === filters.isOncology);\n  }\n\n  if (filters.fdaApproved !== undefined) {\n    filteredDrugs = filteredDrugs.filter(drug => drug.fdaApproved === filters.fdaApproved);\n  }\n\n  // Additional filter logic for route of administration, orphan drugs, etc.\n  if (filters.routeOfAdministration) {\n    filteredDrugs = filteredDrugs.filter(drug =>\n      drug.dosing?.standard?.toLowerCase().includes(filters.routeOfAdministration!.toLowerCase()) ||\n      drug.name?.toLowerCase().includes(filters.routeOfAdministration!.toLowerCase())\n    );\n  }\n\n  return filteredDrugs;\n};\n\nexport default useAdvancedSearch;","import React, { useState } from 'react';\nimport { X, Filter, Search, BookmarkPlus, History, Star } from 'lucide-react';\nimport { SearchFilter, useAdvancedSearch } from '../../hooks/useAdvancedSearch';\n\ninterface AdvancedSearchDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSearch: (query: string, filters: SearchFilter) => void;\n}\n\nconst AdvancedSearchDialog: React.FC<AdvancedSearchDialogProps> = ({\n  isOpen,\n  onClose,\n  onSearch\n}) => {\n  const {\n    query,\n    filters,\n    suggestions,\n    recentSearches,\n    history,\n    favorites,\n    favoritesByType,\n    activeFiltersCount,\n    setQuery,\n    setFilters,\n    clearFilters,\n    performSearch\n  } = useAdvancedSearch();\n\n  const [activeTab, setActiveTab] = useState<'search' | 'history' | 'favorites'>('search');\n\n  if (!isOpen) return null;\n\n  const handleSearch = () => {\n    onSearch(query, filters);\n    performSearch();\n    onClose();\n  };\n\n  const handleFilterChange = (key: keyof SearchFilter, value: any) => {\n    setFilters({ [key]: value });\n  };\n\n  const drugCategories = [\n    'Alkylating Agents',\n    'Antimetabolites', \n    'Topoisomerase Inhibitors',\n    'Targeted Therapy',\n    'Immunotherapy',\n    'Hormone Therapy',\n    'Supportive Care',\n    'Investigational'\n  ];\n\n  const mechanisms = [\n    'DNA crosslinking',\n    'DNA synthesis inhibition',\n    'Topoisomerase inhibition',\n    'Tyrosine kinase inhibition',\n    'Checkpoint inhibition',\n    'Monoclonal antibody',\n    'Hormone receptor antagonist',\n    'Growth factor inhibition'\n  ];\n\n  const indications = [\n    'Breast cancer',\n    'Lung cancer',\n    'Colorectal cancer',\n    'Ovarian cancer',\n    'Prostate cancer',\n    'Melanoma',\n    'Lymphoma',\n    'Leukemia',\n    'Head and neck cancer',\n    'Gastric cancer'\n  ];\n\n  const routes = [\n    'Oral',\n    'Intravenous',\n    'Intramuscular',\n    'Subcutaneous',\n    'Topical',\n    'Intrathecal'\n  ];\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n          <div className=\"flex items-center space-x-3\">\n            <Filter className=\"w-6 h-6 text-blue-600\" />\n            <h2 className=\"text-2xl font-bold text-gray-900\">Advanced Search</h2>\n            {activeFiltersCount > 0 && (\n              <span className=\"bg-blue-100 text-blue-800 text-sm font-medium px-2.5 py-0.5 rounded-full\">\n                {activeFiltersCount} filter{activeFiltersCount !== 1 ? 's' : ''}\n              </span>\n            )}\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\"\n          >\n            <X className=\"w-6 h-6\" />\n          </button>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"flex border-b border-gray-200\">\n          <button\n            onClick={() => setActiveTab('search')}\n            className={`px-6 py-3 font-medium ${\n              activeTab === 'search'\n                ? 'text-blue-600 border-b-2 border-blue-600'\n                : 'text-gray-500 hover:text-gray-700'\n            }`}\n          >\n            Search & Filters\n          </button>\n          <button\n            onClick={() => setActiveTab('history')}\n            className={`px-6 py-3 font-medium ${\n              activeTab === 'history'\n                ? 'text-blue-600 border-b-2 border-blue-600'\n                : 'text-gray-500 hover:text-gray-700'\n            }`}\n          >\n            Search History\n          </button>\n          <button\n            onClick={() => setActiveTab('favorites')}\n            className={`px-6 py-3 font-medium ${\n              activeTab === 'favorites'\n                ? 'text-blue-600 border-b-2 border-blue-600'\n                : 'text-gray-500 hover:text-gray-700'\n            }`}\n          >\n            Favorites\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\n          {activeTab === 'search' && (\n            <div className=\"space-y-6\">\n              {/* Search Query */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Search Query\n                </label>\n                <div className=\"relative\">\n                  <input\n                    type=\"text\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                    placeholder=\"Enter drug name, indication, or mechanism...\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  />\n                  <Search className=\"absolute right-3 top-3 w-5 h-5 text-gray-400\" />\n                </div>\n                \n                {/* Suggestions */}\n                {suggestions.length > 0 && (\n                  <div className=\"mt-2 flex flex-wrap gap-2\">\n                    {suggestions.map((suggestion, index) => (\n                      <button\n                        key={index}\n                        onClick={() => setQuery(suggestion)}\n                        className=\"text-sm bg-gray-100 hover:bg-gray-200 px-3 py-1 rounded-full transition-colors\"\n                      >\n                        {suggestion}\n                      </button>\n                    ))}\n                  </div>\n                )}\n\n                {/* Recent Searches */}\n                {recentSearches.length > 0 && (\n                  <div className=\"mt-3\">\n                    <p className=\"text-xs text-gray-500 mb-2\">Recent searches:</p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {recentSearches.slice(0, 5).map((search, index) => (\n                        <button\n                          key={index}\n                          onClick={() => setQuery(search)}\n                          className=\"text-sm text-blue-600 hover:text-blue-800 underline\"\n                        >\n                          {search}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Filters Grid */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {/* Drug Category */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Drug Category\n                  </label>\n                  <select\n                    value={filters.category}\n                    onChange={(e) => handleFilterChange('category', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"\">All Categories</option>\n                    {drugCategories.map((category) => (\n                      <option key={category} value={category}>{category}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Mechanism */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Mechanism of Action\n                  </label>\n                  <select\n                    value={filters.mechanism}\n                    onChange={(e) => handleFilterChange('mechanism', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"\">All Mechanisms</option>\n                    {mechanisms.map((mechanism) => (\n                      <option key={mechanism} value={mechanism}>{mechanism}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Indication */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Indication\n                  </label>\n                  <select\n                    value={filters.indication}\n                    onChange={(e) => handleFilterChange('indication', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"\">All Indications</option>\n                    {indications.map((indication) => (\n                      <option key={indication} value={indication}>{indication}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Route of Administration */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Route of Administration\n                  </label>\n                  <select\n                    value={filters.routeOfAdministration}\n                    onChange={(e) => handleFilterChange('routeOfAdministration', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  >\n                    <option value=\"\">All Routes</option>\n                    {routes.map((route) => (\n                      <option key={route} value={route}>{route}</option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n\n              {/* Boolean Filters */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={filters.isOncology === true}\n                    onChange={(e) => handleFilterChange('isOncology', e.target.checked ? true : undefined)}\n                    className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Oncology drugs only</span>\n                </label>\n\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={filters.hasGenomicData === true}\n                    onChange={(e) => handleFilterChange('hasGenomicData', e.target.checked ? true : undefined)}\n                    className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Has genomic data</span>\n                </label>\n\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={filters.fdaApproved === true}\n                    onChange={(e) => handleFilterChange('fdaApproved', e.target.checked ? true : undefined)}\n                    className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">FDA approved</span>\n                </label>\n\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={filters.isOrphan === true}\n                    onChange={(e) => handleFilterChange('isOrphan', e.target.checked ? true : undefined)}\n                    className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Orphan drugs</span>\n                </label>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'history' && (\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Search History</h3>\n                <button\n                  onClick={() => {}}\n                  className=\"text-sm text-gray-500 hover:text-gray-700\"\n                >\n                  Clear History\n                </button>\n              </div>\n              \n              {history.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <History className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">No search history yet</p>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {history.slice(0, 10).map((item) => (\n                    <div\n                      key={item.id}\n                      className=\"p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer\"\n                      onClick={() => {\n                        setQuery(item.query);\n                        setFilters(item.filters);\n                        setActiveTab('search');\n                      }}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"font-medium\">{item.query || 'Advanced search'}</span>\n                        <span className=\"text-sm text-gray-500\">\n                          {item.resultCount} result{item.resultCount !== 1 ? 's' : ''}\n                        </span>\n                      </div>\n                      <div className=\"text-sm text-gray-500 mt-1\">\n                        {new Date(item.timestamp).toLocaleString()}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'favorites' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Favorites</h3>\n              \n              {Object.keys(favoritesByType).length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Star className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">No favorites yet</p>\n                  <p className=\"text-sm text-gray-400 mt-2\">\n                    Save drugs, interactions, and protocols for quick access\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-6\">\n                  {Object.entries(favoritesByType).map(([type, items]) => (\n                    <div key={type}>\n                      <h4 className=\"font-medium text-gray-900 mb-3 capitalize\">\n                        {type}s ({items.length})\n                      </h4>\n                      <div className=\"space-y-2\">\n                        {items.map((item) => (\n                          <div\n                            key={item.id}\n                            className=\"p-3 border border-gray-200 rounded-lg hover:bg-gray-50\"\n                          >\n                            <div className=\"flex items-center justify-between\">\n                              <span className=\"font-medium\">{item.name}</span>\n                              <button className=\"text-yellow-500 hover:text-yellow-600\">\n                                <Star className=\"w-4 h-4 fill-current\" />\n                              </button>\n                            </div>\n                            {item.notes && (\n                              <p className=\"text-sm text-gray-600 mt-1\">{item.notes}</p>\n                            )}\n                            {item.tags.length > 0 && (\n                              <div className=\"flex flex-wrap gap-1 mt-2\">\n                                {item.tags.map((tag, index) => (\n                                  <span\n                                    key={index}\n                                    className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\"\n                                  >\n                                    {tag}\n                                  </span>\n                                ))}\n                              </div>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50\">\n          <button\n            onClick={clearFilters}\n            className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\n            disabled={activeFiltersCount === 0}\n          >\n            Clear Filters\n          </button>\n          \n          <div className=\"flex space-x-3\">\n            <button\n              onClick={onClose}\n              className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleSearch}\n              className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2\"\n            >\n              <Search className=\"w-4 h-4\" />\n              <span>Search</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedSearchDialog;","import React, { useState, useRef, useEffect } from 'react';\nimport { Search, Filter, Star, History, X, Bookmark, Tag, Clock } from 'lucide-react';\nimport { useAdvancedSearch, SearchFilter } from '../../hooks/useAdvancedSearch';\nimport AdvancedSearchDialog from './AdvancedSearchDialog';\n\ninterface SearchWithFavoritesProps {\n  onSearch: (query: string, filters?: SearchFilter) => void;\n  placeholder?: string;\n  showFilters?: boolean;\n  className?: string;\n}\n\nconst SearchWithFavorites: React.FC<SearchWithFavoritesProps> = ({\n  onSearch,\n  placeholder = \"Search drugs, interactions, protocols...\",\n  showFilters = true,\n  className = \"\"\n}) => {\n  const {\n    query,\n    suggestions,\n    recentSearches,\n    favorites,\n    favoritesByType,\n    activeFiltersCount,\n    setQuery,\n    performSearch,\n    addToFavorites,\n    isFavorite\n  } = useAdvancedSearch();\n\n  const [isAdvancedSearchOpen, setIsAdvancedSearchOpen] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [showQuickAccess, setShowQuickAccess] = useState(false);\n  const searchRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (searchRef.current && !searchRef.current.contains(event.target as Node)) {\n        setShowSuggestions(false);\n        setShowQuickAccess(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const handleInputChange = (value: string) => {\n    setQuery(value);\n    setShowSuggestions(value.length > 0);\n    setShowQuickAccess(false);\n  };\n\n  const handleSearch = (searchQuery?: string) => {\n    const finalQuery = searchQuery || query;\n    if (finalQuery.trim()) {\n      onSearch(finalQuery);\n      performSearch();\n      setShowSuggestions(false);\n      setShowQuickAccess(false);\n      inputRef.current?.blur();\n    }\n  };\n\n  const handleAdvancedSearch = (searchQuery: string, filters: SearchFilter) => {\n    onSearch(searchQuery, filters);\n    setShowSuggestions(false);\n    setShowQuickAccess(false);\n  };\n\n  const handleInputFocus = () => {\n    if (query.length === 0) {\n      setShowQuickAccess(true);\n      setShowSuggestions(false);\n    } else {\n      setShowSuggestions(true);\n      setShowQuickAccess(false);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    } else if (e.key === 'Escape') {\n      setShowSuggestions(false);\n      setShowQuickAccess(false);\n      inputRef.current?.blur();\n    }\n  };\n\n  const addToFavoritesFromSearch = (item: string, type: 'drug' | 'interaction' | 'protocol') => {\n    addToFavorites({\n      type,\n      itemId: `search_${Date.now()}`,\n      name: item,\n      notes: `Added from search: \"${query}\"`,\n      tags: ['search']\n    });\n  };\n\n  return (\n    <div ref={searchRef} className={`relative ${className}`}>\n      {/* Search Input */}\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n          <Search className=\"h-5 w-5 text-gray-400\" />\n        </div>\n        \n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={query}\n          onChange={(e) => handleInputChange(e.target.value)}\n          onFocus={handleInputFocus}\n          onKeyDown={handleKeyDown}\n          placeholder={placeholder}\n          className=\"w-full pl-10 pr-20 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n        />\n        \n        <div className=\"absolute inset-y-0 right-0 flex items-center space-x-1 pr-3\">\n          {query && (\n            <button\n              onClick={() => {\n                setQuery('');\n                setShowSuggestions(false);\n                setShowQuickAccess(true);\n                inputRef.current?.focus();\n              }}\n              className=\"p-1 hover:bg-gray-100 rounded\"\n            >\n              <X className=\"h-4 w-4 text-gray-400\" />\n            </button>\n          )}\n          \n          {showFilters && (\n            <button\n              onClick={() => setIsAdvancedSearchOpen(true)}\n              className={`p-2 rounded-lg transition-colors ${\n                activeFiltersCount > 0\n                  ? 'bg-blue-100 text-blue-600 hover:bg-blue-200'\n                  : 'hover:bg-gray-100 text-gray-400 hover:text-gray-600'\n              }`}\n              title=\"Advanced Search & Filters\"\n            >\n              <Filter className=\"h-4 w-4\" />\n              {activeFiltersCount > 0 && (\n                <span className=\"absolute -top-1 -right-1 bg-blue-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                  {activeFiltersCount}\n                </span>\n              )}\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Search Suggestions Dropdown */}\n      {(showSuggestions || showQuickAccess) && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-96 overflow-y-auto\">\n          \n          {/* Quick Access (when input is empty) */}\n          {showQuickAccess && (\n            <div className=\"p-4\">\n              <div className=\"space-y-4\">\n                {/* Recent Searches */}\n                {recentSearches.length > 0 && (\n                  <div>\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <Clock className=\"h-4 w-4 text-gray-400\" />\n                      <span className=\"text-sm font-medium text-gray-700\">Recent Searches</span>\n                    </div>\n                    <div className=\"space-y-1\">\n                      {recentSearches.slice(0, 5).map((search, index) => (\n                        <button\n                          key={index}\n                          onClick={() => handleSearch(search)}\n                          className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded flex items-center justify-between group\"\n                        >\n                          <span>{search}</span>\n                          <History className=\"h-3 w-3 text-gray-400 opacity-0 group-hover:opacity-100\" />\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Favorite Drugs */}\n                {favoritesByType.drug && favoritesByType.drug.length > 0 && (\n                  <div>\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <Star className=\"h-4 w-4 text-yellow-500\" />\n                      <span className=\"text-sm font-medium text-gray-700\">Favorite Drugs</span>\n                    </div>\n                    <div className=\"space-y-1\">\n                      {favoritesByType.drug.slice(0, 3).map((fav) => (\n                        <button\n                          key={fav.id}\n                          onClick={() => handleSearch(fav.name)}\n                          className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded flex items-center justify-between group\"\n                        >\n                          <span>{fav.name}</span>\n                          <Star className=\"h-3 w-3 text-yellow-500 fill-current\" />\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Quick Actions */}\n                <div>\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <Bookmark className=\"h-4 w-4 text-gray-400\" />\n                    <span className=\"text-sm font-medium text-gray-700\">Quick Actions</span>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <button\n                      onClick={() => handleSearch('oncology drugs')}\n                      className=\"px-3 py-2 text-sm text-blue-600 bg-blue-50 hover:bg-blue-100 rounded transition-colors\"\n                    >\n                      Oncology Drugs\n                    </button>\n                    <button\n                      onClick={() => handleSearch('drug interactions')}\n                      className=\"px-3 py-2 text-sm text-green-600 bg-green-50 hover:bg-green-100 rounded transition-colors\"\n                    >\n                      Interactions\n                    </button>\n                    <button\n                      onClick={() => handleSearch('clinical protocols')}\n                      className=\"px-3 py-2 text-sm text-purple-600 bg-purple-50 hover:bg-purple-100 rounded transition-colors\"\n                    >\n                      Protocols\n                    </button>\n                    <button\n                      onClick={() => setIsAdvancedSearchOpen(true)}\n                      className=\"px-3 py-2 text-sm text-gray-600 bg-gray-50 hover:bg-gray-100 rounded transition-colors\"\n                    >\n                      Advanced Search\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Search Suggestions */}\n          {showSuggestions && suggestions.length > 0 && (\n            <div className=\"p-2\">\n              <div className=\"text-xs text-gray-500 px-3 py-2 border-b border-gray-100\">\n                Suggestions\n              </div>\n              {suggestions.map((suggestion, index) => (\n                <button\n                  key={index}\n                  onClick={() => handleSearch(suggestion)}\n                  className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded flex items-center justify-between group\"\n                >\n                  <span>{suggestion}</span>\n                  <div className=\"flex items-center space-x-1 opacity-0 group-hover:opacity-100\">\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        addToFavoritesFromSearch(suggestion, 'drug');\n                      }}\n                      className=\"p-1 hover:bg-gray-200 rounded\"\n                      title=\"Add to favorites\"\n                    >\n                      <Star className={`h-3 w-3 ${\n                        isFavorite('drug', suggestion) ? 'text-yellow-500 fill-current' : 'text-gray-400'\n                      }`} />\n                    </button>\n                  </div>\n                </button>\n              ))}\n            </div>\n          )}\n\n          {/* No suggestions */}\n          {showSuggestions && suggestions.length === 0 && query.length > 2 && (\n            <div className=\"p-4 text-center text-gray-500\">\n              <p className=\"text-sm\">No suggestions found</p>\n              <button\n                onClick={() => setIsAdvancedSearchOpen(true)}\n                className=\"text-sm text-blue-600 hover:text-blue-800 mt-2\"\n              >\n                Try advanced search\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Advanced Search Dialog */}\n      <AdvancedSearchDialog\n        isOpen={isAdvancedSearchOpen}\n        onClose={() => setIsAdvancedSearchOpen(false)}\n        onSearch={handleAdvancedSearch}\n      />\n    </div>\n  );\n};\n\nexport default SearchWithFavorites;","import React, { useState, useEffect } from 'react';\nimport { Drug } from '../../types';\nimport { \n  Pill, \n  AlertTriangle, \n  Heart, \n  Brain, \n  Users, \n  Activity, \n  BookOpen, \n  ExternalLink,\n  Star,\n  ChevronDown,\n  ChevronUp,\n  Clock,\n  Target,\n  Zap,\n  Shield,\n  Info,\n  CheckCircle,\n  XCircle,\n  BarChart3\n} from 'lucide-react';\n\ninterface EnhancedDrugInfoProps {\n  drug: Drug;\n  className?: string;\n}\n\ninterface DrugDetail {\n  id: string;\n  category: string;\n  title: string;\n  content: string | React.ReactNode;\n  severity?: 'info' | 'warning' | 'error' | 'success';\n  sources: string[];\n  lastUpdated: string;\n}\n\ninterface ClinicalTrial {\n  id: string;\n  title: string;\n  phase: string;\n  status: 'recruiting' | 'active' | 'completed' | 'suspended';\n  condition: string;\n  sponsor: string;\n  enrollmentTarget: number;\n  location: string;\n  nctId: string;\n}\n\ninterface DrugGuideline {\n  id: string;\n  organization: string;\n  title: string;\n  recommendation: string;\n  evidenceLevel: 'A' | 'B' | 'C' | 'D';\n  lastReviewed: string;\n  url?: string;\n}\n\nconst EnhancedDrugInfo: React.FC<EnhancedDrugInfoProps> = ({ drug, className = '' }) => {\n  const [activeTab, setActiveTab] = useState<'overview' | 'clinical' | 'safety' | 'guidelines' | 'trials'>('overview');\n  const [expandedSections, setExpandedSections] = useState<Set<string>>(new Set(['basic-info']));\n  const [drugDetails, setDrugDetails] = useState<DrugDetail[]>([]);\n  const [clinicalTrials, setClinicalTrials] = useState<ClinicalTrial[]>([]);\n  const [guidelines, setGuidelines] = useState<DrugGuideline[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    loadEnhancedDrugData();\n  }, [drug.rxcui]);\n\n  const loadEnhancedDrugData = async () => {\n    setLoading(true);\n    try {\n      // Simulate API calls for enhanced drug information\n      await Promise.all([\n        loadDrugDetails(),\n        loadClinicalTrials(),\n        loadGuidelines()\n      ]);\n    } catch (error) {\n      console.error('Error loading enhanced drug data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadDrugDetails = async () => {\n    // Mock enhanced drug details\n    const details: DrugDetail[] = [\n      {\n        id: 'mechanism',\n        category: 'pharmacology',\n        title: 'Mechanism of Action',\n        content: drug.mechanism || 'Detailed mechanism of action data not available.',\n        severity: 'info',\n        sources: ['DrugBank', 'PubMed', 'FDA Label'],\n        lastUpdated: '2024-01-15'\n      },\n      {\n        id: 'pharmacokinetics',\n        category: 'pharmacology',\n        title: 'Pharmacokinetics',\n        content: (\n          <div className=\"space-y-2\">\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"font-medium\">Absorption:</span>\n                <p className=\"text-gray-600\">Rapidly absorbed, bioavailability 85-95%</p>\n              </div>\n              <div>\n                <span className=\"font-medium\">Distribution:</span>\n                <p className=\"text-gray-600\">Volume of distribution: 0.6-1.2 L/kg</p>\n              </div>\n              <div>\n                <span className=\"font-medium\">Metabolism:</span>\n                <p className=\"text-gray-600\">Hepatic via CYP3A4, CYP2D6</p>\n              </div>\n              <div>\n                <span className=\"font-medium\">Elimination:</span>\n                <p className=\"text-gray-600\">Half-life: 8-12 hours, renal excretion 60%</p>\n              </div>\n            </div>\n          </div>\n        ),\n        severity: 'info',\n        sources: ['Clinical Pharmacology', 'Drug Label'],\n        lastUpdated: '2024-01-10'\n      },\n      {\n        id: 'contraindications',\n        category: 'safety',\n        title: 'Contraindications & Precautions',\n        content: (\n          <div className=\"space-y-3\">\n            <div>\n              <h4 className=\"font-medium text-red-800 mb-2\">Absolute Contraindications:</h4>\n              <ul className=\"list-disc list-inside text-sm text-red-700 space-y-1\">\n                {drug.contraindications?.map((contraindication, index) => (\n                  <li key={index}>{contraindication}</li>\n                )) || <li>No specific contraindications listed</li>}\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-yellow-800 mb-2\">Precautions:</h4>\n              <ul className=\"list-disc list-inside text-sm text-yellow-700 space-y-1\">\n                <li>Monitor renal function in elderly patients</li>\n                <li>Use with caution in hepatic impairment</li>\n                <li>May interact with CYP3A4 inhibitors</li>\n              </ul>\n            </div>\n          </div>\n        ),\n        severity: 'warning',\n        sources: ['FDA Label', 'Clinical Guidelines'],\n        lastUpdated: '2024-01-12'\n      },\n      {\n        id: 'adverse-events',\n        category: 'safety',\n        title: 'Adverse Events Profile',\n        content: (\n          <div className=\"space-y-3\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"p-3 bg-red-50 border border-red-200 rounded\">\n                <h5 className=\"font-medium text-red-800 mb-2\">Common ({\">10%\"})</h5>\n                <ul className=\"text-sm text-red-700 space-y-1\">\n                  {drug.sideEffects?.slice(0, 3).map((effect, index) => (\n                    <li key={index}>• {effect}</li>\n                  )) || <li>• Nausea</li>}\n                </ul>\n              </div>\n              <div className=\"p-3 bg-yellow-50 border border-yellow-200 rounded\">\n                <h5 className=\"font-medium text-yellow-800 mb-2\">Uncommon (1-10%)</h5>\n                <ul className=\"text-sm text-yellow-700 space-y-1\">\n                  <li>• Headache</li>\n                  <li>• Dizziness</li>\n                  <li>• Rash</li>\n                </ul>\n              </div>\n              <div className=\"p-3 bg-gray-50 border border-gray-200 rounded\">\n                <h5 className=\"font-medium text-gray-800 mb-2\">Rare ({\"<1%\"})</h5>\n                <ul className=\"text-sm text-gray-700 space-y-1\">\n                  <li>• Severe hypersensitivity</li>\n                  <li>• Hepatotoxicity</li>\n                  <li>• Serious skin reactions</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        ),\n        severity: 'warning',\n        sources: ['FAERS', 'Clinical Trials', 'Post-marketing surveillance'],\n        lastUpdated: '2024-01-08'\n      }\n    ];\n\n    setDrugDetails(details);\n  };\n\n  const loadClinicalTrials = async () => {\n    // Mock clinical trials data\n    const trials: ClinicalTrial[] = [\n      {\n        id: 'trial1',\n        title: `Phase III Study of ${drug.name} in Advanced Cancer`,\n        phase: 'Phase III',\n        status: 'recruiting',\n        condition: 'Advanced Solid Tumors',\n        sponsor: 'National Cancer Institute',\n        enrollmentTarget: 450,\n        location: 'Multiple centers (US, EU)',\n        nctId: 'NCT05123456'\n      },\n      {\n        id: 'trial2',\n        title: `Combination Therapy with ${drug.name} and Immunotherapy`,\n        phase: 'Phase II',\n        status: 'active',\n        condition: 'Metastatic Melanoma',\n        sponsor: 'Academic Medical Center',\n        enrollmentTarget: 120,\n        location: 'Johns Hopkins, Mayo Clinic',\n        nctId: 'NCT05234567'\n      }\n    ];\n\n    setClinicalTrials(trials);\n  };\n\n  const loadGuidelines = async () => {\n    // Mock guidelines data\n    const guidelinesList: DrugGuideline[] = [\n      {\n        id: 'nccn1',\n        organization: 'NCCN',\n        title: `${drug.name} Guidelines for Cancer Treatment`,\n        recommendation: 'Category 1 recommendation for first-line therapy in specific indications',\n        evidenceLevel: 'A',\n        lastReviewed: '2024-01-01',\n        url: 'https://nccn.org'\n      },\n      {\n        id: 'fda1',\n        organization: 'FDA',\n        title: 'Safety Communication',\n        recommendation: 'Monitor for cardiac toxicity in high-risk patients',\n        evidenceLevel: 'B',\n        lastReviewed: '2023-12-15'\n      }\n    ];\n\n    setGuidelines(guidelinesList);\n  };\n\n  const toggleSection = (sectionId: string) => {\n    const newExpanded = new Set(expandedSections);\n    if (newExpanded.has(sectionId)) {\n      newExpanded.delete(sectionId);\n    } else {\n      newExpanded.add(sectionId);\n    }\n    setExpandedSections(newExpanded);\n  };\n\n  const getSeverityIcon = (severity: string) => {\n    switch (severity) {\n      case 'error': return <XCircle className=\"w-4 h-4 text-red-500\" />;\n      case 'warning': return <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />;\n      case 'success': return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      default: return <Info className=\"w-4 h-4 text-blue-500\" />;\n    }\n  };\n\n  const getSeverityBg = (severity: string) => {\n    switch (severity) {\n      case 'error': return 'bg-red-50 border-red-200';\n      case 'warning': return 'bg-yellow-50 border-yellow-200';\n      case 'success': return 'bg-green-50 border-green-200';\n      default: return 'bg-blue-50 border-blue-200';\n    }\n  };\n\n  const getTrialStatusBadge = (status: string) => {\n    const statusConfig = {\n      recruiting: { bg: 'bg-green-100', text: 'text-green-800', label: 'Recruiting' },\n      active: { bg: 'bg-blue-100', text: 'text-blue-800', label: 'Active' },\n      completed: { bg: 'bg-gray-100', text: 'text-gray-800', label: 'Completed' },\n      suspended: { bg: 'bg-red-100', text: 'text-red-800', label: 'Suspended' }\n    };\n    \n    const config = statusConfig[status as keyof typeof statusConfig] || statusConfig.active;\n    \n    return (\n      <span className={`px-2 py-1 text-xs font-medium rounded-full ${config.bg} ${config.text}`}>\n        {config.label}\n      </span>\n    );\n  };\n\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: BookOpen },\n    { id: 'clinical', label: 'Clinical Data', icon: Activity },\n    { id: 'safety', label: 'Safety Profile', icon: Shield },\n    { id: 'guidelines', label: 'Guidelines', icon: Target },\n    { id: 'trials', label: 'Clinical Trials', icon: Users }\n  ];\n\n  return (\n    <div className={`bg-white border border-gray-200 rounded-lg shadow-sm ${className}`}>\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200\">\n        <div className=\"flex items-start justify-between\">\n          <div>\n            <div className=\"flex items-center space-x-3 mb-2\">\n              <Pill className=\"w-6 h-6 text-blue-600\" />\n              <h2 className=\"text-2xl font-bold text-gray-900\">{drug.name}</h2>\n              {drug.fdaApproved && (\n                <span className=\"bg-green-100 text-green-800 text-xs font-medium px-2 py-1 rounded-full\">\n                  FDA Approved\n                </span>\n              )}\n            </div>\n            <p className=\"text-lg text-gray-600\">{drug.genericName}</p>\n            {drug.brandNames && drug.brandNames.length > 0 && (\n              <p className=\"text-sm text-gray-500\">\n                Brand names: {drug.brandNames.join(', ')}\n              </p>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button className=\"p-2 text-gray-400 hover:text-yellow-500 transition-colors\">\n              <Star className=\"w-5 h-5\" />\n            </button>\n            <button className=\"p-2 text-gray-400 hover:text-blue-500 transition-colors\">\n              <ExternalLink className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"flex space-x-8 px-6\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`py-4 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"p-6\">\n        {activeTab === 'overview' && (\n          <div className=\"space-y-6\">\n            {/* Basic Information */}\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <Target className=\"w-4 h-4 text-blue-600\" />\n                    <h3 className=\"font-medium text-blue-900\">Category</h3>\n                  </div>\n                  <p className=\"text-blue-800\">{drug.category}</p>\n                </div>\n\n                <div className=\"p-4 bg-purple-50 border border-purple-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <Zap className=\"w-4 h-4 text-purple-600\" />\n                    <h3 className=\"font-medium text-purple-900\">Mechanism</h3>\n                  </div>\n                  <p className=\"text-purple-800 text-sm\">{drug.mechanism}</p>\n                </div>\n\n                <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <Heart className=\"w-4 h-4 text-green-600\" />\n                    <h3 className=\"font-medium text-green-900\">Primary Indications</h3>\n                  </div>\n                  <div className=\"text-green-800 text-sm space-y-1\">\n                    {drug.indications?.slice(0, 3).map((indication, index) => (\n                      <div key={index}>• {indication}</div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Expandable Sections */}\n            <div className=\"space-y-4\">\n              {drugDetails.filter(detail => detail.category === 'pharmacology').map((detail) => (\n                <div key={detail.id} className={`border rounded-lg ${getSeverityBg(detail.severity || 'info')}`}>\n                  <button\n                    onClick={() => toggleSection(detail.id)}\n                    className=\"w-full p-4 text-left flex items-center justify-between hover:bg-opacity-50 transition-colors\"\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      {getSeverityIcon(detail.severity || 'info')}\n                      <h3 className=\"font-medium text-gray-900\">{detail.title}</h3>\n                    </div>\n                    {expandedSections.has(detail.id) ? (\n                      <ChevronUp className=\"w-4 h-4 text-gray-500\" />\n                    ) : (\n                      <ChevronDown className=\"w-4 h-4 text-gray-500\" />\n                    )}\n                  </button>\n                  \n                  {expandedSections.has(detail.id) && (\n                    <div className=\"px-4 pb-4\">\n                      <div className=\"border-t pt-4\">\n                        {typeof detail.content === 'string' ? (\n                          <p className=\"text-gray-700\">{detail.content}</p>\n                        ) : (\n                          detail.content\n                        )}\n                        \n                        <div className=\"mt-4 flex items-center justify-between text-xs text-gray-500\">\n                          <div>\n                            Sources: {detail.sources.join(', ')}\n                          </div>\n                          <div className=\"flex items-center space-x-1\">\n                            <Clock className=\"w-3 h-3\" />\n                            <span>Updated: {detail.lastUpdated}</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'clinical' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Clinical Data & Evidence</h3>\n              <div className=\"text-sm text-gray-500\">\n                Comprehensive clinical information and evidence-based insights\n              </div>\n            </div>\n\n            {/* Display clinical data from the enhanced API */}\n            {(drug.clinicalInsights || drug.realWorldEvidence || drug.riskProfile || drug.monitoringRequirements || drug.clinicalDecisionSupport || drug.costEffectiveness) && (\n              <div className=\"space-y-6\">\n                {/* Clinical Insights */}\n                {drug.clinicalInsights && (\n                  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\n                    <h4 className=\"font-semibold text-blue-900 mb-4 flex items-center\">\n                      <Activity className=\"w-5 h-5 mr-2\" />\n                      Clinical Insights\n                    </h4>\n                    \n                    {drug.clinicalInsights.mechanismOfAction && (\n                      <div className=\"mb-4\">\n                        <p className=\"text-sm font-medium text-blue-800 mb-2\">Mechanism of Action:</p>\n                        <div className=\"bg-white p-3 rounded border\">\n                          <p className=\"text-sm text-gray-700\">{drug.clinicalInsights.mechanismOfAction}</p>\n                        </div>\n                      </div>\n                    )}\n                    \n                    {drug.clinicalInsights.clinicalEfficacy && (\n                      <div className=\"mb-4\">\n                        <p className=\"text-sm font-medium text-blue-800 mb-2\">Clinical Efficacy:</p>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                          {drug.clinicalInsights.clinicalEfficacy.responseRate && (\n                            <div className=\"bg-white p-3 rounded border\">\n                              <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Response Rate</p>\n                              <p className=\"text-lg font-semibold text-gray-900\">{drug.clinicalInsights.clinicalEfficacy.responseRate}</p>\n                            </div>\n                          )}\n                          {drug.clinicalInsights.clinicalEfficacy.medianPFS && (\n                            <div className=\"bg-white p-3 rounded border\">\n                              <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Median PFS</p>\n                              <p className=\"text-lg font-semibold text-gray-900\">{drug.clinicalInsights.clinicalEfficacy.medianPFS}</p>\n                            </div>\n                          )}\n                          {drug.clinicalInsights.clinicalEfficacy.medianOS && (\n                            <div className=\"bg-white p-3 rounded border\">\n                              <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Median OS</p>\n                              <p className=\"text-lg font-semibold text-gray-900\">{drug.clinicalInsights.clinicalEfficacy.medianOS}</p>\n                            </div>\n                          )}\n                          {drug.clinicalInsights.clinicalEfficacy.evidenceLevel && (\n                            <div className=\"bg-white p-3 rounded border\">\n                              <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Evidence Level</p>\n                              <p className=\"text-lg font-semibold text-gray-900\">{drug.clinicalInsights.clinicalEfficacy.evidenceLevel}</p>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n\n                    {drug.clinicalInsights.patientSubgroups && (\n                      <div>\n                        <p className=\"text-sm font-medium text-blue-800 mb-2\">Patient Subgroups:</p>\n                        <div className=\"space-y-2\">\n                          {drug.clinicalInsights.patientSubgroups.map((subgroup: any, index: number) => (\n                            <div key={index} className=\"bg-white p-3 rounded border\">\n                              <p className=\"text-sm font-medium text-gray-900\">{subgroup.criteria}</p>\n                              <p className=\"text-xs text-gray-600\">{subgroup.efficacy}</p>\n                              <p className=\"text-xs text-blue-600 font-medium\">{subgroup.recommendation}</p>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {drug.clinicalData.realWorldInsights.patientReported && (\n                      <div>\n                        <p className=\"text-sm font-medium text-blue-800 mb-2\">Patient-Reported Outcomes:</p>\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                          <div className=\"bg-white p-3 rounded border\">\n                            <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Satisfaction Score</p>\n                            <p className=\"text-lg font-semibold text-gray-900\">{drug.clinicalData.realWorldInsights.patientReported.satisfactionScore}</p>\n                          </div>\n                          <div className=\"bg-white p-3 rounded border\">\n                            <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Adherence Rate</p>\n                            <p className=\"text-lg font-semibold text-gray-900\">{drug.clinicalData.realWorldInsights.patientReported.adherenceRate}</p>\n                          </div>\n                          <div className=\"bg-white p-3 rounded border\">\n                            <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">QoL Score</p>\n                            <p className=\"text-lg font-semibold text-gray-900\">{drug.clinicalData.realWorldInsights.patientReported.qualityOfLifeScore}</p>\n                          </div>\n                        </div>\n                        {drug.clinicalData.realWorldInsights.patientReported.commonConcerns && (\n                          <div className=\"mt-3 bg-white p-3 rounded border\">\n                            <p className=\"text-sm font-medium text-gray-700 mb-2\">Common Patient Concerns:</p>\n                            <div className=\"flex flex-wrap gap-2\">\n                              {drug.clinicalData.realWorldInsights.patientReported.commonConcerns.map((concern: string, index: number) => (\n                                <span key={index} className=\"bg-red-100 text-red-800 text-xs px-2 py-1 rounded\">{concern}</span>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {/* Clinical Decision Support */}\n                {drug.clinicalData.clinicalDecisionSupport && (\n                  <div className=\"bg-green-50 border border-green-200 rounded-lg p-6\">\n                    <h4 className=\"font-semibold text-green-900 mb-4 flex items-center\">\n                      <CheckCircle className=\"w-5 h-5 mr-2\" />\n                      Clinical Decision Support\n                    </h4>\n\n                    {drug.clinicalData.clinicalDecisionSupport.doseGuidance && (\n                      <div className=\"mb-4\">\n                        <p className=\"text-sm font-medium text-green-800 mb-2\">Dosing Guidance:</p>\n                        <div className=\"bg-white p-3 rounded border\">\n                          <p className=\"font-medium\">Recommended Dose: {drug.clinicalData.clinicalDecisionSupport.doseGuidance.recommendedDose}</p>\n                          {drug.clinicalData.clinicalDecisionSupport.doseGuidance.specialPopulations && (\n                            <div className=\"mt-2\">\n                              <p className=\"text-sm font-medium text-gray-600\">Special Populations:</p>\n                              <ul className=\"list-disc list-inside text-sm text-gray-600\">\n                                {drug.clinicalData.clinicalDecisionSupport.doseGuidance.specialPopulations.map((pop: string, index: number) => (\n                                  <li key={index}>{pop}</li>\n                                ))}\n                              </ul>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n\n                    {drug.clinicalData.clinicalDecisionSupport.monitoringPlan && (\n                      <div className=\"mb-4\">\n                        <p className=\"text-sm font-medium text-green-800 mb-2\">Monitoring Plan:</p>\n                        <div className=\"space-y-2\">\n                          {drug.clinicalData.clinicalDecisionSupport.monitoringPlan.baseline && (\n                            <div className=\"bg-white p-3 rounded border\">\n                              <p className=\"font-medium text-gray-900\">Baseline Monitoring:</p>\n                              <ul className=\"list-disc list-inside text-sm text-gray-600\">\n                                {drug.clinicalData.clinicalDecisionSupport.monitoringPlan.baseline.map((item: string, index: number) => (\n                                  <li key={index}>{item}</li>\n                                ))}\n                              </ul>\n                            </div>\n                          )}\n                          {drug.clinicalData.clinicalDecisionSupport.monitoringPlan.ongoing && (\n                            <div className=\"bg-white p-3 rounded border\">\n                              <p className=\"font-medium text-gray-900\">Ongoing Monitoring:</p>\n                              <ul className=\"list-disc list-inside text-sm text-gray-600\">\n                                {drug.clinicalData.clinicalDecisionSupport.monitoringPlan.ongoing.map((item: string, index: number) => (\n                                  <li key={index}>{item}</li>\n                                ))}\n                              </ul>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    )}\n\n                    {drug.clinicalData.clinicalDecisionSupport.contraindications && (\n                      <div>\n                        <p className=\"text-sm font-medium text-green-800 mb-2\">Contraindications:</p>\n                        <div className=\"bg-white p-3 rounded border\">\n                          <ul className=\"list-disc list-inside text-sm text-gray-600\">\n                            {drug.clinicalData.clinicalDecisionSupport.contraindications.map((item: string, index: number) => (\n                              <li key={index}>{item}</li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {/* Real World Evidence */}\n                {drug.clinicalData.realWorldEvidence && (\n                  <div className=\"bg-purple-50 border border-purple-200 rounded-lg p-6\">\n                    <h4 className=\"font-semibold text-purple-900 mb-4 flex items-center\">\n                      <BarChart3 className=\"w-5 h-5 mr-2\" />\n                      Real-World Evidence\n                    </h4>\n\n                    {drug.clinicalData.realWorldEvidence.costEffectiveness && (\n                      <div className=\"mb-4\">\n                        <p className=\"text-sm font-medium text-purple-800 mb-2\">Cost Effectiveness:</p>\n                        <div className=\"bg-white p-3 rounded border\">\n                          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                            <div>\n                              <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Annual Cost</p>\n                              <p className=\"text-lg font-semibold text-gray-900\">\n                                ${drug.clinicalData.realWorldEvidence.costEffectiveness.annualCost?.toLocaleString() || 'N/A'}\n                              </p>\n                            </div>\n                            <div>\n                              <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Cost per QALY</p>\n                              <p className=\"text-lg font-semibold text-gray-900\">\n                                ${drug.clinicalData.realWorldEvidence.costEffectiveness.costPerQALY?.toLocaleString() || 'N/A'}\n                              </p>\n                            </div>\n                            <div>\n                              <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Tier Status</p>\n                              <p className=\"text-lg font-semibold text-gray-900\">\n                                {drug.clinicalData.realWorldEvidence.costEffectiveness.tierStatus || 'N/A'}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                    {drug.clinicalData.realWorldEvidence.outcomes && (\n                      <div>\n                        <p className=\"text-sm font-medium text-purple-800 mb-2\">Real-World Outcomes:</p>\n                        <div className=\"space-y-2\">\n                          {Object.entries(drug.clinicalData.realWorldEvidence.outcomes).map(([key, value]: [string, any]) => (\n                            <div key={key} className=\"bg-white p-3 rounded border\">\n                              <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">\n                                {key.replace(/([A-Z])/g, ' $1').trim()}\n                              </p>\n                              <p className=\"text-sm text-gray-700\">{value}</p>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Fallback message if no clinical data available */}\n            {!(drug.clinicalInsights || drug.realWorldEvidence || drug.riskProfile || drug.monitoringRequirements || drug.clinicalDecisionSupport || drug.costEffectiveness) && (\n              <div className=\"text-center py-12 bg-gray-50 rounded-lg border-2 border-dashed border-gray-300\">\n                <Activity className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Clinical Data Available</h3>\n                <p className=\"text-gray-600\">\n                  Enhanced clinical data is not available for this medication. Please refer to the Overview tab for basic information.\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'safety' && (\n          <div className=\"space-y-6\">\n            {drugDetails.filter(detail => detail.category === 'safety').map((detail) => (\n              <div key={detail.id} className={`border rounded-lg ${getSeverityBg(detail.severity || 'info')}`}>\n                <div className=\"p-4\">\n                  <div className=\"flex items-center space-x-3 mb-4\">\n                    {getSeverityIcon(detail.severity || 'info')}\n                    <h3 className=\"font-medium text-gray-900\">{detail.title}</h3>\n                  </div>\n                  \n                  {typeof detail.content === 'string' ? (\n                    <p className=\"text-gray-700\">{detail.content}</p>\n                  ) : (\n                    detail.content\n                  )}\n                  \n                  <div className=\"mt-4 flex items-center justify-between text-xs text-gray-500\">\n                    <div>Sources: {detail.sources.join(', ')}</div>\n                    <div className=\"flex items-center space-x-1\">\n                      <Clock className=\"w-3 h-3\" />\n                      <span>Updated: {detail.lastUpdated}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {activeTab === 'trials' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Active Clinical Trials</h3>\n              <span className=\"text-sm text-gray-500\">{clinicalTrials.length} trials found</span>\n            </div>\n            \n            <div className=\"space-y-4\">\n              {clinicalTrials.map((trial) => (\n                <div key={trial.id} className=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors\">\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 mb-1\">{trial.title}</h4>\n                      <p className=\"text-sm text-gray-600\">{trial.condition}</p>\n                    </div>\n                    {getTrialStatusBadge(trial.status)}\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                    <div>\n                      <span className=\"font-medium text-gray-700\">Phase:</span>\n                      <p className=\"text-gray-600\">{trial.phase}</p>\n                    </div>\n                    <div>\n                      <span className=\"font-medium text-gray-700\">Sponsor:</span>\n                      <p className=\"text-gray-600\">{trial.sponsor}</p>\n                    </div>\n                    <div>\n                      <span className=\"font-medium text-gray-700\">Enrollment:</span>\n                      <p className=\"text-gray-600\">{trial.enrollmentTarget} patients</p>\n                    </div>\n                    <div>\n                      <span className=\"font-medium text-gray-700\">NCT ID:</span>\n                      <a \n                        href={`https://clinicaltrials.gov/ct2/show/${trial.nctId}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-blue-600 hover:text-blue-800 flex items-center space-x-1\"\n                      >\n                        <span>{trial.nctId}</span>\n                        <ExternalLink className=\"w-3 h-3\" />\n                      </a>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mt-3 pt-3 border-t border-gray-100\">\n                    <p className=\"text-sm text-gray-600\">\n                      <span className=\"font-medium\">Locations:</span> {trial.location}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'guidelines' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Clinical Guidelines & Recommendations</h3>\n              <span className=\"text-sm text-gray-500\">{guidelines.length} guidelines</span>\n            </div>\n            \n            <div className=\"space-y-4\">\n              {guidelines.map((guideline) => (\n                <div key={guideline.id} className=\"border border-gray-200 rounded-lg p-4\">\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <div>\n                      <div className=\"flex items-center space-x-2 mb-1\">\n                        <h4 className=\"font-medium text-gray-900\">{guideline.title}</h4>\n                        <span className={`px-2 py-1 text-xs font-medium rounded ${\n                          guideline.evidenceLevel === 'A' ? 'bg-green-100 text-green-800' :\n                          guideline.evidenceLevel === 'B' ? 'bg-blue-100 text-blue-800' :\n                          guideline.evidenceLevel === 'C' ? 'bg-yellow-100 text-yellow-800' :\n                          'bg-gray-100 text-gray-800'\n                        }`}>\n                          Level {guideline.evidenceLevel}\n                        </span>\n                      </div>\n                      <p className=\"text-sm text-gray-600 mb-2\">{guideline.organization}</p>\n                    </div>\n                  </div>\n                  \n                  <p className=\"text-gray-700 mb-3\">{guideline.recommendation}</p>\n                  \n                  <div className=\"flex items-center justify-between text-sm text-gray-500\">\n                    <span>Last reviewed: {guideline.lastReviewed}</span>\n                    {guideline.url && (\n                      <a \n                        href={guideline.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-blue-600 hover:text-blue-800 flex items-center space-x-1\"\n                      >\n                        <span>View guideline</span>\n                        <ExternalLink className=\"w-3 h-3\" />\n                      </a>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"flex items-center justify-center py-12\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedDrugInfo;\n","import React, { useState, useEffect } from 'react';\nimport { Drug } from '../../types';\nimport { \n  Plus, \n  X, \n  BarChart3, \n  TrendingUp, \n  AlertTriangle, \n  CheckCircle,\n  Clock,\n  DollarSign,\n  Activity,\n  Shield,\n  Target,\n  Zap,\n  Users,\n  Star\n} from 'lucide-react';\n\ninterface DrugComparisonToolProps {\n  initialDrugs?: Drug[];\n  onAddDrug?: (drug: Drug) => void;\n  className?: string;\n}\n\ninterface ComparisonMetric {\n  id: string;\n  label: string;\n  icon: React.ComponentType<any>;\n  getValue: (drug: Drug) => string | number | React.ReactNode;\n  compare?: (a: Drug, b: Drug) => number; // -1: a < b, 0: equal, 1: a > b\n  format?: 'text' | 'number' | 'percentage' | 'currency' | 'boolean' | 'severity';\n}\n\ninterface DrugComparison extends Drug {\n  comparisonScore?: number;\n  strengths?: string[];\n  weaknesses?: string[];\n  clinicalNotes?: string[];\n}\n\nconst DrugComparisonTool: React.FC<DrugComparisonToolProps> = ({\n  initialDrugs = [],\n  onAddDrug,\n  className = ''\n}) => {\n  const [selectedDrugs, setSelectedDrugs] = useState<DrugComparison[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showAddDrug, setShowAddDrug] = useState(false);\n  const [availableDrugs] = useState<Drug[]>([\n    // Mock available drugs for comparison\n    {\n      id: '1',\n      rxcui: '1001',\n      name: 'Carboplatin',\n      genericName: 'carboplatin',\n      brandNames: ['Paraplatin'],\n      category: 'Alkylating Agent',\n      mechanism: 'DNA crosslinking',\n      indications: ['Ovarian cancer', 'Lung cancer'],\n      contraindications: ['Severe bone marrow depression'],\n      sideEffects: ['Myelosuppression', 'Nephrotoxicity'],\n      interactions: [],\n      dosing: {\n        standard: 'AUC 5-6 mg/mL*min IV',\n        renal: 'Adjust based on CrCl',\n        hepatic: 'No adjustment needed'\n      },\n      monitoring: ['CBC', 'Renal function'],\n      fdaApproved: true,\n      oncologyDrug: true\n    },\n    {\n      id: '2',\n      rxcui: '1002',\n      name: 'Cisplatin',\n      genericName: 'cisplatin',\n      brandNames: ['Platinol'],\n      category: 'Alkylating Agent',\n      mechanism: 'DNA crosslinking',\n      indications: ['Testicular cancer', 'Ovarian cancer', 'Bladder cancer'],\n      contraindications: ['Renal impairment', 'Hearing impairment'],\n      sideEffects: ['Nephrotoxicity', 'Ototoxicity', 'Neuropathy'],\n      interactions: [],\n      dosing: {\n        standard: '20 mg/m² IV daily × 5 days',\n        renal: 'Contraindicated if CrCl < 60',\n        hepatic: 'No adjustment needed'\n      },\n      monitoring: ['Renal function', 'Hearing tests', 'Neurologic exam'],\n      fdaApproved: true,\n      oncologyDrug: true\n    }\n  ]);\n\n  useEffect(() => {\n    if (initialDrugs.length > 0) {\n      setSelectedDrugs(initialDrugs.map(drug => enhanceDrugForComparison(drug)));\n    }\n  }, [initialDrugs]);\n\n  const enhanceDrugForComparison = (drug: Drug): DrugComparison => {\n    // Add comparison-specific enhancements\n    const enhanced: DrugComparison = {\n      ...drug,\n      comparisonScore: calculateComparisonScore(drug),\n      strengths: generateStrengths(drug),\n      weaknesses: generateWeaknesses(drug),\n      clinicalNotes: generateClinicalNotes(drug)\n    };\n    \n    return enhanced;\n  };\n\n  const calculateComparisonScore = (drug: Drug): number => {\n    // Mock scoring algorithm based on various factors\n    let score = 50; // Base score\n    \n    if (drug.fdaApproved) score += 20;\n    if (drug.oncologyDrug) score += 15;\n    if (drug.sideEffects && drug.sideEffects.length < 5) score += 10;\n    if (drug.contraindications && drug.contraindications.length < 3) score += 5;\n    \n    return Math.min(100, Math.max(0, score));\n  };\n\n  const generateStrengths = (drug: Drug): string[] => {\n    const strengths: string[] = [];\n    \n    if (drug.fdaApproved) strengths.push('FDA approved with established safety profile');\n    if (drug.oncologyDrug) strengths.push('Specifically designed for oncology indications');\n    if (drug.sideEffects && drug.sideEffects.length < 5) strengths.push('Favorable side effect profile');\n    if (drug.indications && drug.indications.length > 3) strengths.push('Broad spectrum of indications');\n    \n    return strengths;\n  };\n\n  const generateWeaknesses = (drug: Drug): string[] => {\n    const weaknesses: string[] = [];\n    \n    if (drug.contraindications && drug.contraindications.length > 2) {\n      weaknesses.push('Multiple contraindications limit patient eligibility');\n    }\n    if (drug.sideEffects && drug.sideEffects.length > 5) {\n      weaknesses.push('Extensive side effect profile requires careful monitoring');\n    }\n    if (drug.monitoring && drug.monitoring.length > 4) {\n      weaknesses.push('Intensive monitoring requirements');\n    }\n    \n    return weaknesses;\n  };\n\n  const generateClinicalNotes = (drug: Drug): string[] => {\n    const notes: string[] = [];\n    \n    if (drug.category?.includes('Alkylating')) {\n      notes.push('Consider premedication for hypersensitivity reactions');\n    }\n    if (drug.sideEffects?.includes('Nephrotoxicity')) {\n      notes.push('Ensure adequate hydration and monitor renal function closely');\n    }\n    if (drug.sideEffects?.includes('Myelosuppression')) {\n      notes.push('Monitor CBC regularly and adjust dose for hematologic toxicity');\n    }\n    \n    return notes;\n  };\n\n  const comparisonMetrics: ComparisonMetric[] = [\n    {\n      id: 'name',\n      label: 'Drug Name',\n      icon: Target,\n      getValue: (drug) => (\n        <div>\n          <div className=\"font-medium\">{drug.name}</div>\n          <div className=\"text-sm text-gray-500\">{drug.genericName}</div>\n        </div>\n      )\n    },\n    {\n      id: 'category',\n      label: 'Category',\n      icon: Zap,\n      getValue: (drug) => drug.category || 'Not specified'\n    },\n    {\n      id: 'mechanism',\n      label: 'Mechanism',\n      icon: Activity,\n      getValue: (drug) => drug.mechanism || 'Not specified'\n    },\n    {\n      id: 'indications',\n      label: 'Indications',\n      icon: Users,\n      getValue: (drug) => (\n        <div className=\"space-y-1\">\n          {drug.indications?.slice(0, 3).map((indication, index) => (\n            <div key={index} className=\"text-sm\">• {indication}</div>\n          ))}\n          {drug.indications && drug.indications.length > 3 && (\n            <div className=\"text-xs text-gray-500\">\n              +{drug.indications.length - 3} more\n            </div>\n          )}\n        </div>\n      )\n    },\n    {\n      id: 'sideEffects',\n      label: 'Side Effects',\n      icon: AlertTriangle,\n      getValue: (drug) => (\n        <div>\n          <div className=\"text-sm font-medium mb-1\">\n            {drug.sideEffects?.length || 0} reported\n          </div>\n          <div className=\"space-y-1\">\n            {drug.sideEffects?.slice(0, 3).map((effect, index) => (\n              <div key={index} className=\"text-xs text-gray-600\">• {effect}</div>\n            ))}\n          </div>\n        </div>\n      ),\n      compare: (a, b) => (a.sideEffects?.length || 0) - (b.sideEffects?.length || 0)\n    },\n    {\n      id: 'contraindications',\n      label: 'Contraindications',\n      icon: Shield,\n      getValue: (drug) => (\n        <div>\n          <div className=\"text-sm font-medium mb-1\">\n            {drug.contraindications?.length || 0} listed\n          </div>\n          <div className=\"space-y-1\">\n            {drug.contraindications?.slice(0, 2).map((contraindication, index) => (\n              <div key={index} className=\"text-xs text-gray-600\">• {contraindication}</div>\n            ))}\n          </div>\n        </div>\n      ),\n      compare: (a, b) => (a.contraindications?.length || 0) - (b.contraindications?.length || 0)\n    },\n    {\n      id: 'monitoring',\n      label: 'Monitoring',\n      icon: Clock,\n      getValue: (drug) => (\n        <div className=\"space-y-1\">\n          {drug.monitoring?.slice(0, 3).map((monitor, index) => (\n            <div key={index} className=\"text-sm\">• {monitor}</div>\n          ))}\n        </div>\n      )\n    },\n    {\n      id: 'fdaStatus',\n      label: 'FDA Status',\n      icon: CheckCircle,\n      getValue: (drug) => (\n        <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n          drug.fdaApproved \n            ? 'bg-green-100 text-green-800' \n            : 'bg-yellow-100 text-yellow-800'\n        }`}>\n          {drug.fdaApproved ? 'Approved' : 'Investigational'}\n        </span>\n      )\n    },\n    {\n      id: 'comparisonScore',\n      label: 'Overall Score',\n      icon: Star,\n      getValue: (drug) => {\n        const comparison = drug as DrugComparison;\n        const score = comparison.comparisonScore || 0;\n        return (\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">{score}</div>\n            <div className=\"text-xs text-gray-500\">/ 100</div>\n          </div>\n        );\n      },\n      compare: (a, b) => ((b as DrugComparison).comparisonScore || 0) - ((a as DrugComparison).comparisonScore || 0)\n    }\n  ];\n\n  const addDrug = (drug: Drug) => {\n    if (selectedDrugs.length < 4 && !selectedDrugs.find(d => d.rxcui === drug.rxcui)) {\n      const enhanced = enhanceDrugForComparison(drug);\n      setSelectedDrugs(prev => [...prev, enhanced]);\n      setShowAddDrug(false);\n      setSearchQuery('');\n      onAddDrug?.(drug);\n    }\n  };\n\n  const removeDrug = (rxcui: string) => {\n    setSelectedDrugs(prev => prev.filter(drug => drug.rxcui !== rxcui));\n  };\n\n  const filteredAvailableDrugs = availableDrugs.filter(drug =>\n    drug.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    drug.genericName.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    drug.category.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const getComparisonIndicator = (metric: ComparisonMetric, drugIndex: number) => {\n    if (!metric.compare || selectedDrugs.length < 2) return null;\n\n    const currentDrug = selectedDrugs[drugIndex];\n    const bestDrug = selectedDrugs.reduce((best, drug) => \n      metric.compare!(drug, best) > 0 ? drug : best\n    );\n    const worstDrug = selectedDrugs.reduce((worst, drug) => \n      metric.compare!(drug, worst) < 0 ? drug : worst\n    );\n\n    if (currentDrug.rxcui === bestDrug.rxcui && currentDrug.rxcui !== worstDrug.rxcui) {\n      return <TrendingUp className=\"w-4 h-4 text-green-500\" title=\"Best in category\" />;\n    } else if (currentDrug.rxcui === worstDrug.rxcui && currentDrug.rxcui !== bestDrug.rxcui) {\n      return <TrendingUp className=\"w-4 h-4 text-red-500 rotate-180\" title=\"Needs attention\" />;\n    }\n    return null;\n  };\n\n  return (\n    <div className={`bg-white border border-gray-200 rounded-lg shadow-sm ${className}`}>\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <BarChart3 className=\"w-6 h-6 text-blue-600\" />\n            <div>\n              <h2 className=\"text-xl font-bold text-gray-900\">Drug Comparison</h2>\n              <p className=\"text-sm text-gray-600\">\n                Compare up to 4 drugs side by side\n              </p>\n            </div>\n          </div>\n          \n          {selectedDrugs.length < 4 && (\n            <button\n              onClick={() => setShowAddDrug(true)}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              <span>Add Drug</span>\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Add Drug Modal */}\n      {showAddDrug && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md\">\n            <div className=\"p-4 border-b border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-medium\">Add Drug to Comparison</h3>\n                <button\n                  onClick={() => setShowAddDrug(false)}\n                  className=\"p-1 hover:bg-gray-100 rounded\"\n                >\n                  <X className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"p-4\">\n              <input\n                type=\"text\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                placeholder=\"Search for drugs...\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                autoFocus\n              />\n              \n              <div className=\"mt-4 max-h-60 overflow-y-auto space-y-2\">\n                {filteredAvailableDrugs\n                  .filter(drug => !selectedDrugs.find(d => d.rxcui === drug.rxcui))\n                  .map((drug) => (\n                    <button\n                      key={drug.rxcui}\n                      onClick={() => addDrug(drug)}\n                      className=\"w-full p-3 text-left border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors\"\n                    >\n                      <div className=\"font-medium\">{drug.name}</div>\n                      <div className=\"text-sm text-gray-600\">{drug.category}</div>\n                    </button>\n                  ))}\n                  \n                {filteredAvailableDrugs.length === 0 && (\n                  <div className=\"text-center py-4 text-gray-500\">\n                    No drugs found\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Comparison Table */}\n      {selectedDrugs.length > 0 ? (\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"border-b border-gray-200\">\n                <th className=\"text-left p-4 font-medium text-gray-700 w-32\">\n                  Metric\n                </th>\n                {selectedDrugs.map((drug) => (\n                  <th key={drug.rxcui} className=\"text-left p-4 min-w-64\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <div className=\"font-medium text-gray-900\">{drug.name}</div>\n                        <div className=\"text-sm text-gray-500\">{drug.genericName}</div>\n                      </div>\n                      <button\n                        onClick={() => removeDrug(drug.rxcui)}\n                        className=\"p-1 text-gray-400 hover:text-red-500 transition-colors\"\n                      >\n                        <X className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            \n            <tbody>\n              {comparisonMetrics.map((metric) => {\n                const Icon = metric.icon;\n                \n                return (\n                  <tr key={metric.id} className=\"border-b border-gray-100 hover:bg-gray-50\">\n                    <td className=\"p-4\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Icon className=\"w-4 h-4 text-gray-500\" />\n                        <span className=\"font-medium text-gray-700\">{metric.label}</span>\n                      </div>\n                    </td>\n                    \n                    {selectedDrugs.map((drug, index) => (\n                      <td key={drug.rxcui} className=\"p-4 align-top\">\n                        <div className=\"flex items-start space-x-2\">\n                          <div className=\"flex-1\">\n                            {metric.getValue(drug)}\n                          </div>\n                          {getComparisonIndicator(metric, index)}\n                        </div>\n                      </td>\n                    ))}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className=\"p-12 text-center\">\n          <BarChart3 className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No drugs selected</h3>\n          <p className=\"text-gray-600 mb-4\">\n            Add drugs to compare their features, efficacy, and safety profiles side by side.\n          </p>\n          <button\n            onClick={() => setShowAddDrug(true)}\n            className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            Add Your First Drug\n          </button>\n        </div>\n      )}\n\n      {/* Summary Insights */}\n      {selectedDrugs.length > 1 && (\n        <div className=\"p-6 border-t border-gray-200 bg-gray-50\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Comparison Insights</h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {selectedDrugs.map((drug) => (\n              <div key={drug.rxcui} className=\"bg-white p-4 rounded-lg border border-gray-200\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <h4 className=\"font-medium text-gray-900\">{drug.name}</h4>\n                  <div className=\"flex items-center space-x-1\">\n                    <Star className=\"w-4 h-4 text-yellow-500\" />\n                    <span className=\"text-sm font-medium\">{drug.comparisonScore}/100</span>\n                  </div>\n                </div>\n                \n                {drug.strengths && drug.strengths.length > 0 && (\n                  <div className=\"mb-3\">\n                    <h5 className=\"text-sm font-medium text-green-800 mb-1\">Strengths:</h5>\n                    <ul className=\"text-sm text-green-700 space-y-1\">\n                      {drug.strengths.slice(0, 2).map((strength, index) => (\n                        <li key={index} className=\"flex items-start space-x-1\">\n                          <CheckCircle className=\"w-3 h-3 mt-0.5 flex-shrink-0\" />\n                          <span>{strength}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                \n                {drug.weaknesses && drug.weaknesses.length > 0 && (\n                  <div>\n                    <h5 className=\"text-sm font-medium text-orange-800 mb-1\">Considerations:</h5>\n                    <ul className=\"text-sm text-orange-700 space-y-1\">\n                      {drug.weaknesses.slice(0, 2).map((weakness, index) => (\n                        <li key={index} className=\"flex items-start space-x-1\">\n                          <AlertTriangle className=\"w-3 h-3 mt-0.5 flex-shrink-0\" />\n                          <span>{weakness}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DrugComparisonTool;","import React, { useState, useEffect } from 'react';\nimport { Drug } from '../types';\nimport SearchWithFavorites from '../components/Search/SearchWithFavorites';\nimport EnhancedDrugInfo from '../components/DrugInfo/EnhancedDrugInfo';\nimport DrugComparisonTool from '../components/DrugInfo/DrugComparisonTool';\nimport { apiBaseUrl } from '../utils/env';\nimport { \n  Database, \n  Filter, \n  Grid, \n  List, \n  Search, \n  Star, \n  BarChart3,\n  Plus,\n  Eye,\n  GitCompare,\n  Bookmark,\n  TrendingUp,\n  Activity,\n  AlertTriangle,\n  CheckCircle\n} from 'lucide-react';\nimport { SearchFilter } from '../hooks/useAdvancedSearch';\n\ninterface DrugCategoryStats {\n  category: string;\n  count: number;\n  trending: boolean;\n  newAdditions: number;\n}\n\nconst DrugDatabase: React.FC = () => {\n  const [viewMode, setViewMode] = useState<'grid' | 'list' | 'comparison'>('grid');\n  const [selectedDrug, setSelectedDrug] = useState<Drug | null>(null);\n  const [searchResults, setSearchResults] = useState<Drug[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [categoryStats, setCategoryStats] = useState<DrugCategoryStats[]>([]);\n  const [comparisonDrugs, setComparisonDrugs] = useState<Drug[]>([]);\n  const [drugDatabase, setDrugDatabase] = useState<Drug[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  const API_BASE = apiBaseUrl();\n\n  useEffect(() => {\n    loadCategoryStats();\n    loadFeaturedDrugs();\n    // Pick up selected drug passed from AI-Enhanced view\n    try {\n      const raw = localStorage.getItem('osrx_selected_drug');\n      if (raw) {\n        const d = JSON.parse(raw);\n        const mapped: Drug = {\n          rxcui: String(d.rxcui || d.id || ''),\n          name: d.name,\n          generic_name: d.generic_name || d.genericName || d.name,\n          brand_names: d.brand_names || d.brandNames || [],\n          dosage_forms: d.dosage_forms || d.dosageForms || [],\n          strengths: d.strengths || [],\n          therapeutic_class: d.therapeutic_class || d.therapeuticClass || undefined,\n          indication: Array.isArray(d.indication) ? d.indication.join(', ') : d.indication\n        };\n        setSelectedDrug(mapped);\n        // Clear after consuming\n        localStorage.removeItem('osrx_selected_drug');\n        setViewMode('list');\n      }\n    } catch {}\n  }, []);\n\n  const loadFeaturedDrugs = async () => {\n    try {\n      setLoading(true);\n      // Load featured drugs with comprehensive clinical data\n      const featuredRxcuis = [\n        '1049502', // Oxycodone ER\n        '861467',  // Pembrolizumab\n        '282464',  // Imatinib\n        '40048',   // Doxorubicin\n        '41126',   // Carboplatin\n        '583214'   // Paclitaxel (corrected RxCUI)\n      ];\n\n      const drugsPromises = featuredRxcuis.map(async (rxcui) => {\n        try {\n          const response = await fetch(`${API_BASE}/drugs/enhanced/${rxcui}`);\n          if (!response.ok) throw new Error('Failed to fetch');\n          const data = await response.json();\n          return {\n            rxcui: data.drug.rxcui,\n            name: data.drug.name,\n            genericName: data.drug.genericName || data.drug.name,\n            brandNames: data.drug.brandNames || [],\n            category: data.drug.clinicalInsights?.mechanismOfAction ? 'Clinical Therapy' : 'Medication',\n            mechanism: data.drug.clinicalInsights?.mechanismOfAction || 'Therapeutic agent',\n            indications: data.drug.clinicalInsights?.patientSubgroups?.map((s: any) => s.criteria) || [],\n            contraindications: data.clinicalDecisionSupport?.contraindications || [],\n            sideEffects: data.drug.riskProfile?.specificRisks?.map((r: any) => r.type) || [],\n            interactions: [],\n            dosing: {\n              standard: data.clinicalDecisionSupport?.doseGuidance?.recommendedDose || 'Consult prescribing information',\n              renal: 'Adjust based on renal function',\n              hepatic: 'Adjust based on hepatic function'\n            },\n            monitoring: data.clinicalDecisionSupport?.monitoringPlan?.baseline || [],\n            fdaApproved: true,\n            oncologyDrug: true,\n            clinicalData: data // Store full clinical data\n          };\n        } catch (error) {\n          console.warn(`Failed to load drug ${rxcui}:`, error);\n          return null;\n        }\n      });\n\n      const drugs = (await Promise.all(drugsPromises)).filter(Boolean) as Drug[];\n      setDrugDatabase(drugs);\n    } catch (error) {\n      console.error('Failed to load featured drugs:', error);\n      setError('Failed to load clinical data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadCategoryStats = () => {\n    const stats: DrugCategoryStats[] = [\n      { category: 'Immunotherapy', count: 45, trending: true, newAdditions: 8 },\n      { category: 'Targeted Therapy', count: 123, trending: true, newAdditions: 15 },\n      { category: 'Alkylating Agent', count: 34, trending: false, newAdditions: 2 },\n      { category: 'Antimetabolite', count: 28, trending: false, newAdditions: 1 },\n      { category: 'Anthracycline', count: 12, trending: false, newAdditions: 0 },\n      { category: 'Hormone Therapy', count: 56, trending: false, newAdditions: 3 }\n    ];\n    setCategoryStats(stats);\n  };\n\n  const handleSearch = async (query: string, filters?: SearchFilter) => {\n    if (!query.trim()) {\n      setSearchResults([]);\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(`${API_BASE}/drugs/enhanced/search?q=${encodeURIComponent(query)}`);\n      if (!response.ok) throw new Error('Search failed');\n      \n      const data = await response.json();\n      \n      // Transform API results to match our Drug interface\n      const transformedResults = data.results.map((drug: any) => ({\n        rxcui: drug.rxcui,\n        name: drug.name,\n        genericName: drug.genericName || drug.name,\n        brandNames: drug.brandNames || [],\n        category: drug.clinicalRelevance?.therapeuticClass || 'Medication',\n        mechanism: drug.clinicalRelevance?.mechanismOfAction || 'Therapeutic agent',\n        indications: drug.clinicalRelevance?.primaryIndications || [],\n        contraindications: drug.safetyAlerts?.map((alert: any) => alert.description) || [],\n        sideEffects: drug.safetyAlerts?.map((alert: any) => alert.type) || [],\n        interactions: [],\n        dosing: {\n          standard: 'Consult prescribing information',\n          renal: 'Adjust based on renal function',\n          hepatic: 'Adjust based on hepatic function'\n        },\n        monitoring: [],\n        fdaApproved: true,\n        oncologyDrug: drug.clinicalRelevance?.isOncologyDrug || false,\n        clinicalData: drug // Store full clinical data\n      }));\n\n      // Apply filters if provided\n      let filteredResults = transformedResults;\n      if (filters) {\n        if (filters.category) {\n          filteredResults = filteredResults.filter((drug: any) => \n            drug.category.toLowerCase().includes(filters.category!.toLowerCase())\n          );\n        }\n        if (filters.isOncology) {\n          filteredResults = filteredResults.filter((drug: any) => drug.oncologyDrug === true);\n        }\n        if (filters.fdaApproved) {\n          filteredResults = filteredResults.filter((drug: any) => drug.fdaApproved === true);\n        }\n      }\n      \n      setSearchResults(filteredResults);\n    } catch (error) {\n      console.error('Search failed:', error);\n      setError('Search failed. Please try again.');\n      \n      // Fallback to local search if API fails\n      let results = drugDatabase;\n      if (query) {\n        const searchTerm = query.toLowerCase();\n        results = results.filter(drug =>\n          drug.name.toLowerCase().includes(searchTerm) ||\n          drug.genericName.toLowerCase().includes(searchTerm) ||\n          drug.category.toLowerCase().includes(searchTerm) ||\n          drug.mechanism.toLowerCase().includes(searchTerm) ||\n          drug.indications?.some((indication: string) => indication.toLowerCase().includes(searchTerm))\n        );\n      }\n      setSearchResults(results);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDrugSelect = (drug: Drug) => {\n    setSelectedDrug(drug);\n    setViewMode('grid');\n  };\n\n  const addToComparison = (drug: Drug) => {\n    if (comparisonDrugs.length < 4 && !comparisonDrugs.find(d => d.rxcui === drug.rxcui)) {\n      setComparisonDrugs(prev => [...prev, drug]);\n    }\n  };\n\n  const removeFromComparison = (rxcui: string) => {\n    setComparisonDrugs(prev => prev.filter(drug => drug.rxcui !== rxcui));\n  };\n\n  const ViewModeButtons = () => (\n    <div className=\"flex items-center space-x-1 bg-gray-100 rounded-lg p-1\">\n      <button\n        onClick={() => setViewMode('grid')}\n        className={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${\n          viewMode === 'grid'\n            ? 'bg-white text-gray-900 shadow-sm'\n            : 'text-gray-500 hover:text-gray-700'\n        }`}\n      >\n        <Grid className=\"w-4 h-4\" />\n      </button>\n      <button\n        onClick={() => setViewMode('list')}\n        className={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${\n          viewMode === 'list'\n            ? 'bg-white text-gray-900 shadow-sm'\n            : 'text-gray-500 hover:text-gray-700'\n        }`}\n      >\n        <List className=\"w-4 h-4\" />\n      </button>\n      <button\n        onClick={() => setViewMode('comparison')}\n        className={`px-3 py-2 rounded-md text-sm font-medium transition-colors flex items-center space-x-1 ${\n          viewMode === 'comparison'\n            ? 'bg-white text-gray-900 shadow-sm'\n            : 'text-gray-500 hover:text-gray-700'\n        }`}\n      >\n        <BarChart3 className=\"w-4 h-4\" />\n        {comparisonDrugs.length > 0 && (\n          <span className=\"bg-blue-600 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n            {comparisonDrugs.length}\n          </span>\n        )}\n      </button>\n    </div>\n  );\n\n  const DrugCard = ({ drug }: { drug: Drug }) => (\n    <div className=\"bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n      <div className=\"flex items-start justify-between mb-3\">\n        <div>\n          <h3 className=\"font-medium text-gray-900\">{drug.name}</h3>\n          <p className=\"text-sm text-gray-600\">{drug.genericName}</p>\n          <span className=\"inline-block mt-1 px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded\">\n            {drug.category}\n          </span>\n        </div>\n        <div className=\"flex items-center space-x-1\">\n          {drug.fdaApproved && (\n            <CheckCircle className=\"w-4 h-4 text-green-500\" title=\"FDA Approved\" />\n          )}\n          <button\n            onClick={() => addToComparison(drug)}\n            className=\"p-1 text-gray-400 hover:text-blue-500 transition-colors\"\n            disabled={comparisonDrugs.length >= 4}\n            title=\"Add to comparison\"\n          >\n            <GitCompare className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n      \n      <p className=\"text-sm text-gray-600 mb-3 line-clamp-2\">{drug.mechanism}</p>\n      \n      <div className=\"space-y-2\">\n        <div>\n          <span className=\"text-xs font-medium text-gray-700\">Indications:</span>\n          <div className=\"flex flex-wrap gap-1 mt-1\">\n            {drug.indications?.slice(0, 3).map((indication, index) => (\n              <span key={index} className=\"text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded\">\n                {indication}\n              </span>\n            ))}\n            {drug.indications && drug.indications.length > 3 && (\n              <span className=\"text-xs text-gray-500\">+{drug.indications.length - 3} more</span>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex items-center justify-between pt-2 border-t border-gray-100\">\n          <div className=\"text-xs text-gray-500\">\n            {drug.sideEffects?.length || 0} side effects\n          </div>\n          <button\n            onClick={() => handleDrugSelect(drug)}\n            className=\"text-sm text-blue-600 hover:text-blue-800 font-medium flex items-center space-x-1\"\n          >\n            <Eye className=\"w-3 h-3\" />\n            <span>View Details</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  const DrugListItem = ({ drug }: { drug: Drug }) => (\n    <div className=\"bg-white border border-gray-200 rounded-lg p-4 hover:shadow-sm transition-shadow\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                <Activity className=\"w-5 h-5 text-blue-600\" />\n              </div>\n            </div>\n            \n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center space-x-2\">\n                <h3 className=\"font-medium text-gray-900 truncate\">{drug.name}</h3>\n                <span className=\"px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded\">\n                  {drug.category}\n                </span>\n                {drug.fdaApproved && (\n                  <CheckCircle className=\"w-4 h-4 text-green-500 flex-shrink-0\" />\n                )}\n              </div>\n              <p className=\"text-sm text-gray-600 truncate\">{drug.mechanism}</p>\n              <div className=\"flex items-center space-x-4 mt-1 text-xs text-gray-500\">\n                <span>{drug.indications?.length || 0} indications</span>\n                <span>{drug.sideEffects?.length || 0} side effects</span>\n                <span>{drug.contraindications?.length || 0} contraindications</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2 ml-4\">\n          <button\n            onClick={() => addToComparison(drug)}\n            className=\"p-2 text-gray-400 hover:text-blue-500 transition-colors\"\n            disabled={comparisonDrugs.length >= 4}\n            title=\"Add to comparison\"\n          >\n            <GitCompare className=\"w-4 h-4\" />\n          </button>\n          <button\n            onClick={() => handleDrugSelect(drug)}\n            className=\"px-3 py-2 text-sm text-blue-600 hover:text-blue-800 font-medium\"\n          >\n            View Details\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"text-center\">\n        <div className=\"flex items-center justify-center space-x-2 mb-4\">\n          <Database className=\"w-8 h-8 text-blue-600\" />\n          <h1 className=\"text-3xl font-bold text-gray-900\">Drug Information Database</h1>\n        </div>\n        <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n          Comprehensive drug information with advanced search, detailed profiles, and comparison tools.\n        </p>\n        \n        {error && (\n          <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center space-x-2\">\n              <AlertTriangle className=\"w-5 h-5 text-red-500\" />\n              <span className=\"text-red-700 font-medium\">{error}</span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Category Statistics */}\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n        {categoryStats.map((stat) => (\n          <div key={stat.category} className=\"bg-white border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-2xl font-bold text-gray-900\">{stat.count}</span>\n              {stat.trending && <TrendingUp className=\"w-4 h-4 text-green-500\" />}\n            </div>\n            <div className=\"text-sm text-gray-600 mb-1\">{stat.category}</div>\n            {stat.newAdditions > 0 && (\n              <div className=\"text-xs text-blue-600\">+{stat.newAdditions} new</div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Search Interface */}\n      <SearchWithFavorites\n        onSearch={handleSearch}\n        placeholder=\"Search drugs by name, category, indication, or mechanism...\"\n        showFilters={true}\n        className=\"w-full\"\n      />\n\n      {/* Results Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">\n            {searchResults.length > 0 ? `Search Results (${searchResults.length})` : 'Featured Drugs'}\n          </h2>\n          {comparisonDrugs.length > 0 && (\n            <div className=\"flex items-center space-x-2 px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\">\n              <GitCompare className=\"w-4 h-4\" />\n              <span>{comparisonDrugs.length} drugs selected for comparison</span>\n            </div>\n          )}\n        </div>\n        \n        <ViewModeButtons />\n      </div>\n\n      {/* Content Area */}\n      {viewMode === 'comparison' ? (\n        <DrugComparisonTool\n          initialDrugs={comparisonDrugs}\n          onAddDrug={addToComparison}\n        />\n      ) : selectedDrug ? (\n        <div className=\"space-y-6\">\n          <button\n            onClick={() => setSelectedDrug(null)}\n            className=\"flex items-center space-x-2 text-blue-600 hover:text-blue-800 font-medium\"\n          >\n            <span>←</span>\n            <span>Back to Search Results</span>\n          </button>\n          \n          <EnhancedDrugInfo drug={selectedDrug} />\n        </div>\n      ) : (\n        <div>\n          {loading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n            </div>\n          ) : (\n            <div className={`${\n              viewMode === 'grid' \n                ? 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6' \n                : 'space-y-4'\n            }`}>\n              {(searchResults.length > 0 ? searchResults : drugDatabase).map((drug) => \n                viewMode === 'grid' ? (\n                  <DrugCard key={drug.rxcui} drug={drug} />\n                ) : (\n                  <DrugListItem key={drug.rxcui} drug={drug} />\n                )\n              )}\n            </div>\n          )}\n          \n          {!loading && searchResults.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Search className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No results found</h3>\n              <p className=\"text-gray-600\">Try adjusting your search terms or filters.</p>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DrugDatabase;\n"],"names":["STORAGE_KEYS","useAdvancedSearch","state","setState","useState","useEffect","savedHistory","savedFavorites","savedRecent","prev","error","setQuery","query","generateSuggestions","setFilters","filters","clearFilters","suggestions","suggestion","performSearch","API_BASE","results","response","drugData","basicResponse","drug","applyFiltersToResults","searchHistoryItem","updatedRecentSearches","s","addToFavorites","item","favoriteItem","removeFromFavorites","favoriteId","fav","updateFavorite","updates","clearHistory","clearRecentSearches","isFavorite","type","itemId","activeFiltersCount","useMemo","count","favoritesByType","acc","drugs","filteredDrugs","indication","AdvancedSearchDialog","isOpen","onClose","onSearch","recentSearches","history","activeTab","setActiveTab","handleSearch","handleFilterChange","key","value","drugCategories","mechanisms","indications","routes","jsxs","jsx","Filter","X","e","Search","index","search","category","mechanism","route","History","Star","items","tag","SearchWithFavorites","placeholder","showFilters","className","isAdvancedSearchOpen","setIsAdvancedSearchOpen","showSuggestions","setShowSuggestions","showQuickAccess","setShowQuickAccess","searchRef","useRef","inputRef","handleClickOutside","event","handleInputChange","searchQuery","finalQuery","handleAdvancedSearch","handleInputFocus","handleKeyDown","addToFavoritesFromSearch","Clock","Bookmark","EnhancedDrugInfo","expandedSections","setExpandedSections","drugDetails","setDrugDetails","clinicalTrials","setClinicalTrials","guidelines","setGuidelines","loading","setLoading","loadEnhancedDrugData","loadDrugDetails","loadClinicalTrials","loadGuidelines","details","contraindication","effect","trials","guidelinesList","toggleSection","sectionId","newExpanded","getSeverityIcon","severity","XCircle","AlertTriangle","CheckCircle","Info","getSeverityBg","getTrialStatusBadge","status","statusConfig","config","tabs","BookOpen","Activity","Shield","Target","Users","Pill","ExternalLink","tab","Icon","Zap","Heart","detail","ChevronUp","ChevronDown","subgroup","concern","pop","BarChart3","trial","guideline","DrugComparisonTool","initialDrugs","onAddDrug","selectedDrugs","setSelectedDrugs","setSearchQuery","showAddDrug","setShowAddDrug","availableDrugs","enhanceDrugForComparison","calculateComparisonScore","generateStrengths","generateWeaknesses","generateClinicalNotes","score","strengths","weaknesses","notes","comparisonMetrics","a","b","monitor","addDrug","d","enhanced","removeDrug","rxcui","filteredAvailableDrugs","getComparisonIndicator","metric","drugIndex","currentDrug","bestDrug","best","worstDrug","worst","TrendingUp","Plus","strength","weakness","DrugDatabase","viewMode","setViewMode","selectedDrug","setSelectedDrug","searchResults","setSearchResults","categoryStats","setCategoryStats","comparisonDrugs","setComparisonDrugs","drugDatabase","setDrugDatabase","setError","apiBaseUrl","loadCategoryStats","loadFeaturedDrugs","raw","mapped","drugsPromises","data","r","filteredResults","alert","searchTerm","handleDrugSelect","addToComparison","ViewModeButtons","Grid","List","DrugCard","GitCompare","Eye","DrugListItem","Database","stat"],"mappings":"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"}