{"version":3,"file":"AIRecommendations-BWI3_VY6.js","sources":["../../node_modules/lucide-react/dist/esm/icons/cloud.js","../../node_modules/lucide-react/dist/esm/icons/server.js","../../node_modules/lucide-react/dist/esm/icons/thumbs-down.js","../../src/components/AI/RecommendationEngine.tsx","../../src/components/Analytics/InteroperabilityManager.tsx","../../src/pages/AIRecommendations.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M17.5 19H9a7 7 0 1 1 6.71-9h1.79a4.5 4.5 0 1 1 0 9Z\", key: \"p7xjir\" }]\n];\nconst Cloud = createLucideIcon(\"cloud\", __iconNode);\n\nexport { __iconNode, Cloud as default };\n//# sourceMappingURL=cloud.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"rect\", { width: \"20\", height: \"8\", x: \"2\", y: \"2\", rx: \"2\", ry: \"2\", key: \"ngkwjq\" }],\n  [\"rect\", { width: \"20\", height: \"8\", x: \"2\", y: \"14\", rx: \"2\", ry: \"2\", key: \"iecqi9\" }],\n  [\"line\", { x1: \"6\", x2: \"6.01\", y1: \"6\", y2: \"6\", key: \"16zg32\" }],\n  [\"line\", { x1: \"6\", x2: \"6.01\", y1: \"18\", y2: \"18\", key: \"nzw8ys\" }]\n];\nconst Server = createLucideIcon(\"server\", __iconNode);\n\nexport { __iconNode, Server as default };\n//# sourceMappingURL=server.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M17 14V2\", key: \"8ymqnk\" }],\n  [\n    \"path\",\n    {\n      d: \"M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88Z\",\n      key: \"m61m77\"\n    }\n  ]\n];\nconst ThumbsDown = createLucideIcon(\"thumbs-down\", __iconNode);\n\nexport { __iconNode, ThumbsDown as default };\n//# sourceMappingURL=thumbs-down.js.map\n","import React, { useState, useEffect } from 'react';\nimport { PatientProfile } from '../../types';\nimport { \n  Brain, \n  Target, \n  TrendingUp, \n  AlertTriangle, \n  CheckCircle,\n  Lightbulb,\n  Activity,\n  Shield,\n  Zap,\n  Clock,\n  Star,\n  ThumbsUp,\n  ThumbsDown,\n  Eye,\n  Settings,\n  RefreshCw,\n  BookOpen,\n  Users,\n  Database,\n  Award,\n  Filter\n} from 'lucide-react';\n\ninterface AIRecommendation {\n  id: string;\n  type: 'drug_selection' | 'dose_adjustment' | 'monitoring' | 'interaction_alert' | 'clinical_pathway' | 'biomarker';\n  priority: 'high' | 'medium' | 'low';\n  confidence: number;\n  title: string;\n  description: string;\n  rationale: string[];\n  evidence: {\n    level: 'A' | 'B' | 'C' | 'D';\n    sources: string[];\n    studyCount: number;\n    patientCount: number;\n  };\n  recommendation: string;\n  alternatives?: string[];\n  contraindications?: string[];\n  monitoring?: string[];\n  expectedOutcome: {\n    efficacy: number;\n    safety: number;\n    timeToEffect: string;\n    durationOfEffect: string;\n  };\n  userFeedback?: 'accepted' | 'rejected' | 'modified';\n  timestamp: string;\n  category: string;\n}\n\ninterface RecommendationFilters {\n  type: string[];\n  priority: string[];\n  confidence: number;\n  category: string[];\n  showFeedback: boolean;\n}\n\ninterface AIInsight {\n  id: string;\n  title: string;\n  insight: string;\n  impact: 'positive' | 'negative' | 'neutral';\n  relevance: number;\n  category: string;\n}\n\nconst RecommendationEngine: React.FC<{\n  patient?: PatientProfile;\n  className?: string;\n}> = ({ patient, className = '' }) => {\n  const [recommendations, setRecommendations] = useState<AIRecommendation[]>([]);\n  const [insights, setInsights] = useState<AIInsight[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedRecommendation, setSelectedRecommendation] = useState<AIRecommendation | null>(null);\n  const [filters, setFilters] = useState<RecommendationFilters>({\n    type: [],\n    priority: [],\n    confidence: 70,\n    category: [],\n    showFeedback: false\n  });\n  const [showFilters, setShowFilters] = useState(false);\n\n  useEffect(() => {\n    if (patient) {\n      generateRecommendations();\n    }\n  }, [patient]);\n\n  const generateRecommendations = async () => {\n    setLoading(true);\n    try {\n      // Simulate AI processing delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      const mockRecommendations: AIRecommendation[] = [\n        {\n          id: '1',\n          type: 'drug_selection',\n          priority: 'high',\n          confidence: 92,\n          title: 'Consider Pembrolizumab for PD-L1 Positive NSCLC',\n          description: 'Based on patient\\'s PD-L1 expression (85%) and stage IIIB NSCLC, pembrolizumab monotherapy is recommended as first-line treatment.',\n          rationale: [\n            'PD-L1 tumor proportion score ≥50% (85% in this patient)',\n            'Stage IIIB non-small cell lung cancer diagnosis',\n            'No contraindications to immunotherapy identified',\n            'ECOG performance status 0-1',\n            'Adequate organ function'\n          ],\n          evidence: {\n            level: 'A',\n            sources: ['KEYNOTE-024', 'KEYNOTE-042', 'NCCN Guidelines'],\n            studyCount: 15,\n            patientCount: 8420\n          },\n          recommendation: 'Initiate pembrolizumab 200mg IV every 3 weeks',\n          alternatives: ['Carboplatin + paclitaxel + pembrolizumab', 'Atezolizumab monotherapy'],\n          monitoring: ['Immune-related adverse events', 'Tumor response (8-12 weeks)', 'Thyroid function'],\n          expectedOutcome: {\n            efficacy: 87,\n            safety: 78,\n            timeToEffect: '6-8 weeks',\n            durationOfEffect: '12-24 months'\n          },\n          timestamp: '2024-01-15T14:30:00Z',\n          category: 'Immunotherapy'\n        },\n        {\n          id: '2',\n          type: 'dose_adjustment',\n          priority: 'medium',\n          confidence: 88,\n          title: 'Carboplatin Dose Adjustment for Renal Function',\n          description: 'Patient\\'s creatinine clearance of 65 mL/min requires carboplatin dose modification using Calvert formula.',\n          rationale: [\n            'Creatinine clearance 65 mL/min (mild renal impairment)',\n            'Age 72 years with potential for further decline',\n            'Previous nephrotoxicity history with cisplatin',\n            'Optimal AUC targeting for efficacy and safety'\n          ],\n          evidence: {\n            level: 'A',\n            sources: ['Calvert Formula Validation Studies', 'FDA Label', 'Clinical Pharmacology'],\n            studyCount: 8,\n            patientCount: 2340\n          },\n          recommendation: 'Reduce carboplatin dose to AUC 4.5 (calculated: 320mg total dose)',\n          monitoring: ['Renal function weekly', 'Complete blood count', 'Hearing assessment'],\n          expectedOutcome: {\n            efficacy: 85,\n            safety: 92,\n            timeToEffect: '2-3 weeks',\n            durationOfEffect: '3-4 weeks per cycle'\n          },\n          timestamp: '2024-01-15T14:25:00Z',\n          category: 'Dose Optimization'\n        },\n        {\n          id: '3',\n          type: 'monitoring',\n          priority: 'high',\n          confidence: 95,\n          title: 'Enhanced Cardiac Monitoring for Doxorubicin',\n          description: 'Patient at increased risk for doxorubicin-induced cardiomyopathy due to age and baseline LVEF.',\n          rationale: [\n            'Age >65 years (72 years)',\n            'Baseline LVEF 55% (borderline)',\n            'Planned cumulative dose >300 mg/m²',\n            'History of hypertension',\n            'Female gender (increased risk)'\n          ],\n          evidence: {\n            level: 'A',\n            sources: ['Cardio-Oncology Guidelines', 'ASE/EACVI Recommendations', 'ASCO Guidelines'],\n            studyCount: 25,\n            patientCount: 12500\n          },\n          recommendation: 'Obtain echocardiogram before each cycle after 240 mg/m² cumulative dose',\n          monitoring: ['Echocardiogram q3 cycles initially, then q cycle', 'BNP/NT-proBNP', 'Clinical symptoms'],\n          expectedOutcome: {\n            efficacy: 88,\n            safety: 94,\n            timeToEffect: 'Immediate',\n            durationOfEffect: 'Ongoing'\n          },\n          timestamp: '2024-01-15T14:20:00Z',\n          category: 'Cardiotoxicity Prevention'\n        },\n        {\n          id: '4',\n          type: 'biomarker',\n          priority: 'medium',\n          confidence: 82,\n          title: 'EGFR Mutation Testing Recommended',\n          description: 'Given patient demographics and histology, EGFR mutation testing could identify targeted therapy options.',\n          rationale: [\n            'Adenocarcinoma histology',\n            'Never smoker status',\n            'Asian ethnicity',\n            'Female gender',\n            'Age >65 years'\n          ],\n          evidence: {\n            level: 'A',\n            sources: ['NCCN Guidelines', 'IASLC Recommendations', 'CAP/IASLC/AMP Guidelines'],\n            studyCount: 45,\n            patientCount: 28000\n          },\n          recommendation: 'Order comprehensive genomic profiling including EGFR, ALK, ROS1, BRAF, KRAS',\n          alternatives: ['Targeted EGFR testing only', 'Liquid biopsy if tissue insufficient'],\n          expectedOutcome: {\n            efficacy: 75,\n            safety: 98,\n            timeToEffect: '7-14 days for results',\n            durationOfEffect: 'Permanent information'\n          },\n          timestamp: '2024-01-15T14:15:00Z',\n          category: 'Precision Medicine'\n        }\n      ];\n\n      const mockInsights: AIInsight[] = [\n        {\n          id: '1',\n          title: 'Treatment Response Prediction',\n          insight: 'Based on similar patient profiles, 89% achieved partial response or better with recommended regimen',\n          impact: 'positive',\n          relevance: 94,\n          category: 'Efficacy Prediction'\n        },\n        {\n          id: '2',\n          title: 'Risk Stratification',\n          insight: 'Patient falls into moderate-risk category for treatment-related mortality (3.2% vs 2.1% average)',\n          impact: 'neutral',\n          relevance: 87,\n          category: 'Safety Assessment'\n        },\n        {\n          id: '3',\n          title: 'Cost-Effectiveness Analysis',\n          insight: 'Recommended therapy shows 1.8x better cost-effectiveness ratio compared to standard chemotherapy',\n          impact: 'positive',\n          relevance: 76,\n          category: 'Economic Impact'\n        }\n      ];\n\n      setRecommendations(mockRecommendations);\n      setInsights(mockInsights);\n    } catch (error) {\n      console.error('Error generating recommendations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFeedback = (recommendationId: string, feedback: 'accepted' | 'rejected' | 'modified') => {\n    setRecommendations(prev => prev.map(rec => \n      rec.id === recommendationId \n        ? { ...rec, userFeedback: feedback }\n        : rec\n    ));\n  };\n\n  const getPriorityIcon = (priority: string) => {\n    switch (priority) {\n      case 'high': return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\n      case 'medium': return <Target className=\"w-4 h-4 text-yellow-500\" />;\n      case 'low': return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      default: return <CheckCircle className=\"w-4 h-4 text-gray-400\" />;\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'drug_selection': return <Target className=\"w-4 h-4 text-blue-500\" />;\n      case 'dose_adjustment': return <Activity className=\"w-4 h-4 text-purple-500\" />;\n      case 'monitoring': return <Eye className=\"w-4 h-4 text-green-500\" />;\n      case 'interaction_alert': return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\n      case 'clinical_pathway': return <BookOpen className=\"w-4 h-4 text-indigo-500\" />;\n      case 'biomarker': return <Database className=\"w-4 h-4 text-cyan-500\" />;\n      default: return <Lightbulb className=\"w-4 h-4 text-gray-400\" />;\n    }\n  };\n\n  const getConfidenceColor = (confidence: number) => {\n    if (confidence >= 90) return 'text-green-600';\n    if (confidence >= 80) return 'text-blue-600';\n    if (confidence >= 70) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const getEvidenceIcon = (level: string) => {\n    switch (level) {\n      case 'A': return <Award className=\"w-4 h-4 text-green-500\" />;\n      case 'B': return <Star className=\"w-4 h-4 text-blue-500\" />;\n      case 'C': return <BookOpen className=\"w-4 h-4 text-yellow-500\" />;\n      case 'D': return <Users className=\"w-4 h-4 text-gray-500\" />;\n      default: return <BookOpen className=\"w-4 h-4 text-gray-400\" />;\n    }\n  };\n\n  const filteredRecommendations = recommendations.filter(rec => {\n    if (filters.type.length > 0 && !filters.type.includes(rec.type)) return false;\n    if (filters.priority.length > 0 && !filters.priority.includes(rec.priority)) return false;\n    if (rec.confidence < filters.confidence) return false;\n    if (filters.category.length > 0 && !filters.category.includes(rec.category)) return false;\n    if (!filters.showFeedback && rec.userFeedback) return false;\n    return true;\n  });\n\n  return (\n    <div className={`bg-white border border-gray-200 rounded-lg shadow-sm ${className}`}>\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Brain className=\"w-6 h-6 text-purple-600\" />\n            <div>\n              <h2 className=\"text-xl font-bold text-gray-900\">AI-Powered Recommendations</h2>\n              <p className=\"text-sm text-gray-600\">\n                Personalized clinical decision support based on patient data and evidence\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={() => setShowFilters(!showFilters)}\n              className={`p-2 rounded-lg transition-colors ${\n                showFilters ? 'bg-blue-100 text-blue-600' : 'text-gray-500 hover:text-gray-700 border border-gray-300 hover:bg-gray-50'\n              }`}\n            >\n              <Filter className=\"w-5 h-5\" />\n            </button>\n            \n            <button\n              onClick={generateRecommendations}\n              disabled={loading}\n              className=\"p-2 text-gray-500 hover:text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors disabled:opacity-50\"\n            >\n              <RefreshCw className={`w-5 h-5 ${loading ? 'animate-spin' : ''}`} />\n            </button>\n            \n            <button className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors flex items-center space-x-2\">\n              <Settings className=\"w-4 h-4\" />\n              <span>Configure AI</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      {showFilters && (\n        <div className=\"p-6 border-b border-gray-200 bg-gray-50\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Type</label>\n              <div className=\"space-y-1\">\n                {['drug_selection', 'dose_adjustment', 'monitoring', 'biomarker'].map((type) => (\n                  <label key={type} className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={filters.type.includes(type)}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setFilters(prev => ({ ...prev, type: [...prev.type, type] }));\n                        } else {\n                          setFilters(prev => ({ ...prev, type: prev.type.filter(t => t !== type) }));\n                        }\n                      }}\n                      className=\"w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500\"\n                    />\n                    <span className=\"ml-2 text-sm text-gray-700 capitalize\">{type.replace('_', ' ')}</span>\n                  </label>\n                ))}\n              </div>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Priority</label>\n              <div className=\"space-y-1\">\n                {['high', 'medium', 'low'].map((priority) => (\n                  <label key={priority} className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      checked={filters.priority.includes(priority)}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setFilters(prev => ({ ...prev, priority: [...prev.priority, priority] }));\n                        } else {\n                          setFilters(prev => ({ ...prev, priority: prev.priority.filter(p => p !== priority) }));\n                        }\n                      }}\n                      className=\"w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500\"\n                    />\n                    <span className=\"ml-2 text-sm text-gray-700 capitalize\">{priority}</span>\n                  </label>\n                ))}\n              </div>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Min Confidence: {filters.confidence}%\n              </label>\n              <input\n                type=\"range\"\n                min=\"50\"\n                max=\"100\"\n                step=\"5\"\n                value={filters.confidence}\n                onChange={(e) => setFilters(prev => ({ ...prev, confidence: parseInt(e.target.value) }))}\n                className=\"w-full\"\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Options</label>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={filters.showFeedback}\n                  onChange={(e) => setFilters(prev => ({ ...prev, showFeedback: e.target.checked }))}\n                  className=\"w-4 h-4 text-purple-600 border-gray-300 rounded focus:ring-purple-500\"\n                />\n                <span className=\"ml-2 text-sm text-gray-700\">Show feedback given</span>\n              </label>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Content */}\n      <div className=\"p-6\">\n        {loading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <div className=\"text-center\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto mb-4\"></div>\n              <p className=\"text-gray-600\">AI is analyzing patient data and generating recommendations...</p>\n            </div>\n          </div>\n        ) : !patient ? (\n          <div className=\"text-center py-12\">\n            <Brain className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Patient Selected</h3>\n            <p className=\"text-gray-600\">Select a patient to generate AI-powered recommendations.</p>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {/* AI Insights Summary */}\n            {insights.length > 0 && (\n              <div className=\"bg-purple-50 border border-purple-200 rounded-lg p-4\">\n                <h3 className=\"text-lg font-medium text-purple-900 mb-3 flex items-center space-x-2\">\n                  <Lightbulb className=\"w-5 h-5\" />\n                  <span>AI Insights</span>\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  {insights.map((insight) => (\n                    <div key={insight.id} className=\"bg-white p-3 rounded border\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-gray-900 text-sm\">{insight.title}</h4>\n                        <span className=\"text-xs text-gray-500\">{insight.relevance}% relevant</span>\n                      </div>\n                      <p className=\"text-sm text-gray-700\">{insight.insight}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Recommendations */}\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-medium text-gray-900\">\n                  Recommendations ({filteredRecommendations.length})\n                </h3>\n                <div className=\"text-sm text-gray-500\">\n                  Sorted by priority and confidence\n                </div>\n              </div>\n              \n              {filteredRecommendations.length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <Target className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n                  <p className=\"text-gray-600\">No recommendations match your current filters.</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {filteredRecommendations.map((recommendation) => (\n                    <div key={recommendation.id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div className=\"flex items-start space-x-3\">\n                          {getTypeIcon(recommendation.type)}\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center space-x-2 mb-1\">\n                              <h4 className=\"font-medium text-gray-900\">{recommendation.title}</h4>\n                              {getPriorityIcon(recommendation.priority)}\n                              <span className=\"text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded\">\n                                {recommendation.category}\n                              </span>\n                            </div>\n                            <p className=\"text-sm text-gray-600 mb-2\">{recommendation.description}</p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"text-right\">\n                            <div className={`font-bold ${getConfidenceColor(recommendation.confidence)}`}>\n                              {recommendation.confidence}%\n                            </div>\n                            <div className=\"text-xs text-gray-500\">confidence</div>\n                          </div>\n                          {getEvidenceIcon(recommendation.evidence.level)}\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-blue-50 border border-blue-200 rounded p-3 mb-3\">\n                        <div className=\"font-medium text-blue-900 mb-1\">Recommendation:</div>\n                        <div className=\"text-blue-800\">{recommendation.recommendation}</div>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-3\">\n                        <div>\n                          <h5 className=\"font-medium text-gray-900 mb-2\">Expected Outcomes:</h5>\n                          <div className=\"space-y-1 text-sm\">\n                            <div className=\"flex justify-between\">\n                              <span>Efficacy:</span>\n                              <span className=\"font-medium\">{recommendation.expectedOutcome.efficacy}%</span>\n                            </div>\n                            <div className=\"flex justify-between\">\n                              <span>Safety:</span>\n                              <span className=\"font-medium\">{recommendation.expectedOutcome.safety}%</span>\n                            </div>\n                            <div className=\"flex justify-between\">\n                              <span>Time to Effect:</span>\n                              <span className=\"font-medium\">{recommendation.expectedOutcome.timeToEffect}</span>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div>\n                          <h5 className=\"font-medium text-gray-900 mb-2\">Evidence Level {recommendation.evidence.level}:</h5>\n                          <div className=\"space-y-1 text-sm text-gray-600\">\n                            <div>{recommendation.evidence.studyCount} studies</div>\n                            <div>{recommendation.evidence.patientCount.toLocaleString()} patients</div>\n                            <div className=\"flex flex-wrap gap-1\">\n                              {recommendation.evidence.sources.slice(0, 2).map((source, index) => (\n                                <span key={index} className=\"text-xs bg-gray-100 px-2 py-1 rounded\">\n                                  {source}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between pt-3 border-t border-gray-100\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Clock className=\"w-4 h-4 text-gray-400\" />\n                          <span className=\"text-sm text-gray-500\">\n                            {new Date(recommendation.timestamp).toLocaleString()}\n                          </span>\n                        </div>\n                        \n                        <div className=\"flex items-center space-x-2\">\n                          {recommendation.userFeedback ? (\n                            <span className={`text-sm px-2 py-1 rounded ${\n                              recommendation.userFeedback === 'accepted' ? 'bg-green-100 text-green-800' :\n                              recommendation.userFeedback === 'rejected' ? 'bg-red-100 text-red-800' :\n                              'bg-yellow-100 text-yellow-800'\n                            }`}>\n                              {recommendation.userFeedback}\n                            </span>\n                          ) : (\n                            <>\n                              <button\n                                onClick={() => handleFeedback(recommendation.id, 'accepted')}\n                                className=\"p-2 text-green-600 hover:bg-green-100 rounded transition-colors\"\n                                title=\"Accept recommendation\"\n                              >\n                                <ThumbsUp className=\"w-4 h-4\" />\n                              </button>\n                              <button\n                                onClick={() => handleFeedback(recommendation.id, 'rejected')}\n                                className=\"p-2 text-red-600 hover:bg-red-100 rounded transition-colors\"\n                                title=\"Reject recommendation\"\n                              >\n                                <ThumbsDown className=\"w-4 h-4\" />\n                              </button>\n                            </>\n                          )}\n                          \n                          <button\n                            onClick={() => setSelectedRecommendation(recommendation)}\n                            className=\"text-sm text-blue-600 hover:text-blue-800 font-medium\"\n                          >\n                            View Details\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Detailed Recommendation Modal */}\n      {selectedRecommendation && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-xl font-bold text-gray-900\">{selectedRecommendation.title}</h3>\n                <button\n                  onClick={() => setSelectedRecommendation(null)}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  ×\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"p-6 space-y-6\">\n              <div>\n                <h4 className=\"font-medium text-gray-900 mb-2\">Clinical Rationale:</h4>\n                <ul className=\"space-y-1\">\n                  {selectedRecommendation.rationale.map((point, index) => (\n                    <li key={index} className=\"text-sm text-gray-700 flex items-start space-x-2\">\n                      <CheckCircle className=\"w-4 h-4 text-green-500 mt-0.5 flex-shrink-0\" />\n                      <span>{point}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              \n              {selectedRecommendation.monitoring && (\n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Monitoring Requirements:</h4>\n                  <ul className=\"space-y-1\">\n                    {selectedRecommendation.monitoring.map((item, index) => (\n                      <li key={index} className=\"text-sm text-gray-700 flex items-start space-x-2\">\n                        <Eye className=\"w-4 h-4 text-blue-500 mt-0.5 flex-shrink-0\" />\n                        <span>{item}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n              \n              {selectedRecommendation.alternatives && (\n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Alternative Options:</h4>\n                  <ul className=\"space-y-1\">\n                    {selectedRecommendation.alternatives.map((alt, index) => (\n                      <li key={index} className=\"text-sm text-gray-700\">• {alt}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RecommendationEngine;","import React, { useState, useEffect } from 'react';\nimport { \n  Cloud, \n  Database, \n  Shield, \n  CheckCircle, \n  XCircle, \n  AlertTriangle,\n  Zap,\n  Settings,\n  Plus,\n  RefreshCw,\n  ExternalLink,\n  Lock,\n  Unlock,\n  Activity,\n  Globe,\n  Server,\n  Link,\n  Eye,\n  EyeOff,\n  Key,\n  Users,\n  Clock\n} from 'lucide-react';\n\ninterface SystemIntegration {\n  id: string;\n  name: string;\n  type: 'EHR' | 'LIMS' | 'Pharmacy' | 'API' | 'Database' | 'Cloud';\n  status: 'connected' | 'disconnected' | 'error' | 'pending';\n  protocol: 'FHIR' | 'HL7' | 'REST' | 'SOAP' | 'SQL' | 'GraphQL';\n  endpoint: string;\n  lastSync: string;\n  dataTypes: string[];\n  volume: number;\n  latency: number;\n  errorRate: number;\n  uptime: number;\n  version?: string;\n  authentication: 'OAuth2' | 'API Key' | 'Certificate' | 'Basic Auth';\n  encryptionLevel: 'TLS 1.2' | 'TLS 1.3' | 'AES-256' | 'End-to-End';\n}\n\ninterface DataFlow {\n  id: string;\n  source: string;\n  destination: string;\n  dataType: string;\n  volume: number;\n  frequency: string;\n  lastTransfer: string;\n  status: 'active' | 'paused' | 'error';\n  transformations: string[];\n}\n\ninterface ComplianceMetric {\n  standard: string;\n  status: 'compliant' | 'non-compliant' | 'partial';\n  score: number;\n  requirements: { name: string; met: boolean; description: string }[];\n  lastAudit: string;\n}\n\nconst InteroperabilityManager: React.FC = () => {\n  const [integrations, setIntegrations] = useState<SystemIntegration[]>([]);\n  const [dataFlows, setDataFlows] = useState<DataFlow[]>([]);\n  const [complianceMetrics, setComplianceMetrics] = useState<ComplianceMetric[]>([]);\n  const [activeTab, setActiveTab] = useState<'systems' | 'dataflows' | 'compliance' | 'monitoring'>('systems');\n  const [showAddIntegration, setShowAddIntegration] = useState(false);\n  const [selectedIntegration, setSelectedIntegration] = useState<SystemIntegration | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadInteroperabilityData();\n  }, []);\n\n  const loadInteroperabilityData = async () => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const mockIntegrations: SystemIntegration[] = [\n        {\n          id: '1',\n          name: 'Epic EHR System',\n          type: 'EHR',\n          status: 'connected',\n          protocol: 'FHIR',\n          endpoint: 'https://api.epic.com/fhir/R4',\n          lastSync: '2024-01-15T14:30:00Z',\n          dataTypes: ['Patient Data', 'Medications', 'Lab Results', 'Allergies'],\n          volume: 15420,\n          latency: 245,\n          errorRate: 0.02,\n          uptime: 99.95,\n          version: 'R4',\n          authentication: 'OAuth2',\n          encryptionLevel: 'TLS 1.3'\n        },\n        {\n          id: '2',\n          name: 'Cerner PowerChart',\n          type: 'EHR',\n          status: 'connected',\n          protocol: 'FHIR',\n          endpoint: 'https://fhir.cerner.com/r4',\n          lastSync: '2024-01-15T14:25:00Z',\n          dataTypes: ['Patient Data', 'Orders', 'Results'],\n          volume: 8930,\n          latency: 312,\n          errorRate: 0.05,\n          uptime: 99.87,\n          version: 'R4',\n          authentication: 'OAuth2',\n          encryptionLevel: 'TLS 1.3'\n        },\n        {\n          id: '3',\n          name: 'Hospital Pharmacy System',\n          type: 'Pharmacy',\n          status: 'connected',\n          protocol: 'HL7',\n          endpoint: 'hl7.hospital.local:8080',\n          lastSync: '2024-01-15T14:28:00Z',\n          dataTypes: ['Dispensing Records', 'Inventory', 'Drug Interactions'],\n          volume: 5240,\n          latency: 189,\n          errorRate: 0.01,\n          uptime: 99.99,\n          version: 'v2.8',\n          authentication: 'Certificate',\n          encryptionLevel: 'TLS 1.2'\n        },\n        {\n          id: '4',\n          name: 'Laboratory Information System',\n          type: 'LIMS',\n          status: 'error',\n          protocol: 'REST',\n          endpoint: 'https://api.labcorp.com/v2',\n          lastSync: '2024-01-15T10:15:00Z',\n          dataTypes: ['Lab Results', 'Test Orders', 'Reference Ranges'],\n          volume: 3450,\n          latency: 456,\n          errorRate: 2.3,\n          uptime: 97.2,\n          authentication: 'API Key',\n          encryptionLevel: 'TLS 1.2'\n        },\n        {\n          id: '5',\n          name: 'Clinical Trials Database',\n          type: 'Database',\n          status: 'pending',\n          protocol: 'GraphQL',\n          endpoint: 'https://trials.nih.gov/graphql',\n          lastSync: '2024-01-14T22:00:00Z',\n          dataTypes: ['Trial Data', 'Eligibility Criteria', 'Outcomes'],\n          volume: 1250,\n          latency: 567,\n          errorRate: 0.15,\n          uptime: 98.5,\n          authentication: 'API Key',\n          encryptionLevel: 'TLS 1.3'\n        }\n      ];\n\n      const mockDataFlows: DataFlow[] = [\n        {\n          id: '1',\n          source: 'Epic EHR System',\n          destination: 'OncoSafeRx Database',\n          dataType: 'Patient Demographics',\n          volume: 1250,\n          frequency: 'Real-time',\n          lastTransfer: '2024-01-15T14:30:00Z',\n          status: 'active',\n          transformations: ['Data Mapping', 'Validation', 'Encryption']\n        },\n        {\n          id: '2',\n          source: 'OncoSafeRx Database',\n          destination: 'Hospital Pharmacy System',\n          dataType: 'Drug Interaction Alerts',\n          volume: 340,\n          frequency: 'Real-time',\n          lastTransfer: '2024-01-15T14:28:00Z',\n          status: 'active',\n          transformations: ['Alert Formatting', 'Priority Assignment']\n        },\n        {\n          id: '3',\n          source: 'Laboratory Information System',\n          destination: 'OncoSafeRx Database',\n          dataType: 'Lab Results',\n          volume: 890,\n          frequency: 'Every 15 minutes',\n          lastTransfer: '2024-01-15T14:15:00Z',\n          status: 'error',\n          transformations: ['Unit Conversion', 'Reference Range Mapping']\n        }\n      ];\n\n      const mockCompliance: ComplianceMetric[] = [\n        {\n          standard: 'HIPAA',\n          status: 'compliant',\n          score: 98,\n          requirements: [\n            { name: 'Data Encryption', met: true, description: 'All data encrypted in transit and at rest' },\n            { name: 'Access Controls', met: true, description: 'Role-based access implemented' },\n            { name: 'Audit Logs', met: true, description: 'Comprehensive audit logging active' },\n            { name: 'Data Minimization', met: false, description: 'Some unnecessary data collection identified' }\n          ],\n          lastAudit: '2024-01-01'\n        },\n        {\n          standard: 'FHIR R4',\n          status: 'compliant',\n          score: 95,\n          requirements: [\n            { name: 'Resource Conformance', met: true, description: 'All resources conform to FHIR R4 spec' },\n            { name: 'Security Implementation', met: true, description: 'OAuth2 and SMART on FHIR implemented' },\n            { name: 'Terminology Binding', met: true, description: 'Standard terminologies used' },\n            { name: 'Capability Statement', met: true, description: 'Accurate capability statement published' }\n          ],\n          lastAudit: '2024-01-10'\n        },\n        {\n          standard: 'HL7 v2.8',\n          status: 'partial',\n          score: 82,\n          requirements: [\n            { name: 'Message Structure', met: true, description: 'Proper HL7 message formatting' },\n            { name: 'Acknowledgments', met: true, description: 'ACK/NACK handling implemented' },\n            { name: 'Error Handling', met: false, description: 'Enhanced error reporting needed' },\n            { name: 'Encoding Standards', met: true, description: 'UTF-8 encoding properly implemented' }\n          ],\n          lastAudit: '2024-01-05'\n        }\n      ];\n\n      setIntegrations(mockIntegrations);\n      setDataFlows(mockDataFlows);\n      setComplianceMetrics(mockCompliance);\n    } catch (error) {\n      console.error('Error loading interoperability data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'connected': return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'error': return <XCircle className=\"w-5 h-5 text-red-500\" />;\n      case 'pending': return <Clock className=\"w-5 h-5 text-yellow-500\" />;\n      default: return <XCircle className=\"w-5 h-5 text-gray-400\" />;\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const statusConfig = {\n      connected: { bg: 'bg-green-100', text: 'text-green-800', label: 'Connected' },\n      disconnected: { bg: 'bg-gray-100', text: 'text-gray-800', label: 'Disconnected' },\n      error: { bg: 'bg-red-100', text: 'text-red-800', label: 'Error' },\n      pending: { bg: 'bg-yellow-100', text: 'text-yellow-800', label: 'Pending' },\n      active: { bg: 'bg-green-100', text: 'text-green-800', label: 'Active' },\n      paused: { bg: 'bg-gray-100', text: 'text-gray-800', label: 'Paused' },\n      compliant: { bg: 'bg-green-100', text: 'text-green-800', label: 'Compliant' },\n      'non-compliant': { bg: 'bg-red-100', text: 'text-red-800', label: 'Non-Compliant' },\n      partial: { bg: 'bg-yellow-100', text: 'text-yellow-800', label: 'Partially Compliant' }\n    };\n    \n    const config = statusConfig[status as keyof typeof statusConfig] || statusConfig.disconnected;\n    \n    return (\n      <span className={`px-2 py-1 text-xs font-medium rounded-full ${config.bg} ${config.text}`}>\n        {config.label}\n      </span>\n    );\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'EHR': return <Database className=\"w-5 h-5 text-blue-500\" />;\n      case 'LIMS': return <Activity className=\"w-5 h-5 text-purple-500\" />;\n      case 'Pharmacy': return <Shield className=\"w-5 h-5 text-green-500\" />;\n      case 'API': return <Globe className=\"w-5 h-5 text-orange-500\" />;\n      case 'Database': return <Server className=\"w-5 h-5 text-gray-500\" />;\n      case 'Cloud': return <Cloud className=\"w-5 h-5 text-cyan-500\" />;\n      default: return <Link className=\"w-5 h-5 text-gray-400\" />;\n    }\n  };\n\n  const tabs = [\n    { id: 'systems', label: 'Connected Systems', icon: Database },\n    { id: 'dataflows', label: 'Data Flows', icon: Activity },\n    { id: 'compliance', label: 'Compliance', icon: Shield },\n    { id: 'monitoring', label: 'Monitoring', icon: Eye }\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-96\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white border border-gray-200 rounded-lg shadow-sm\">\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Globe className=\"w-6 h-6 text-blue-600\" />\n            <div>\n              <h2 className=\"text-xl font-bold text-gray-900\">Interoperability Manager</h2>\n              <p className=\"text-sm text-gray-600\">\n                Manage system integrations, data flows, and compliance standards\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={loadInteroperabilityData}\n              className=\"p-2 text-gray-500 hover:text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n              title=\"Refresh data\"\n            >\n              <RefreshCw className=\"w-5 h-5\" />\n            </button>\n            \n            <button\n              onClick={() => setShowAddIntegration(true)}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              <span>Add Integration</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"flex space-x-8 px-6\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`py-4 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"p-6\">\n        {activeTab === 'systems' && (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n              {integrations.map((integration) => (\n                <div key={integration.id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <div className=\"flex items-center space-x-3\">\n                      {getTypeIcon(integration.type)}\n                      <div>\n                        <h3 className=\"font-medium text-gray-900\">{integration.name}</h3>\n                        <p className=\"text-sm text-gray-600\">{integration.type} • {integration.protocol}</p>\n                      </div>\n                    </div>\n                    {getStatusIcon(integration.status)}\n                  </div>\n                  \n                  <div className=\"space-y-2 mb-4\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-600\">Status:</span>\n                      {getStatusBadge(integration.status)}\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-600\">Uptime:</span>\n                      <span className=\"font-medium\">{integration.uptime}%</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-600\">Latency:</span>\n                      <span className=\"font-medium\">{integration.latency}ms</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-gray-600\">Daily Volume:</span>\n                      <span className=\"font-medium\">{integration.volume.toLocaleString()}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <div className=\"text-xs text-gray-500\">\n                      <div className=\"flex items-center space-x-2 mb-1\">\n                        <Lock className=\"w-3 h-3\" />\n                        <span>{integration.authentication} • {integration.encryptionLevel}</span>\n                      </div>\n                      <div>Last sync: {new Date(integration.lastSync).toLocaleString()}</div>\n                    </div>\n                    \n                    <div className=\"flex flex-wrap gap-1\">\n                      {integration.dataTypes.slice(0, 3).map((type, index) => (\n                        <span key={index} className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\">\n                          {type}\n                        </span>\n                      ))}\n                      {integration.dataTypes.length > 3 && (\n                        <span className=\"text-xs text-gray-500\">+{integration.dataTypes.length - 3} more</span>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between mt-4 pt-3 border-t border-gray-100\">\n                    <button\n                      onClick={() => setSelectedIntegration(integration)}\n                      className=\"text-sm text-blue-600 hover:text-blue-800 font-medium\"\n                    >\n                      View Details\n                    </button>\n                    <button className=\"p-1 text-gray-400 hover:text-gray-600\">\n                      <Settings className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'dataflows' && (\n          <div className=\"space-y-4\">\n            {dataFlows.map((flow) => (\n              <div key={flow.id} className=\"border border-gray-200 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"text-center\">\n                      <div className=\"font-medium text-gray-900\">{flow.source}</div>\n                      <div className=\"text-xs text-gray-500\">Source</div>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-8 border-t border-gray-300\"></div>\n                      <Activity className=\"w-4 h-4 text-blue-500\" />\n                      <div className=\"w-8 border-t border-gray-300\"></div>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"font-medium text-gray-900\">{flow.destination}</div>\n                      <div className=\"text-xs text-gray-500\">Destination</div>\n                    </div>\n                  </div>\n                  {getStatusBadge(flow.status)}\n                </div>\n                \n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                  <div>\n                    <span className=\"text-gray-600\">Data Type:</span>\n                    <p className=\"font-medium\">{flow.dataType}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-600\">Volume:</span>\n                    <p className=\"font-medium\">{flow.volume.toLocaleString()} records</p>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-600\">Frequency:</span>\n                    <p className=\"font-medium\">{flow.frequency}</p>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-600\">Last Transfer:</span>\n                    <p className=\"font-medium\">{new Date(flow.lastTransfer).toLocaleString()}</p>\n                  </div>\n                </div>\n                \n                {flow.transformations.length > 0 && (\n                  <div className=\"mt-3 pt-3 border-t border-gray-100\">\n                    <span className=\"text-sm text-gray-600\">Transformations:</span>\n                    <div className=\"flex flex-wrap gap-2 mt-1\">\n                      {flow.transformations.map((transform, index) => (\n                        <span key={index} className=\"text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded\">\n                          {transform}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n\n        {activeTab === 'compliance' && (\n          <div className=\"space-y-6\">\n            {complianceMetrics.map((metric) => (\n              <div key={metric.standard} className=\"border border-gray-200 rounded-lg p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Shield className=\"w-6 h-6 text-blue-600\" />\n                    <div>\n                      <h3 className=\"text-lg font-medium text-gray-900\">{metric.standard}</h3>\n                      <p className=\"text-sm text-gray-600\">Last audit: {new Date(metric.lastAudit).toLocaleDateString()}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className=\"text-2xl font-bold text-gray-900\">{metric.score}%</div>\n                    {getStatusBadge(metric.status)}\n                  </div>\n                </div>\n                \n                <div className=\"space-y-3\">\n                  {metric.requirements.map((req, index) => (\n                    <div key={index} className=\"flex items-start space-x-3\">\n                      {req.met ? (\n                        <CheckCircle className=\"w-5 h-5 text-green-500 mt-0.5\" />\n                      ) : (\n                        <XCircle className=\"w-5 h-5 text-red-500 mt-0.5\" />\n                      )}\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium text-gray-900\">{req.name}</div>\n                        <div className=\"text-sm text-gray-600\">{req.description}</div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {activeTab === 'monitoring' && (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"w-8 h-8 text-green-600\" />\n                  <div>\n                    <div className=\"text-2xl font-bold text-green-900\">\n                      {integrations.filter(i => i.status === 'connected').length}\n                    </div>\n                    <div className=\"text-sm text-green-700\">Connected Systems</div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <AlertTriangle className=\"w-8 h-8 text-yellow-600\" />\n                  <div>\n                    <div className=\"text-2xl font-bold text-yellow-900\">\n                      {integrations.filter(i => i.status === 'error' || i.status === 'pending').length}\n                    </div>\n                    <div className=\"text-sm text-yellow-700\">Issues Detected</div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <Activity className=\"w-8 h-8 text-blue-600\" />\n                  <div>\n                    <div className=\"text-2xl font-bold text-blue-900\">\n                      {dataFlows.filter(f => f.status === 'active').length}\n                    </div>\n                    <div className=\"text-sm text-blue-700\">Active Data Flows</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"border border-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4\">System Health Overview</h3>\n              <div className=\"space-y-4\">\n                {integrations.map((integration) => (\n                  <div key={integration.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      {getTypeIcon(integration.type)}\n                      <span className=\"font-medium\">{integration.name}</span>\n                    </div>\n                    <div className=\"flex items-center space-x-4 text-sm\">\n                      <div className=\"text-center\">\n                        <div className=\"font-medium\">{integration.uptime}%</div>\n                        <div className=\"text-gray-500\">Uptime</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"font-medium\">{integration.latency}ms</div>\n                        <div className=\"text-gray-500\">Latency</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"font-medium\">{integration.errorRate}%</div>\n                        <div className=\"text-gray-500\">Error Rate</div>\n                      </div>\n                      {getStatusIcon(integration.status)}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default InteroperabilityManager;","import React, { useState } from 'react';\nimport { usePatient } from '../context/PatientContext';\nimport RecommendationEngine from '../components/AI/RecommendationEngine';\nimport InteroperabilityManager from '../components/Analytics/InteroperabilityManager';\nimport { \n  Brain, \n  Globe, \n  Target, \n  Users, \n  Activity,\n  TrendingUp,\n  Shield,\n  Zap,\n  Database,\n  Cloud,\n  Settings,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  RefreshCw\n} from 'lucide-react';\n\ninterface SystemStatus {\n  ai: {\n    status: 'online' | 'offline' | 'training';\n    accuracy: number;\n    lastUpdate: string;\n    modelsLoaded: number;\n  };\n  interoperability: {\n    connectedSystems: number;\n    dataFlows: number;\n    errorRate: number;\n    uptime: number;\n  };\n  performance: {\n    responseTime: number;\n    throughput: number;\n    errorCount: number;\n  };\n}\n\nconst AIRecommendations: React.FC = () => {\n  const { currentPatient } = usePatient();\n  const [activeTab, setActiveTab] = useState<'recommendations' | 'interoperability' | 'system'>('recommendations');\n  const [systemStatus] = useState<SystemStatus>({\n    ai: {\n      status: 'online',\n      accuracy: 94.7,\n      lastUpdate: '2024-01-15T12:00:00Z',\n      modelsLoaded: 12\n    },\n    interoperability: {\n      connectedSystems: 5,\n      dataFlows: 8,\n      errorRate: 0.12,\n      uptime: 99.97\n    },\n    performance: {\n      responseTime: 245,\n      throughput: 1250,\n      errorCount: 3\n    }\n  });\n\n  const tabs = [\n    { \n      id: 'recommendations', \n      label: 'AI Recommendations', \n      icon: Brain,\n      description: 'Personalized clinical decision support'\n    },\n    { \n      id: 'interoperability', \n      label: 'Interoperability', \n      icon: Globe,\n      description: 'System integrations and data flows'\n    },\n    { \n      id: 'system', \n      label: 'System Status', \n      icon: Activity,\n      description: 'Platform health and performance'\n    }\n  ];\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'online': return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      case 'offline': return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\n      case 'training': return <RefreshCw className=\"w-4 h-4 text-blue-500 animate-spin\" />;\n      default: return <Clock className=\"w-4 h-4 text-gray-400\" />;\n    }\n  };\n\n  const StatusCard = ({ \n    title, \n    value, \n    subtitle, \n    icon: Icon, \n    color = 'blue',\n    status \n  }: {\n    title: string;\n    value: string | number;\n    subtitle: string;\n    icon: React.ComponentType<any>;\n    color?: string;\n    status?: string;\n  }) => {\n    const colorClasses = {\n      blue: 'bg-blue-100 text-blue-600',\n      green: 'bg-green-100 text-green-600',\n      red: 'bg-red-100 text-red-600',\n      yellow: 'bg-yellow-100 text-yellow-600',\n      purple: 'bg-purple-100 text-purple-600'\n    };\n\n    return (\n      <div className=\"bg-white p-6 rounded-lg border border-gray-200 shadow-sm\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className={`p-3 rounded-lg ${colorClasses[color as keyof typeof colorClasses]}`}>\n            <Icon className=\"w-6 h-6\" />\n          </div>\n          {status && getStatusIcon(status)}\n        </div>\n        \n        <div>\n          <p className=\"text-sm font-medium text-gray-600 mb-1\">{title}</p>\n          <p className=\"text-2xl font-bold text-gray-900 mb-1\">{value}</p>\n          <p className=\"text-sm text-gray-500\">{subtitle}</p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"text-center\">\n        <div className=\"flex items-center justify-center space-x-2 mb-4\">\n          <Brain className=\"w-8 h-8 text-purple-600\" />\n          <h1 className=\"text-3xl font-bold text-gray-900\">AI & Interoperability Hub</h1>\n          <Globe className=\"w-6 h-6 text-blue-600\" />\n        </div>\n        <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n          Advanced clinical decision support powered by AI and comprehensive system interoperability\n        </p>\n      </div>\n\n      {/* System Status Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <StatusCard\n          title=\"AI Model Status\"\n          value={systemStatus.ai.status.charAt(0).toUpperCase() + systemStatus.ai.status.slice(1)}\n          subtitle={`${systemStatus.ai.accuracy}% accuracy`}\n          icon={Brain}\n          color=\"purple\"\n          status={systemStatus.ai.status}\n        />\n        \n        <StatusCard\n          title=\"Connected Systems\"\n          value={systemStatus.interoperability.connectedSystems}\n          subtitle={`${systemStatus.interoperability.dataFlows} active data flows`}\n          icon={Globe}\n          color=\"blue\"\n        />\n        \n        <StatusCard\n          title=\"System Uptime\"\n          value={`${systemStatus.interoperability.uptime}%`}\n          subtitle=\"Last 30 days\"\n          icon={TrendingUp}\n          color=\"green\"\n        />\n        \n        <StatusCard\n          title=\"Response Time\"\n          value={`${systemStatus.performance.responseTime}ms`}\n          subtitle=\"Average API response\"\n          icon={Zap}\n          color=\"yellow\"\n        />\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"flex space-x-8\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`py-4 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                <div className=\"text-left\">\n                  <div>{tab.label}</div>\n                  <div className=\"text-xs text-gray-400 font-normal\">{tab.description}</div>\n                </div>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Tab Content */}\n      <div>\n        {activeTab === 'recommendations' && (\n          <div className=\"space-y-6\">\n            {/* Patient Context */}\n            {currentPatient ? (\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <Users className=\"w-5 h-5 text-blue-600\" />\n                  <div>\n                    <h3 className=\"font-medium text-blue-900\">\n                      Generating recommendations for: {currentPatient.demographics.firstName} {currentPatient.demographics.lastName}\n                    </h3>\n                    <p className=\"text-sm text-blue-700\">\n                      {currentPatient.demographics.age} year old {currentPatient.demographics.gender}, \n                      {currentPatient.conditions.length > 0 && ` diagnosed with ${currentPatient.conditions[0].name}`}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <AlertTriangle className=\"w-5 h-5 text-yellow-600\" />\n                  <div>\n                    <h3 className=\"font-medium text-yellow-900\">No Patient Selected</h3>\n                    <p className=\"text-sm text-yellow-700\">\n                      Select a patient from the Patient Dashboard to generate personalized AI recommendations.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* AI Recommendation Engine */}\n            <RecommendationEngine patient={currentPatient || undefined} />\n\n            {/* AI Model Information */}\n            <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-900 flex items-center space-x-2\">\n                  <Settings className=\"w-5 h-5 text-gray-500\" />\n                  <span>AI Model Information</span>\n                </h3>\n                <div className=\"flex items-center space-x-2\">\n                  {getStatusIcon(systemStatus.ai.status)}\n                  <span className=\"text-sm text-gray-600\">\n                    Last updated: {new Date(systemStatus.ai.lastUpdate).toLocaleString()}\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Models Loaded</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Drug Selection Model</span>\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Dose Optimization Model</span>\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Interaction Prediction Model</span>\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Outcome Prediction Model</span>\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                    </div>\n                  </div>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Performance Metrics</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Overall Accuracy:</span>\n                      <span className=\"font-medium text-green-600\">{systemStatus.ai.accuracy}%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Precision:</span>\n                      <span className=\"font-medium\">92.3%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Recall:</span>\n                      <span className=\"font-medium\">89.7%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>F1 Score:</span>\n                      <span className=\"font-medium\">91.0%</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Training Data</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Patient Records:</span>\n                      <span className=\"font-medium\">2.4M</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Clinical Trials:</span>\n                      <span className=\"font-medium\">15,420</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Drug Interactions:</span>\n                      <span className=\"font-medium\">890K</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Genomic Variants:</span>\n                      <span className=\"font-medium\">125K</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'interoperability' && (\n          <InteroperabilityManager />\n        )}\n\n        {activeTab === 'system' && (\n          <div className=\"space-y-6\">\n            {/* System Health Dashboard */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center space-x-2\">\n                  <Activity className=\"w-5 h-5 text-blue-500\" />\n                  <span>Platform Performance</span>\n                </h3>\n                \n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600\">API Response Time</span>\n                    <span className=\"font-medium\">{systemStatus.performance.responseTime}ms</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '85%' }}></div>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600\">Throughput (req/min)</span>\n                    <span className=\"font-medium\">{systemStatus.performance.throughput.toLocaleString()}</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div className=\"bg-blue-500 h-2 rounded-full\" style={{ width: '72%' }}></div>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600\">Error Rate</span>\n                    <span className=\"font-medium text-green-600\">{systemStatus.interoperability.errorRate}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '98%' }}></div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center space-x-2\">\n                  <Database className=\"w-5 h-5 text-purple-500\" />\n                  <span>Data Processing</span>\n                </h3>\n                \n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-blue-600\">45.2K</div>\n                      <div className=\"text-blue-800\">Records Processed</div>\n                      <div className=\"text-xs text-blue-600\">Today</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-green-600\">1.8M</div>\n                      <div className=\"text-green-800\">Total Records</div>\n                      <div className=\"text-xs text-green-600\">In Database</div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Storage Usage:</span>\n                      <span className=\"font-medium\">2.4TB / 5TB</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div className=\"bg-yellow-500 h-2 rounded-full\" style={{ width: '48%' }}></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Recent System Events */}\n            <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center space-x-2\">\n                <Clock className=\"w-5 h-5 text-gray-500\" />\n                <span>Recent System Events</span>\n              </h3>\n              \n              <div className=\"space-y-3\">\n                <div className=\"flex items-center space-x-3 p-3 bg-green-50 border border-green-200 rounded-lg\">\n                  <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                  <div className=\"flex-1\">\n                    <div className=\"font-medium text-green-900\">AI Model Update Completed</div>\n                    <div className=\"text-sm text-green-700\">Drug interaction model updated with latest clinical data</div>\n                  </div>\n                  <div className=\"text-xs text-green-600\">2 hours ago</div>\n                </div>\n                \n                <div className=\"flex items-center space-x-3 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n                  <Cloud className=\"w-5 h-5 text-blue-500\" />\n                  <div className=\"flex-1\">\n                    <div className=\"font-medium text-blue-900\">EHR Integration Health Check</div>\n                    <div className=\"text-sm text-blue-700\">All connected systems responding normally</div>\n                  </div>\n                  <div className=\"text-xs text-blue-600\">4 hours ago</div>\n                </div>\n                \n                <div className=\"flex items-center space-x-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                  <RefreshCw className=\"w-5 h-5 text-yellow-500\" />\n                  <div className=\"flex-1\">\n                    <div className=\"font-medium text-yellow-900\">Scheduled Maintenance</div>\n                    <div className=\"text-sm text-yellow-700\">Analytics dashboard will be updated tomorrow at 2:00 AM</div>\n                  </div>\n                  <div className=\"text-xs text-yellow-600\">8 hours ago</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AIRecommendations;"],"names":["__iconNode","Cloud","createLucideIcon","Server","ThumbsDown","RecommendationEngine","patient","className","recommendations","setRecommendations","useState","insights","setInsights","loading","setLoading","selectedRecommendation","setSelectedRecommendation","filters","setFilters","showFilters","setShowFilters","useEffect","generateRecommendations","resolve","mockRecommendations","mockInsights","error","handleFeedback","recommendationId","feedback","prev","rec","getPriorityIcon","priority","jsx","AlertTriangle","Target","CheckCircle","getTypeIcon","type","Activity","Eye","BookOpen","Database","Lightbulb","getConfidenceColor","confidence","getEvidenceIcon","level","Award","Star","Users","filteredRecommendations","jsxs","Brain","Filter","RefreshCw","Settings","e","t","p","insight","recommendation","source","index","Clock","Fragment","ThumbsUp","point","item","alt","InteroperabilityManager","integrations","setIntegrations","dataFlows","setDataFlows","complianceMetrics","setComplianceMetrics","activeTab","setActiveTab","showAddIntegration","setShowAddIntegration","selectedIntegration","setSelectedIntegration","loadInteroperabilityData","mockIntegrations","mockDataFlows","mockCompliance","getStatusIcon","status","XCircle","getStatusBadge","statusConfig","config","Shield","Globe","Link","tabs","Plus","tab","Icon","integration","Lock","flow","transform","metric","req","i","f","AIRecommendations","currentPatient","usePatient","systemStatus","StatusCard","title","value","subtitle","color","colorClasses","TrendingUp","Zap"],"mappings":"+qBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CAAC,OAAQ,CAAE,EAAG,sDAAuD,IAAK,QAAQ,CAAE,CACtF,EACMC,EAAQC,EAAiB,QAASF,EAAU,ECZlD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CAAC,OAAQ,CAAE,MAAO,KAAM,OAAQ,IAAK,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,SAAU,EACtF,CAAC,OAAQ,CAAE,MAAO,KAAM,OAAQ,IAAK,EAAG,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,IAAK,IAAK,SAAU,EACvF,CAAC,OAAQ,CAAE,GAAI,IAAK,GAAI,OAAQ,GAAI,IAAK,GAAI,IAAK,IAAK,QAAQ,CAAE,EACjE,CAAC,OAAQ,CAAE,GAAI,IAAK,GAAI,OAAQ,GAAI,KAAM,GAAI,KAAM,IAAK,QAAQ,CAAE,CACrE,EACMG,GAASD,EAAiB,SAAUF,EAAU,ECfpD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAa,CACjB,CAAC,OAAQ,CAAE,EAAG,WAAY,IAAK,QAAQ,CAAE,EACzC,CACE,OACA,CACE,EAAG,0JACH,IAAK,QACX,CACA,CACA,EACMI,GAAaF,EAAiB,cAAeF,EAAU,ECqDvDK,GAGD,CAAC,CAAE,QAAAC,EAAS,UAAAC,EAAY,MAAS,CACpC,KAAM,CAACC,EAAiBC,CAAkB,EAAIC,EAAAA,SAA6B,CAAA,CAAE,EACvE,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAsB,CAAA,CAAE,EAClD,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAK,EACtC,CAACK,EAAwBC,CAAyB,EAAIN,EAAAA,SAAkC,IAAI,EAC5F,CAACO,EAASC,CAAU,EAAIR,WAAgC,CAC5D,KAAM,CAAA,EACN,SAAU,CAAA,EACV,WAAY,GACZ,SAAU,CAAA,EACV,aAAc,EAAA,CACf,EACK,CAACS,EAAaC,CAAc,EAAIV,EAAAA,SAAS,EAAK,EAEpDW,EAAAA,UAAU,IAAM,CACVf,GACFgB,EAAA,CAEJ,EAAG,CAAChB,CAAO,CAAC,EAEZ,MAAMgB,EAA0B,SAAY,CAC1CR,EAAW,EAAI,EACf,GAAI,CAEF,MAAM,IAAI,QAAQS,GAAW,WAAWA,EAAS,GAAI,CAAC,EAEtD,MAAMC,EAA0C,CAC9C,CACE,GAAI,IACJ,KAAM,iBACN,SAAU,OACV,WAAY,GACZ,MAAO,kDACP,YAAa,oIACb,UAAW,CACT,0DACA,kDACA,mDACA,8BACA,yBAAA,EAEF,SAAU,CACR,MAAO,IACP,QAAS,CAAC,cAAe,cAAe,iBAAiB,EACzD,WAAY,GACZ,aAAc,IAAA,EAEhB,eAAgB,gDAChB,aAAc,CAAC,2CAA4C,0BAA0B,EACrF,WAAY,CAAC,gCAAiC,8BAA+B,kBAAkB,EAC/F,gBAAiB,CACf,SAAU,GACV,OAAQ,GACR,aAAc,YACd,iBAAkB,cAAA,EAEpB,UAAW,uBACX,SAAU,eAAA,EAEZ,CACE,GAAI,IACJ,KAAM,kBACN,SAAU,SACV,WAAY,GACZ,MAAO,iDACP,YAAa,4GACb,UAAW,CACT,yDACA,kDACA,iDACA,+CAAA,EAEF,SAAU,CACR,MAAO,IACP,QAAS,CAAC,qCAAsC,YAAa,uBAAuB,EACpF,WAAY,EACZ,aAAc,IAAA,EAEhB,eAAgB,oEAChB,WAAY,CAAC,wBAAyB,uBAAwB,oBAAoB,EAClF,gBAAiB,CACf,SAAU,GACV,OAAQ,GACR,aAAc,YACd,iBAAkB,qBAAA,EAEpB,UAAW,uBACX,SAAU,mBAAA,EAEZ,CACE,GAAI,IACJ,KAAM,aACN,SAAU,OACV,WAAY,GACZ,MAAO,8CACP,YAAa,iGACb,UAAW,CACT,2BACA,iCACA,qCACA,0BACA,gCAAA,EAEF,SAAU,CACR,MAAO,IACP,QAAS,CAAC,6BAA8B,4BAA6B,iBAAiB,EACtF,WAAY,GACZ,aAAc,KAAA,EAEhB,eAAgB,0EAChB,WAAY,CAAC,mDAAoD,gBAAiB,mBAAmB,EACrG,gBAAiB,CACf,SAAU,GACV,OAAQ,GACR,aAAc,YACd,iBAAkB,SAAA,EAEpB,UAAW,uBACX,SAAU,2BAAA,EAEZ,CACE,GAAI,IACJ,KAAM,YACN,SAAU,SACV,WAAY,GACZ,MAAO,oCACP,YAAa,2GACb,UAAW,CACT,2BACA,sBACA,kBACA,gBACA,eAAA,EAEF,SAAU,CACR,MAAO,IACP,QAAS,CAAC,kBAAmB,wBAAyB,0BAA0B,EAChF,WAAY,GACZ,aAAc,IAAA,EAEhB,eAAgB,8EAChB,aAAc,CAAC,6BAA8B,sCAAsC,EACnF,gBAAiB,CACf,SAAU,GACV,OAAQ,GACR,aAAc,wBACd,iBAAkB,uBAAA,EAEpB,UAAW,uBACX,SAAU,oBAAA,CACZ,EAGIC,EAA4B,CAChC,CACE,GAAI,IACJ,MAAO,gCACP,QAAS,sGACT,OAAQ,WACR,UAAW,GACX,SAAU,qBAAA,EAEZ,CACE,GAAI,IACJ,MAAO,sBACP,QAAS,mGACT,OAAQ,UACR,UAAW,GACX,SAAU,mBAAA,EAEZ,CACE,GAAI,IACJ,MAAO,8BACP,QAAS,mGACT,OAAQ,WACR,UAAW,GACX,SAAU,iBAAA,CACZ,EAGFhB,EAAmBe,CAAmB,EACtCZ,EAAYa,CAAY,CAC1B,OAASC,EAAO,CACd,QAAQ,MAAM,oCAAqCA,CAAK,CAC1D,QAAA,CACEZ,EAAW,EAAK,CAClB,CACF,EAEMa,EAAiB,CAACC,EAA0BC,IAAmD,CACnGpB,KAA2BqB,EAAK,IAAIC,GAClCA,EAAI,KAAOH,EACP,CAAE,GAAGG,EAAK,aAAcF,GACxBE,CAAA,CACL,CACH,EAEMC,EAAmBC,GAAqB,CAC5C,OAAQA,EAAA,CACN,IAAK,OAAQ,OAAOC,EAAAA,IAACC,EAAA,CAAc,UAAU,sBAAA,CAAuB,EACpE,IAAK,SAAU,OAAOD,EAAAA,IAACE,EAAA,CAAO,UAAU,yBAAA,CAA0B,EAClE,IAAK,MAAO,OAAOF,EAAAA,IAACG,EAAA,CAAY,UAAU,wBAAA,CAAyB,EACnE,QAAS,OAAOH,EAAAA,IAACG,EAAA,CAAY,UAAU,uBAAA,CAAwB,CAAA,CAEnE,EAEMC,EAAeC,GAAiB,CACpC,OAAQA,EAAA,CACN,IAAK,iBAAkB,OAAOL,EAAAA,IAACE,EAAA,CAAO,UAAU,uBAAA,CAAwB,EACxE,IAAK,kBAAmB,OAAOF,EAAAA,IAACM,EAAA,CAAS,UAAU,yBAAA,CAA0B,EAC7E,IAAK,aAAc,OAAON,EAAAA,IAACO,EAAA,CAAI,UAAU,wBAAA,CAAyB,EAClE,IAAK,oBAAqB,OAAOP,EAAAA,IAACC,EAAA,CAAc,UAAU,sBAAA,CAAuB,EACjF,IAAK,mBAAoB,OAAOD,EAAAA,IAACQ,EAAA,CAAS,UAAU,yBAAA,CAA0B,EAC9E,IAAK,YAAa,OAAOR,EAAAA,IAACS,EAAA,CAAS,UAAU,uBAAA,CAAwB,EACrE,QAAS,OAAOT,EAAAA,IAACU,EAAA,CAAU,UAAU,uBAAA,CAAwB,CAAA,CAEjE,EAEMC,EAAsBC,GACtBA,GAAc,GAAW,iBACzBA,GAAc,GAAW,gBACzBA,GAAc,GAAW,kBACtB,eAGHC,EAAmBC,GAAkB,CACzC,OAAQA,EAAA,CACN,IAAK,IAAK,OAAOd,EAAAA,IAACe,EAAA,CAAM,UAAU,wBAAA,CAAyB,EAC3D,IAAK,IAAK,OAAOf,EAAAA,IAACgB,EAAA,CAAK,UAAU,uBAAA,CAAwB,EACzD,IAAK,IAAK,OAAOhB,EAAAA,IAACQ,EAAA,CAAS,UAAU,yBAAA,CAA0B,EAC/D,IAAK,IAAK,OAAOR,EAAAA,IAACiB,EAAA,CAAM,UAAU,uBAAA,CAAwB,EAC1D,QAAS,OAAOjB,EAAAA,IAACQ,EAAA,CAAS,UAAU,uBAAA,CAAwB,CAAA,CAEhE,EAEMU,EAA0B5C,EAAgB,OAAOuB,GACjD,EAAAd,EAAQ,KAAK,OAAS,GAAK,CAACA,EAAQ,KAAK,SAASc,EAAI,IAAI,GAC1Dd,EAAQ,SAAS,OAAS,GAAK,CAACA,EAAQ,SAAS,SAASc,EAAI,QAAQ,GACtEA,EAAI,WAAad,EAAQ,YACzBA,EAAQ,SAAS,OAAS,GAAK,CAACA,EAAQ,SAAS,SAASc,EAAI,QAAQ,GACtE,CAACd,EAAQ,cAAgBc,EAAI,aAElC,EAED,OACEsB,EAAAA,KAAC,MAAA,CAAI,UAAW,wDAAwD9C,CAAS,GAE/E,SAAA,CAAA2B,EAAAA,IAAC,OAAI,UAAU,+BACb,SAAAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAACoB,EAAA,CAAM,UAAU,yBAAA,CAA0B,SAC1C,MAAA,CACC,SAAA,CAAApB,EAAAA,IAAC,KAAA,CAAG,UAAU,kCAAkC,SAAA,6BAA0B,EAC1EA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,2EAAA,CAErC,CAAA,CAAA,CACF,CAAA,EACF,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMd,EAAe,CAACD,CAAW,EAC1C,UAAW,oCACTA,EAAc,4BAA8B,2EAC9C,GAEA,SAAAe,EAAAA,IAACqB,EAAA,CAAO,UAAU,SAAA,CAAU,CAAA,CAAA,EAG9BrB,EAAAA,IAAC,SAAA,CACC,QAASZ,EACT,SAAUT,EACV,UAAU,iIAEV,eAAC2C,EAAA,CAAU,UAAW,WAAW3C,EAAU,eAAiB,EAAE,EAAA,CAAI,CAAA,CAAA,EAGpEwC,EAAAA,KAAC,SAAA,CAAO,UAAU,kHAChB,SAAA,CAAAnB,EAAAA,IAACuB,EAAA,CAAS,UAAU,SAAA,CAAU,EAC9BvB,EAAAA,IAAC,QAAK,SAAA,cAAA,CAAY,CAAA,CAAA,CACpB,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAGCf,SACE,MAAA,CAAI,UAAU,0CACb,SAAAkC,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAnB,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,OAAI,QACnE,MAAA,CAAI,UAAU,YACZ,SAAA,CAAC,iBAAkB,kBAAmB,aAAc,WAAW,EAAE,IAAKK,GACrEc,EAAAA,KAAC,QAAA,CAAiB,UAAU,oBAC1B,SAAA,CAAAnB,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASjB,EAAQ,KAAK,SAASsB,CAAI,EACnC,SAAWmB,GAAM,CACXA,EAAE,OAAO,QACXxC,EAAWY,IAAS,CAAE,GAAGA,EAAM,KAAM,CAAC,GAAGA,EAAK,KAAMS,CAAI,CAAA,EAAI,EAE5DrB,EAAWY,IAAS,CAAE,GAAGA,EAAM,KAAMA,EAAK,KAAK,OAAO6B,GAAKA,IAAMpB,CAAI,CAAA,EAAI,CAE7E,EACA,UAAU,uEAAA,CAAA,EAEZL,MAAC,QAAK,UAAU,wCAAyC,WAAK,QAAQ,IAAK,GAAG,CAAA,CAAE,CAAA,CAAA,EAbtEK,CAcZ,CACD,CAAA,CACH,CAAA,EACF,SAEC,MAAA,CACC,SAAA,CAAAL,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,WAAQ,EACxEA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,UAAC,OAAQ,SAAU,KAAK,EAAE,IAAKD,GAC9BoB,EAAAA,KAAC,QAAA,CAAqB,UAAU,oBAC9B,SAAA,CAAAnB,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASjB,EAAQ,SAAS,SAASgB,CAAQ,EAC3C,SAAWyB,GAAM,CACXA,EAAE,OAAO,QACXxC,EAAWY,IAAS,CAAE,GAAGA,EAAM,SAAU,CAAC,GAAGA,EAAK,SAAUG,CAAQ,CAAA,EAAI,EAExEf,EAAWY,IAAS,CAAE,GAAGA,EAAM,SAAUA,EAAK,SAAS,OAAO8B,GAAKA,IAAM3B,CAAQ,CAAA,EAAI,CAEzF,EACA,UAAU,uEAAA,CAAA,EAEZC,EAAAA,IAAC,OAAA,CAAK,UAAU,wCAAyC,SAAAD,CAAA,CAAS,CAAA,CAAA,EAbxDA,CAcZ,CACD,CAAA,CACH,CAAA,EACF,SAEC,MAAA,CACC,SAAA,CAAAoB,EAAAA,KAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,CAAA,mBAC7CpC,EAAQ,WAAW,GAAA,EACtC,EACAiB,EAAAA,IAAC,QAAA,CACC,KAAK,QACL,IAAI,KACJ,IAAI,MACJ,KAAK,IACL,MAAOjB,EAAQ,WACf,SAAWyC,GAAMxC,MAAoB,CAAE,GAAGY,EAAM,WAAY,SAAS4B,EAAE,OAAO,KAAK,GAAI,EACvF,UAAU,QAAA,CAAA,CACZ,EACF,SAEC,MAAA,CACC,SAAA,CAAAxB,EAAAA,IAAC,QAAA,CAAM,UAAU,+CAA+C,SAAA,UAAO,EACvEmB,EAAAA,KAAC,QAAA,CAAM,UAAU,oBACf,SAAA,CAAAnB,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAASjB,EAAQ,aACjB,SAAWyC,GAAMxC,EAAWY,IAAS,CAAE,GAAGA,EAAM,aAAc4B,EAAE,OAAO,OAAA,EAAU,EACjF,UAAU,uEAAA,CAAA,EAEZxB,EAAAA,IAAC,OAAA,CAAK,UAAU,6BAA6B,SAAA,qBAAA,CAAmB,CAAA,CAAA,CAClE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAIFA,EAAAA,IAAC,MAAA,CAAI,UAAU,MACZ,SAAArB,EACCqB,EAAAA,IAAC,MAAA,CAAI,UAAU,yCACb,SAAAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,+EAAA,CAAgF,EAC/FA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,gEAAA,CAA8D,CAAA,EAC7F,EACF,EACG5B,EAOH+C,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEZ,SAAA,CAAA1C,EAAS,OAAS,GACjB0C,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,uEACZ,SAAA,CAAAnB,EAAAA,IAACU,EAAA,CAAU,UAAU,SAAA,CAAU,EAC/BV,EAAAA,IAAC,QAAK,SAAA,aAAA,CAAW,CAAA,EACnB,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,wCACZ,SAAAvB,EAAS,IAAKkD,GACbR,EAAAA,KAAC,MAAA,CAAqB,UAAU,8BAC9B,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAnB,EAAAA,IAAC,KAAA,CAAG,UAAU,oCAAqC,SAAA2B,EAAQ,MAAM,EACjER,EAAAA,KAAC,OAAA,CAAK,UAAU,wBAAyB,SAAA,CAAAQ,EAAQ,UAAU,YAAA,CAAA,CAAU,CAAA,EACvE,EACA3B,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAyB,WAAQ,OAAA,CAAQ,CAAA,GAL9C2B,EAAQ,EAMlB,CACD,CAAA,CACH,CAAA,EACF,EAIFR,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,CAAA,oBAC9BD,EAAwB,OAAO,GAAA,EACnD,EACAlB,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,mCAAA,CAEvC,CAAA,EACF,EAECkB,EAAwB,SAAW,EAClCC,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAnB,EAAAA,IAACE,EAAA,CAAO,UAAU,sCAAA,CAAuC,EACzDF,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,gDAAA,CAA8C,CAAA,CAAA,CAC7E,EAEAA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAAkB,EAAwB,IAAKU,GAC5BT,OAAC,MAAA,CAA4B,UAAU,0EACrC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,6BACZ,SAAA,CAAAf,EAAYwB,EAAe,IAAI,EAChCT,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAnB,EAAAA,IAAC,KAAA,CAAG,UAAU,4BAA6B,SAAA4B,EAAe,MAAM,EAC/D9B,EAAgB8B,EAAe,QAAQ,EACxC5B,EAAAA,IAAC,OAAA,CAAK,UAAU,sDACb,WAAe,QAAA,CAClB,CAAA,EACF,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA8B,WAAe,WAAA,CAAY,CAAA,CAAA,CACxE,CAAA,EACF,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAA,EAAAA,KAAC,OAAI,UAAW,aAAaR,EAAmBiB,EAAe,UAAU,CAAC,GACvE,SAAA,CAAAA,EAAe,WAAW,GAAA,EAC7B,EACA5B,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,YAAA,CAAU,CAAA,EACnD,EACCa,EAAgBe,EAAe,SAAS,KAAK,CAAA,CAAA,CAChD,CAAA,EACF,EAEAT,EAAAA,KAAC,MAAA,CAAI,UAAU,qDACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,iCAAiC,SAAA,kBAAe,EAC/DA,EAAAA,IAAC,MAAA,CAAI,UAAU,gBAAiB,WAAe,cAAA,CAAe,CAAA,EAChE,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAnB,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,qBAAkB,EACjEmB,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,EACfmB,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAe,SAAA,CAAAS,EAAe,gBAAgB,SAAS,GAAA,CAAA,CAAC,CAAA,EAC1E,EACAT,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,SAAA,CAAO,EACbmB,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAe,SAAA,CAAAS,EAAe,gBAAgB,OAAO,GAAA,CAAA,CAAC,CAAA,EACxE,EACAT,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,iBAAA,CAAe,QACpB,OAAA,CAAK,UAAU,cAAe,SAAA4B,EAAe,gBAAgB,YAAA,CAAa,CAAA,CAAA,CAC7E,CAAA,CAAA,CACF,CAAA,EACF,SAEC,MAAA,CACC,SAAA,CAAAT,EAAAA,KAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,CAAA,kBAAgBS,EAAe,SAAS,MAAM,GAAA,EAAC,EAC9FT,EAAAA,KAAC,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAA,OAAC,MAAA,CAAK,SAAA,CAAAS,EAAe,SAAS,WAAW,UAAA,EAAQ,SAChD,MAAA,CAAK,SAAA,CAAAA,EAAe,SAAS,aAAa,eAAA,EAAiB,WAAA,EAAS,EACrE5B,EAAAA,IAAC,OAAI,UAAU,uBACZ,WAAe,SAAS,QAAQ,MAAM,EAAG,CAAC,EAAE,IAAI,CAAC6B,EAAQC,IACxD9B,EAAAA,IAAC,OAAA,CAAiB,UAAU,wCACzB,SAAA6B,GADQC,CAEX,CACD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAEAX,EAAAA,KAAC,MAAA,CAAI,UAAU,kEACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAAC+B,EAAA,CAAM,UAAU,uBAAA,CAAwB,EACzC/B,EAAAA,IAAC,OAAA,CAAK,UAAU,wBACb,SAAA,IAAI,KAAK4B,EAAe,SAAS,EAAE,eAAA,CAAe,CACrD,CAAA,EACF,EAEAT,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAS,EAAe,aACd5B,MAAC,OAAA,CAAK,UAAW,6BACf4B,EAAe,eAAiB,WAAa,8BAC7CA,EAAe,eAAiB,WAAa,0BAC7C,+BACF,GACG,SAAAA,EAAe,YAAA,CAClB,EAEAT,EAAAA,KAAAa,EAAAA,SAAA,CACE,SAAA,CAAAhC,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMP,EAAemC,EAAe,GAAI,UAAU,EAC3D,UAAU,kEACV,MAAM,wBAEN,SAAA5B,EAAAA,IAACiC,EAAA,CAAS,UAAU,SAAA,CAAU,CAAA,CAAA,EAEhCjC,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMP,EAAemC,EAAe,GAAI,UAAU,EAC3D,UAAU,8DACV,MAAM,wBAEN,SAAA5B,EAAAA,IAAC9B,GAAA,CAAW,UAAU,SAAA,CAAU,CAAA,CAAA,CAClC,EACF,EAGF8B,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMlB,EAA0B8C,CAAc,EACvD,UAAU,wDACX,SAAA,cAAA,CAAA,CAED,CAAA,CACF,CAAA,CAAA,CACF,CAAA,GA9GQA,EAAe,EA+GzB,CACD,CAAA,CACH,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,EAnKAT,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAnB,EAAAA,IAACoB,EAAA,CAAM,UAAU,sCAAA,CAAuC,EACxDpB,EAAAA,IAAC,KAAA,CAAG,UAAU,yCAAyC,SAAA,sBAAmB,EAC1EA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,0DAAA,CAAwD,CAAA,CAAA,CACvF,CA+JA,CAEJ,EAGCnB,SACE,MAAA,CAAI,UAAU,iFACb,SAAAsC,EAAAA,KAAC,MAAA,CAAI,UAAU,8EACb,SAAA,CAAAnB,EAAAA,IAAC,OAAI,UAAU,+BACb,SAAAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAnB,EAAAA,IAAC,KAAA,CAAG,UAAU,kCAAmC,SAAAnB,EAAuB,MAAM,EAC9EmB,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMlB,EAA0B,IAAI,EAC7C,UAAU,oCACX,SAAA,GAAA,CAAA,CAED,CAAA,CACF,CAAA,CACF,EAEAqC,EAAAA,KAAC,MAAA,CAAI,UAAU,gBACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAnB,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,sBAAmB,EAClEA,EAAAA,IAAC,KAAA,CAAG,UAAU,YACX,SAAAnB,EAAuB,UAAU,IAAI,CAACqD,EAAOJ,IAC5CX,OAAC,KAAA,CAAe,UAAU,mDACxB,SAAA,CAAAnB,EAAAA,IAACG,EAAA,CAAY,UAAU,6CAAA,CAA8C,EACrEH,EAAAA,IAAC,QAAM,SAAAkC,CAAA,CAAM,CAAA,CAAA,EAFNJ,CAGT,CACD,CAAA,CACH,CAAA,EACF,EAECjD,EAAuB,YACtBsC,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAnB,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,2BAAwB,EACvEA,EAAAA,IAAC,KAAA,CAAG,UAAU,YACX,SAAAnB,EAAuB,WAAW,IAAI,CAACsD,EAAML,IAC5CX,OAAC,KAAA,CAAe,UAAU,mDACxB,SAAA,CAAAnB,EAAAA,IAACO,EAAA,CAAI,UAAU,4CAAA,CAA6C,EAC5DP,EAAAA,IAAC,QAAM,SAAAmC,CAAA,CAAK,CAAA,CAAA,EAFLL,CAGT,CACD,CAAA,CACH,CAAA,EACF,EAGDjD,EAAuB,cACtBsC,EAAAA,KAAC,MAAA,CACC,SAAA,CAAAnB,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,uBAAoB,EACnEA,EAAAA,IAAC,KAAA,CAAG,UAAU,YACX,SAAAnB,EAAuB,aAAa,IAAI,CAACuD,EAAKN,IAC7CX,OAAC,KAAA,CAAe,UAAU,wBAAwB,SAAA,CAAA,KAAGiB,CAAA,CAAA,EAA5CN,CAAgD,CAC1D,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EAEJ,CAEJ,ECrmBMO,GAAoC,IAAM,CAC9C,KAAM,CAACC,EAAcC,CAAe,EAAI/D,EAAAA,SAA8B,CAAA,CAAE,EAClE,CAACgE,EAAWC,CAAY,EAAIjE,EAAAA,SAAqB,CAAA,CAAE,EACnD,CAACkE,EAAmBC,CAAoB,EAAInE,EAAAA,SAA6B,CAAA,CAAE,EAC3E,CAACoE,EAAWC,CAAY,EAAIrE,EAAAA,SAAgE,SAAS,EACrG,CAACsE,EAAoBC,CAAqB,EAAIvE,EAAAA,SAAS,EAAK,EAC5D,CAACwE,EAAqBC,CAAsB,EAAIzE,EAAAA,SAAmC,IAAI,EACvF,CAACG,EAASC,CAAU,EAAIJ,EAAAA,SAAS,EAAI,EAE3CW,EAAAA,UAAU,IAAM,CACd+D,EAAA,CACF,EAAG,CAAA,CAAE,EAEL,MAAMA,EAA2B,SAAY,CAC3CtE,EAAW,EAAI,EACf,GAAI,CAEF,MAAM,IAAI,QAAQS,GAAW,WAAWA,EAAS,GAAI,CAAC,EAEtD,MAAM8D,EAAwC,CAC5C,CACE,GAAI,IACJ,KAAM,kBACN,KAAM,MACN,OAAQ,YACR,SAAU,OACV,SAAU,+BACV,SAAU,uBACV,UAAW,CAAC,eAAgB,cAAe,cAAe,WAAW,EACrE,OAAQ,MACR,QAAS,IACT,UAAW,IACX,OAAQ,MACR,QAAS,KACT,eAAgB,SAChB,gBAAiB,SAAA,EAEnB,CACE,GAAI,IACJ,KAAM,oBACN,KAAM,MACN,OAAQ,YACR,SAAU,OACV,SAAU,6BACV,SAAU,uBACV,UAAW,CAAC,eAAgB,SAAU,SAAS,EAC/C,OAAQ,KACR,QAAS,IACT,UAAW,IACX,OAAQ,MACR,QAAS,KACT,eAAgB,SAChB,gBAAiB,SAAA,EAEnB,CACE,GAAI,IACJ,KAAM,2BACN,KAAM,WACN,OAAQ,YACR,SAAU,MACV,SAAU,0BACV,SAAU,uBACV,UAAW,CAAC,qBAAsB,YAAa,mBAAmB,EAClE,OAAQ,KACR,QAAS,IACT,UAAW,IACX,OAAQ,MACR,QAAS,OACT,eAAgB,cAChB,gBAAiB,SAAA,EAEnB,CACE,GAAI,IACJ,KAAM,gCACN,KAAM,OACN,OAAQ,QACR,SAAU,OACV,SAAU,6BACV,SAAU,uBACV,UAAW,CAAC,cAAe,cAAe,kBAAkB,EAC5D,OAAQ,KACR,QAAS,IACT,UAAW,IACX,OAAQ,KACR,eAAgB,UAChB,gBAAiB,SAAA,EAEnB,CACE,GAAI,IACJ,KAAM,2BACN,KAAM,WACN,OAAQ,UACR,SAAU,UACV,SAAU,iCACV,SAAU,uBACV,UAAW,CAAC,aAAc,uBAAwB,UAAU,EAC5D,OAAQ,KACR,QAAS,IACT,UAAW,IACX,OAAQ,KACR,eAAgB,UAChB,gBAAiB,SAAA,CACnB,EAGIC,EAA4B,CAChC,CACE,GAAI,IACJ,OAAQ,kBACR,YAAa,sBACb,SAAU,uBACV,OAAQ,KACR,UAAW,YACX,aAAc,uBACd,OAAQ,SACR,gBAAiB,CAAC,eAAgB,aAAc,YAAY,CAAA,EAE9D,CACE,GAAI,IACJ,OAAQ,sBACR,YAAa,2BACb,SAAU,0BACV,OAAQ,IACR,UAAW,YACX,aAAc,uBACd,OAAQ,SACR,gBAAiB,CAAC,mBAAoB,qBAAqB,CAAA,EAE7D,CACE,GAAI,IACJ,OAAQ,gCACR,YAAa,sBACb,SAAU,cACV,OAAQ,IACR,UAAW,mBACX,aAAc,uBACd,OAAQ,QACR,gBAAiB,CAAC,kBAAmB,yBAAyB,CAAA,CAChE,EAGIC,EAAqC,CACzC,CACE,SAAU,QACV,OAAQ,YACR,MAAO,GACP,aAAc,CACZ,CAAE,KAAM,kBAAmB,IAAK,GAAM,YAAa,2CAAA,EACnD,CAAE,KAAM,kBAAmB,IAAK,GAAM,YAAa,+BAAA,EACnD,CAAE,KAAM,aAAc,IAAK,GAAM,YAAa,oCAAA,EAC9C,CAAE,KAAM,oBAAqB,IAAK,GAAO,YAAa,6CAAA,CAA8C,EAEtG,UAAW,YAAA,EAEb,CACE,SAAU,UACV,OAAQ,YACR,MAAO,GACP,aAAc,CACZ,CAAE,KAAM,uBAAwB,IAAK,GAAM,YAAa,uCAAA,EACxD,CAAE,KAAM,0BAA2B,IAAK,GAAM,YAAa,sCAAA,EAC3D,CAAE,KAAM,sBAAuB,IAAK,GAAM,YAAa,6BAAA,EACvD,CAAE,KAAM,uBAAwB,IAAK,GAAM,YAAa,yCAAA,CAA0C,EAEpG,UAAW,YAAA,EAEb,CACE,SAAU,WACV,OAAQ,UACR,MAAO,GACP,aAAc,CACZ,CAAE,KAAM,oBAAqB,IAAK,GAAM,YAAa,+BAAA,EACrD,CAAE,KAAM,kBAAmB,IAAK,GAAM,YAAa,+BAAA,EACnD,CAAE,KAAM,iBAAkB,IAAK,GAAO,YAAa,iCAAA,EACnD,CAAE,KAAM,qBAAsB,IAAK,GAAM,YAAa,qCAAA,CAAsC,EAE9F,UAAW,YAAA,CACb,EAGFd,EAAgBY,CAAgB,EAChCV,EAAaW,CAAa,EAC1BT,EAAqBU,CAAc,CACrC,OAAS7D,EAAO,CACd,QAAQ,MAAM,uCAAwCA,CAAK,CAC7D,QAAA,CACEZ,EAAW,EAAK,CAClB,CACF,EAEM0E,EAAiBC,GAAmB,CACxC,OAAQA,EAAA,CACN,IAAK,YAAa,OAAOvD,EAAAA,IAACG,EAAA,CAAY,UAAU,wBAAA,CAAyB,EACzE,IAAK,QAAS,OAAOH,EAAAA,IAACwD,EAAA,CAAQ,UAAU,sBAAA,CAAuB,EAC/D,IAAK,UAAW,OAAOxD,EAAAA,IAAC+B,EAAA,CAAM,UAAU,yBAAA,CAA0B,EAClE,QAAS,OAAO/B,EAAAA,IAACwD,EAAA,CAAQ,UAAU,uBAAA,CAAwB,CAAA,CAE/D,EAEMC,EAAkBF,GAAmB,CACzC,MAAMG,EAAe,CACnB,UAAW,CAAE,GAAI,eAAgB,KAAM,iBAAkB,MAAO,WAAA,EAChE,aAAc,CAAE,GAAI,cAAe,KAAM,gBAAiB,MAAO,cAAA,EACjE,MAAO,CAAE,GAAI,aAAc,KAAM,eAAgB,MAAO,OAAA,EACxD,QAAS,CAAE,GAAI,gBAAiB,KAAM,kBAAmB,MAAO,SAAA,EAChE,OAAQ,CAAE,GAAI,eAAgB,KAAM,iBAAkB,MAAO,QAAA,EAC7D,OAAQ,CAAE,GAAI,cAAe,KAAM,gBAAiB,MAAO,QAAA,EAC3D,UAAW,CAAE,GAAI,eAAgB,KAAM,iBAAkB,MAAO,WAAA,EAChE,gBAAiB,CAAE,GAAI,aAAc,KAAM,eAAgB,MAAO,eAAA,EAClE,QAAS,CAAE,GAAI,gBAAiB,KAAM,kBAAmB,MAAO,qBAAA,CAAsB,EAGlFC,EAASD,EAAaH,CAAmC,GAAKG,EAAa,aAEjF,OACE1D,EAAAA,IAAC,OAAA,CAAK,UAAW,8CAA8C2D,EAAO,EAAE,IAAIA,EAAO,IAAI,GACpF,SAAAA,EAAO,MACV,CAEJ,EAEMvD,EAAeC,GAAiB,CACpC,OAAQA,EAAA,CACN,IAAK,MAAO,OAAOL,EAAAA,IAACS,EAAA,CAAS,UAAU,uBAAA,CAAwB,EAC/D,IAAK,OAAQ,OAAOT,EAAAA,IAACM,EAAA,CAAS,UAAU,yBAAA,CAA0B,EAClE,IAAK,WAAY,OAAON,EAAAA,IAAC4D,EAAA,CAAO,UAAU,wBAAA,CAAyB,EACnE,IAAK,MAAO,OAAO5D,EAAAA,IAAC6D,EAAA,CAAM,UAAU,yBAAA,CAA0B,EAC9D,IAAK,WAAY,OAAO7D,EAAAA,IAAC/B,GAAA,CAAO,UAAU,uBAAA,CAAwB,EAClE,IAAK,QAAS,OAAO+B,EAAAA,IAACjC,EAAA,CAAM,UAAU,uBAAA,CAAwB,EAC9D,QAAS,OAAOiC,EAAAA,IAAC8D,GAAA,CAAK,UAAU,uBAAA,CAAwB,CAAA,CAE5D,EAEMC,EAAO,CACX,CAAE,GAAI,UAAW,MAAO,oBAAqB,KAAMtD,CAAA,EACnD,CAAE,GAAI,YAAa,MAAO,aAAc,KAAMH,CAAA,EAC9C,CAAE,GAAI,aAAc,MAAO,aAAc,KAAMsD,CAAA,EAC/C,CAAE,GAAI,aAAc,MAAO,aAAc,KAAMrD,CAAA,CAAI,EAGrD,OAAI5B,EAEAqB,MAAC,OAAI,UAAU,4CACb,eAAC,MAAA,CAAI,UAAU,iEAAiE,CAAA,CAClF,EAKFmB,EAAAA,KAAC,MAAA,CAAI,UAAU,uDAEb,SAAA,CAAAnB,EAAAA,IAAC,OAAI,UAAU,+BACb,SAAAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAAC6D,EAAA,CAAM,UAAU,uBAAA,CAAwB,SACxC,MAAA,CACC,SAAA,CAAA7D,EAAAA,IAAC,KAAA,CAAG,UAAU,kCAAkC,SAAA,2BAAwB,EACxEA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,kEAAA,CAErC,CAAA,CAAA,CACF,CAAA,EACF,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAAC,SAAA,CACC,QAASkD,EACT,UAAU,6GACV,MAAM,eAEN,SAAAlD,EAAAA,IAACsB,EAAA,CAAU,UAAU,SAAA,CAAU,CAAA,CAAA,EAGjCH,EAAAA,KAAC,SAAA,CACC,QAAS,IAAM4B,EAAsB,EAAI,EACzC,UAAU,8GAEV,SAAA,CAAA/C,EAAAA,IAACgE,EAAA,CAAK,UAAU,SAAA,CAAU,EAC1BhE,EAAAA,IAAC,QAAK,SAAA,iBAAA,CAAe,CAAA,CAAA,CAAA,CACvB,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAGAA,EAAAA,IAAC,MAAA,CAAI,UAAU,2BACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,sBACZ,SAAA+D,EAAK,IAAKE,GAAQ,CACjB,MAAMC,EAAOD,EAAI,KACjB,OACE9C,EAAAA,KAAC,SAAA,CAEC,QAAS,IAAM0B,EAAaoB,EAAI,EAAS,EACzC,UAAW,wEACTrB,IAAcqB,EAAI,GACd,gCACA,4EACN,GAEA,SAAA,CAAAjE,EAAAA,IAACkE,EAAA,CAAK,UAAU,SAAA,CAAU,EAC1BlE,EAAAA,IAAC,OAAA,CAAM,SAAAiE,EAAI,KAAA,CAAM,CAAA,CAAA,EATZA,EAAI,EAAA,CAYf,CAAC,EACH,EACF,EAGA9C,EAAAA,KAAC,MAAA,CAAI,UAAU,MACZ,SAAA,CAAAyB,IAAc,WACb5C,EAAAA,IAAC,MAAA,CAAI,UAAU,YACb,eAAC,MAAA,CAAI,UAAU,uDACZ,SAAAsC,EAAa,IAAK6B,GACjBhD,OAAC,MAAA,CAAyB,UAAU,0EAClC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAf,EAAY+D,EAAY,IAAI,SAC5B,MAAA,CACC,SAAA,CAAAnE,EAAAA,IAAC,KAAA,CAAG,UAAU,4BAA6B,SAAAmE,EAAY,KAAK,EAC5DhD,EAAAA,KAAC,IAAA,CAAE,UAAU,wBAAyB,SAAA,CAAAgD,EAAY,KAAK,MAAIA,EAAY,QAAA,CAAA,CAAS,CAAA,CAAA,CAClF,CAAA,EACF,EACCb,EAAca,EAAY,MAAM,CAAA,EACnC,EAEAhD,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,4CACb,SAAA,CAAAnB,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,UAAO,EACtCyD,EAAeU,EAAY,MAAM,CAAA,EACpC,EACAhD,EAAAA,KAAC,MAAA,CAAI,UAAU,4CACb,SAAA,CAAAnB,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,UAAO,EACvCmB,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAe,SAAA,CAAAgD,EAAY,OAAO,GAAA,CAAA,CAAC,CAAA,EACrD,EACAhD,EAAAA,KAAC,MAAA,CAAI,UAAU,4CACb,SAAA,CAAAnB,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,WAAQ,EACxCmB,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAe,SAAA,CAAAgD,EAAY,QAAQ,IAAA,CAAA,CAAE,CAAA,EACvD,EACAhD,EAAAA,KAAC,MAAA,CAAI,UAAU,4CACb,SAAA,CAAAnB,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,gBAAa,QAC5C,OAAA,CAAK,UAAU,cAAe,SAAAmE,EAAY,OAAO,gBAAe,CAAE,CAAA,CAAA,CACrE,CAAA,EACF,EAEAhD,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAnB,EAAAA,IAACoE,EAAA,CAAK,UAAU,SAAA,CAAU,SACzB,OAAA,CAAM,SAAA,CAAAD,EAAY,eAAe,MAAIA,EAAY,eAAA,CAAA,CAAgB,CAAA,EACpE,SACC,MAAA,CAAI,SAAA,CAAA,cAAY,IAAI,KAAKA,EAAY,QAAQ,EAAE,eAAA,CAAe,CAAA,CAAE,CAAA,EACnE,EAEAhD,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACZ,SAAA,CAAAgD,EAAY,UAAU,MAAM,EAAG,CAAC,EAAE,IAAI,CAAC9D,EAAMyB,UAC3C,OAAA,CAAiB,UAAU,sDACzB,SAAAzB,CAAA,EADQyB,CAEX,CACD,EACAqC,EAAY,UAAU,OAAS,GAC9BhD,EAAAA,KAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,CAAA,IAAEgD,EAAY,UAAU,OAAS,EAAE,OAAA,CAAA,CAAK,CAAA,CAAA,CAEpF,CAAA,EACF,EAEAhD,EAAAA,KAAC,MAAA,CAAI,UAAU,uEACb,SAAA,CAAAnB,EAAAA,IAAC,SAAA,CACC,QAAS,IAAMiD,EAAuBkB,CAAW,EACjD,UAAU,wDACX,SAAA,cAAA,CAAA,EAGDnE,EAAAA,IAAC,UAAO,UAAU,wCAChB,eAACuB,EAAA,CAAS,UAAU,UAAU,CAAA,CAChC,CAAA,CAAA,CACF,CAAA,CAAA,EA9DQ4C,EAAY,EA+DtB,CACD,CAAA,CACH,CAAA,CACF,EAGDvB,IAAc,aACb5C,MAAC,MAAA,CAAI,UAAU,YACZ,SAAAwC,EAAU,IAAK6B,GACdlD,OAAC,MAAA,CAAkB,UAAU,wCAC3B,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,4BAA6B,SAAAqE,EAAK,OAAO,EACxDrE,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,QAAA,CAAM,CAAA,EAC/C,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,8BAAA,CAA+B,EAC9CA,EAAAA,IAACM,EAAA,CAAS,UAAU,uBAAA,CAAwB,EAC5CN,EAAAA,IAAC,MAAA,CAAI,UAAU,8BAAA,CAA+B,CAAA,EAChD,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,4BAA6B,SAAAqE,EAAK,YAAY,EAC7DrE,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,aAAA,CAAW,CAAA,CAAA,CACpD,CAAA,EACF,EACCyD,EAAeY,EAAK,MAAM,CAAA,EAC7B,EAEAlD,EAAAA,KAAC,MAAA,CAAI,UAAU,gDACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAnB,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,aAAU,EAC1CA,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAe,WAAK,QAAA,CAAS,CAAA,EAC5C,SACC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,UAAO,EACvCmB,EAAAA,KAAC,IAAA,CAAE,UAAU,cAAe,SAAA,CAAAkD,EAAK,OAAO,eAAA,EAAiB,UAAA,CAAA,CAAQ,CAAA,EACnE,SACC,MAAA,CACC,SAAA,CAAArE,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,aAAU,EAC1CA,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAe,WAAK,SAAA,CAAU,CAAA,EAC7C,SACC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAgB,SAAA,iBAAc,EAC9CA,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAe,SAAA,IAAI,KAAKqE,EAAK,YAAY,EAAE,eAAA,CAAe,CAAE,CAAA,CAAA,CAC3E,CAAA,EACF,EAECA,EAAK,gBAAgB,OAAS,GAC7BlD,EAAAA,KAAC,MAAA,CAAI,UAAU,qCACb,SAAA,CAAAnB,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,mBAAgB,QACvD,MAAA,CAAI,UAAU,4BACZ,SAAAqE,EAAK,gBAAgB,IAAI,CAACC,EAAWxC,UACnC,OAAA,CAAiB,UAAU,sDACzB,SAAAwC,CAAA,EADQxC,CAEX,CACD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,EAjDMuC,EAAK,EAmDf,CACD,EACH,EAGDzB,IAAc,cACb5C,MAAC,MAAA,CAAI,UAAU,YACZ,SAAA0C,EAAkB,IAAK6B,GACtBpD,OAAC,MAAA,CAA0B,UAAU,wCACnC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAAC4D,EAAA,CAAO,UAAU,uBAAA,CAAwB,SACzC,MAAA,CACC,SAAA,CAAA5D,EAAAA,IAAC,KAAA,CAAG,UAAU,oCAAqC,SAAAuE,EAAO,SAAS,EACnEpD,EAAAA,KAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,eAAa,IAAI,KAAKoD,EAAO,SAAS,EAAE,mBAAA,CAAmB,CAAA,CAAE,CAAA,CAAA,CACpG,CAAA,EACF,EACApD,EAAAA,KAAC,MAAA,CAAI,UAAU,aACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,mCAAoC,SAAA,CAAAoD,EAAO,MAAM,GAAA,EAAC,EAChEd,EAAec,EAAO,MAAM,CAAA,CAAA,CAC/B,CAAA,EACF,EAEAvE,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAAuE,EAAO,aAAa,IAAI,CAACC,EAAK1C,IAC7BX,OAAC,MAAA,CAAgB,UAAU,6BACxB,SAAA,CAAAqD,EAAI,UACFrE,EAAA,CAAY,UAAU,gCAAgC,EAEvDH,EAAAA,IAACwD,EAAA,CAAQ,UAAU,6BAAA,CAA8B,EAEnDrC,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,4BAA6B,SAAAwE,EAAI,KAAK,EACrDxE,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAyB,WAAI,WAAA,CAAY,CAAA,CAAA,CAC1D,CAAA,CAAA,EATQ8B,CAUV,CACD,CAAA,CACH,CAAA,CAAA,EA7BQyC,EAAO,QA8BjB,CACD,EACH,EAGD3B,IAAc,cACbzB,OAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAnB,EAAAA,IAAC,OAAI,UAAU,qDACb,SAAAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAACG,EAAA,CAAY,UAAU,wBAAA,CAAyB,SAC/C,MAAA,CACC,SAAA,CAAAH,EAAAA,IAAC,MAAA,CAAI,UAAU,oCACZ,SAAAsC,EAAa,UAAYmC,EAAE,SAAW,WAAW,EAAE,MAAA,CACtD,EACAzE,EAAAA,IAAC,MAAA,CAAI,UAAU,yBAAyB,SAAA,mBAAA,CAAiB,CAAA,CAAA,CAC3D,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,uDACb,SAAAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAACC,EAAA,CAAc,UAAU,yBAAA,CAA0B,SAClD,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,MAAA,CAAI,UAAU,qCACZ,SAAAsC,EAAa,OAAOmC,GAAKA,EAAE,SAAW,SAAWA,EAAE,SAAW,SAAS,EAAE,OAC5E,EACAzE,EAAAA,IAAC,MAAA,CAAI,UAAU,0BAA0B,SAAA,iBAAA,CAAe,CAAA,CAAA,CAC1D,CAAA,CAAA,CACF,CAAA,CACF,QAEC,MAAA,CAAI,UAAU,mDACb,SAAAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAACM,EAAA,CAAS,UAAU,uBAAA,CAAwB,SAC3C,MAAA,CACC,SAAA,CAAAN,EAAAA,IAAC,MAAA,CAAI,UAAU,mCACZ,SAAAwC,EAAU,UAAYkC,EAAE,SAAW,QAAQ,EAAE,MAAA,CAChD,EACA1E,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,mBAAA,CAAiB,CAAA,CAAA,CAC1D,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAnB,EAAAA,IAAC,KAAA,CAAG,UAAU,yCAAyC,SAAA,yBAAsB,EAC7EA,EAAAA,IAAC,MAAA,CAAI,UAAU,YACZ,SAAAsC,EAAa,IAAK6B,GACjBhD,EAAAA,KAAC,MAAA,CAAyB,UAAU,8DAClC,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAf,EAAY+D,EAAY,IAAI,EAC7BnE,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAe,WAAY,IAAA,CAAK,CAAA,EAClD,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,sCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,cAAe,SAAA,CAAAgD,EAAY,OAAO,GAAA,EAAC,EAClDnE,EAAAA,IAAC,MAAA,CAAI,UAAU,gBAAgB,SAAA,QAAA,CAAM,CAAA,EACvC,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,cAAe,SAAA,CAAAgD,EAAY,QAAQ,IAAA,EAAE,EACpDnE,EAAAA,IAAC,MAAA,CAAI,UAAU,gBAAgB,SAAA,SAAA,CAAO,CAAA,EACxC,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,cAAe,SAAA,CAAAgD,EAAY,UAAU,GAAA,EAAC,EACrDnE,EAAAA,IAAC,MAAA,CAAI,UAAU,gBAAgB,SAAA,YAAA,CAAU,CAAA,EAC3C,EACCsD,EAAca,EAAY,MAAM,CAAA,CAAA,CACnC,CAAA,GAnBQA,EAAY,EAoBtB,CACD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,CAEJ,EC7jBMQ,GAA8B,IAAM,CACxC,KAAM,CAAE,eAAAC,CAAA,EAAmBC,EAAA,EACrB,CAACjC,EAAWC,CAAY,EAAIrE,EAAAA,SAA4D,iBAAiB,EACzG,CAACsG,CAAY,EAAItG,WAAuB,CAC5C,GAAI,CACF,OAAQ,SACR,SAAU,KACV,WAAY,uBACZ,aAAc,EAAA,EAEhB,iBAAkB,CAChB,iBAAkB,EAClB,UAAW,EACX,UAAW,IACX,OAAQ,KAAA,EAEV,YAAa,CACX,aAAc,IACd,WAAY,KACZ,WAAY,CAAA,CACd,CACD,EAEKuF,EAAO,CACX,CACE,GAAI,kBACJ,MAAO,qBACP,KAAM3C,EACN,YAAa,wCAAA,EAEf,CACE,GAAI,mBACJ,MAAO,mBACP,KAAMyC,EACN,YAAa,oCAAA,EAEf,CACE,GAAI,SACJ,MAAO,gBACP,KAAMvD,EACN,YAAa,iCAAA,CACf,EAGIgD,EAAiBC,GAAmB,CACxC,OAAQA,EAAA,CACN,IAAK,SAAU,OAAOvD,EAAAA,IAACG,EAAA,CAAY,UAAU,wBAAA,CAAyB,EACtE,IAAK,UAAW,OAAOH,EAAAA,IAACC,EAAA,CAAc,UAAU,sBAAA,CAAuB,EACvE,IAAK,WAAY,OAAOD,EAAAA,IAACsB,EAAA,CAAU,UAAU,oCAAA,CAAqC,EAClF,QAAS,OAAOtB,EAAAA,IAAC+B,EAAA,CAAM,UAAU,uBAAA,CAAwB,CAAA,CAE7D,EAEMgD,EAAa,CAAC,CAClB,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,KAAMhB,EACN,MAAAiB,EAAQ,OACR,OAAA5B,CAAA,IAQI,CACJ,MAAM6B,EAAe,CACnB,KAAM,4BACN,MAAO,8BACP,IAAK,0BACL,OAAQ,gCACR,OAAQ,+BAAA,EAGV,OACEjE,EAAAA,KAAC,MAAA,CAAI,UAAU,2DACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAW,kBAAkBoF,EAAaD,CAAkC,CAAC,GAChF,SAAAnF,EAAAA,IAACkE,EAAA,CAAK,UAAU,SAAA,CAAU,EAC5B,EACCX,GAAUD,EAAcC,CAAM,CAAA,EACjC,SAEC,MAAA,CACC,SAAA,CAAAvD,EAAAA,IAAC,IAAA,CAAE,UAAU,yCAA0C,SAAAgF,EAAM,EAC7DhF,EAAAA,IAAC,IAAA,CAAE,UAAU,wCAAyC,SAAAiF,EAAM,EAC5DjF,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAyB,SAAAkF,CAAA,CAAS,CAAA,CAAA,CACjD,CAAA,EACF,CAEJ,EAEA,OACE/D,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,cACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,kDACb,SAAA,CAAAnB,EAAAA,IAACoB,EAAA,CAAM,UAAU,yBAAA,CAA0B,EAC3CpB,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,4BAAyB,EAC1EA,EAAAA,IAAC6D,EAAA,CAAM,UAAU,uBAAA,CAAwB,CAAA,EAC3C,EACA7D,EAAAA,IAAC,IAAA,CAAE,UAAU,0CAA0C,SAAA,4FAAA,CAEvD,CAAA,EACF,EAGAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAnB,EAAAA,IAAC+E,EAAA,CACC,MAAM,kBACN,MAAOD,EAAa,GAAG,OAAO,OAAO,CAAC,EAAE,YAAA,EAAgBA,EAAa,GAAG,OAAO,MAAM,CAAC,EACtF,SAAU,GAAGA,EAAa,GAAG,QAAQ,aACrC,KAAM1D,EACN,MAAM,SACN,OAAQ0D,EAAa,GAAG,MAAA,CAAA,EAG1B9E,EAAAA,IAAC+E,EAAA,CACC,MAAM,oBACN,MAAOD,EAAa,iBAAiB,iBACrC,SAAU,GAAGA,EAAa,iBAAiB,SAAS,qBACpD,KAAMjB,EACN,MAAM,MAAA,CAAA,EAGR7D,EAAAA,IAAC+E,EAAA,CACC,MAAM,gBACN,MAAO,GAAGD,EAAa,iBAAiB,MAAM,IAC9C,SAAS,eACT,KAAMO,EACN,MAAM,OAAA,CAAA,EAGRrF,EAAAA,IAAC+E,EAAA,CACC,MAAM,gBACN,MAAO,GAAGD,EAAa,YAAY,YAAY,KAC/C,SAAS,uBACT,KAAMQ,EACN,MAAM,QAAA,CAAA,CACR,EACF,EAGAtF,EAAAA,IAAC,MAAA,CAAI,UAAU,2BACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,iBACZ,SAAA+D,EAAK,IAAKE,GAAQ,CACjB,MAAMC,EAAOD,EAAI,KACjB,OACE9C,EAAAA,KAAC,SAAA,CAEC,QAAS,IAAM0B,EAAaoB,EAAI,EAAS,EACzC,UAAW,wEACTrB,IAAcqB,EAAI,GACd,gCACA,4EACN,GAEA,SAAA,CAAAjE,EAAAA,IAACkE,EAAA,CAAK,UAAU,SAAA,CAAU,EAC1B/C,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAK,WAAI,KAAA,CAAM,EAChBA,EAAAA,IAAC,MAAA,CAAI,UAAU,oCAAqC,WAAI,WAAA,CAAY,CAAA,CAAA,CACtE,CAAA,CAAA,EAZKiE,EAAI,EAAA,CAef,CAAC,EACH,EACF,SAGC,MAAA,CACE,SAAA,CAAArB,IAAc,mBACbzB,OAAC,MAAA,CAAI,UAAU,YAEZ,SAAA,CAAAyD,QACE,MAAA,CAAI,UAAU,mDACb,SAAAzD,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAACiB,EAAA,CAAM,UAAU,uBAAA,CAAwB,SACxC,MAAA,CACC,SAAA,CAAAE,EAAAA,KAAC,KAAA,CAAG,UAAU,4BAA4B,SAAA,CAAA,mCACPyD,EAAe,aAAa,UAAU,IAAEA,EAAe,aAAa,QAAA,EACvG,EACAzD,EAAAA,KAAC,IAAA,CAAE,UAAU,wBACV,SAAA,CAAAyD,EAAe,aAAa,IAAI,aAAWA,EAAe,aAAa,OAAO,IAC9EA,EAAe,WAAW,OAAS,GAAK,mBAAmBA,EAAe,WAAW,CAAC,EAAE,IAAI,EAAA,CAAA,CAC/F,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAEA5E,EAAAA,IAAC,MAAA,CAAI,UAAU,uDACb,SAAAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAnB,EAAAA,IAACC,EAAA,CAAc,UAAU,yBAAA,CAA0B,SAClD,MAAA,CACC,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,8BAA8B,SAAA,sBAAmB,EAC/DA,EAAAA,IAAC,IAAA,CAAE,UAAU,0BAA0B,SAAA,0FAAA,CAEvC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAIFA,EAAAA,IAAC7B,GAAA,CAAqB,QAASyG,GAAkB,MAAA,CAAW,EAG5DzD,EAAAA,KAAC,MAAA,CAAI,UAAU,iDACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,gEACZ,SAAA,CAAAnB,EAAAA,IAACuB,EAAA,CAAS,UAAU,uBAAA,CAAwB,EAC5CvB,EAAAA,IAAC,QAAK,SAAA,sBAAA,CAAoB,CAAA,EAC5B,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAmC,EAAcwB,EAAa,GAAG,MAAM,EACrC3D,EAAAA,KAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,CAAA,iBACvB,IAAI,KAAK2D,EAAa,GAAG,UAAU,EAAE,eAAA,CAAe,CAAA,CACrE,CAAA,CAAA,CACF,CAAA,EACF,EAEA3D,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAnB,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,gBAAa,EAC5DmB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,sBAAA,CAAoB,EAC1BA,EAAAA,IAACG,EAAA,CAAY,UAAU,wBAAA,CAAyB,CAAA,EAClD,EACAgB,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,yBAAA,CAAuB,EAC7BA,EAAAA,IAACG,EAAA,CAAY,UAAU,wBAAA,CAAyB,CAAA,EAClD,EACAgB,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,8BAAA,CAA4B,EAClCA,EAAAA,IAACG,EAAA,CAAY,UAAU,wBAAA,CAAyB,CAAA,EAClD,EACAgB,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,0BAAA,CAAwB,EAC9BA,EAAAA,IAACG,EAAA,CAAY,UAAU,wBAAA,CAAyB,CAAA,CAAA,CAClD,CAAA,CAAA,CACF,CAAA,EACF,SAEC,MAAA,CACC,SAAA,CAAAH,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,sBAAmB,EAClEmB,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,mBAAA,CAAiB,EACvBmB,EAAAA,KAAC,OAAA,CAAK,UAAU,6BAA8B,SAAA,CAAA2D,EAAa,GAAG,SAAS,GAAA,CAAA,CAAC,CAAA,EAC1E,EACA3D,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,YAAA,CAAU,EAChBA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAc,SAAA,OAAA,CAAK,CAAA,EACrC,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,SAAA,CAAO,EACbA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAc,SAAA,OAAA,CAAK,CAAA,EACrC,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,EACfA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAc,SAAA,OAAA,CAAK,CAAA,CAAA,CACrC,CAAA,CAAA,CACF,CAAA,EACF,SAEC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,KAAA,CAAG,UAAU,iCAAiC,SAAA,gBAAa,EAC5DmB,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,kBAAA,CAAgB,EACtBA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAc,SAAA,MAAA,CAAI,CAAA,EACpC,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,kBAAA,CAAgB,EACtBA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAc,SAAA,QAAA,CAAM,CAAA,EACtC,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,oBAAA,CAAkB,EACxBA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAc,SAAA,MAAA,CAAI,CAAA,EACpC,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,mBAAA,CAAiB,EACvBA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAc,SAAA,MAAA,CAAI,CAAA,CAAA,CACpC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGD4C,IAAc,oBACb5C,MAACqC,GAAA,CAAA,CAAwB,EAG1BO,IAAc,UACbzB,OAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,iDACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,qEACZ,SAAA,CAAAnB,EAAAA,IAACM,EAAA,CAAS,UAAU,uBAAA,CAAwB,EAC5CN,EAAAA,IAAC,QAAK,SAAA,sBAAA,CAAoB,CAAA,EAC5B,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAnB,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,oBAAiB,EACzDmB,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAe,SAAA,CAAA2D,EAAa,YAAY,aAAa,IAAA,CAAA,CAAE,CAAA,EACzE,EACA9E,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,MAAO,CAAE,MAAO,KAAA,EAAS,EAC1E,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAnB,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,uBAAoB,EAC5DA,MAAC,QAAK,UAAU,cAAe,WAAa,YAAY,WAAW,gBAAe,CAAE,CAAA,EACtF,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,+BAA+B,MAAO,CAAE,MAAO,KAAA,EAAS,EACzE,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAnB,EAAAA,IAAC,OAAA,CAAK,UAAU,wBAAwB,SAAA,aAAU,EAClDmB,EAAAA,KAAC,OAAA,CAAK,UAAU,6BAA8B,SAAA,CAAA2D,EAAa,iBAAiB,UAAU,GAAA,CAAA,CAAC,CAAA,EACzF,EACA9E,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,gCAAgC,MAAO,CAAE,MAAO,KAAA,EAAS,CAAA,CAC1E,CAAA,CAAA,CACF,CAAA,EACF,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,iDACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,qEACZ,SAAA,CAAAnB,EAAAA,IAACS,EAAA,CAAS,UAAU,yBAAA,CAA0B,EAC9CT,EAAAA,IAAC,QAAK,SAAA,iBAAA,CAAe,CAAA,EACvB,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,mCAAmC,SAAA,QAAK,EACvDA,EAAAA,IAAC,MAAA,CAAI,UAAU,gBAAgB,SAAA,oBAAiB,EAChDA,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,OAAA,CAAK,CAAA,EAC9C,EACAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,oCAAoC,SAAA,OAAI,EACvDA,EAAAA,IAAC,MAAA,CAAI,UAAU,iBAAiB,SAAA,gBAAa,EAC7CA,EAAAA,IAAC,MAAA,CAAI,UAAU,yBAAyB,SAAA,aAAA,CAAW,CAAA,CAAA,CACrD,CAAA,EACF,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAnB,EAAAA,IAAC,QAAK,SAAA,gBAAA,CAAc,EACpBA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAc,SAAA,aAAA,CAAW,CAAA,EAC3C,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,sCACb,SAAAA,EAAAA,IAAC,MAAA,CAAI,UAAU,iCAAiC,MAAO,CAAE,MAAO,KAAA,EAAS,CAAA,CAC3E,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EAGAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,iDACb,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,qEACZ,SAAA,CAAAnB,EAAAA,IAAC+B,EAAA,CAAM,UAAU,uBAAA,CAAwB,EACzC/B,EAAAA,IAAC,QAAK,SAAA,sBAAA,CAAoB,CAAA,EAC5B,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,iFACb,SAAA,CAAAnB,EAAAA,IAACG,EAAA,CAAY,UAAU,wBAAA,CAAyB,EAChDgB,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,6BAA6B,SAAA,4BAAyB,EACrEA,EAAAA,IAAC,MAAA,CAAI,UAAU,yBAAyB,SAAA,0DAAA,CAAwD,CAAA,EAClG,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,yBAAyB,SAAA,aAAA,CAAW,CAAA,EACrD,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,+EACb,SAAA,CAAAnB,EAAAA,IAACjC,EAAA,CAAM,UAAU,uBAAA,CAAwB,EACzCoD,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,4BAA4B,SAAA,+BAA4B,EACvEA,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,2CAAA,CAAyC,CAAA,EAClF,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,aAAA,CAAW,CAAA,EACpD,EAEAmB,EAAAA,KAAC,MAAA,CAAI,UAAU,mFACb,SAAA,CAAAnB,EAAAA,IAACsB,EAAA,CAAU,UAAU,yBAAA,CAA0B,EAC/CH,EAAAA,KAAC,MAAA,CAAI,UAAU,SACb,SAAA,CAAAnB,EAAAA,IAAC,MAAA,CAAI,UAAU,8BAA8B,SAAA,wBAAqB,EAClEA,EAAAA,IAAC,MAAA,CAAI,UAAU,0BAA0B,SAAA,yDAAA,CAAuD,CAAA,EAClG,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,0BAA0B,SAAA,aAAA,CAAW,CAAA,CAAA,CACtD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,CAEJ","x_google_ignoreList":[0,1,2]}