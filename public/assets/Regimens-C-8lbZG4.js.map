{"version":3,"file":"Regimens-C-8lbZG4.js","sources":["../../node_modules/lucide-react/dist/esm/icons/droplet.js","../../node_modules/lucide-react/dist/esm/icons/scale.js","../../src/services/alertService.ts","../../src/components/Dosing/EnhancedDoseCalculator.tsx","../../src/pages/Regimens.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-4-6.5c-.5 2.5-2 4.9-4 6.5C6 11.1 5 13 5 15a7 7 0 0 0 7 7z\",\n      key: \"c7niix\"\n    }\n  ]\n];\nconst Droplet = createLucideIcon(\"droplet\", __iconNode);\n\nexport { __iconNode, Droplet as default };\n//# sourceMappingURL=droplet.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m16 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z\", key: \"7g6ntu\" }],\n  [\"path\", { d: \"m2 16 3-8 3 8c-.87.65-1.92 1-3 1s-2.13-.35-3-1Z\", key: \"ijws7r\" }],\n  [\"path\", { d: \"M7 21h10\", key: \"1b0cd5\" }],\n  [\"path\", { d: \"M12 3v18\", key: \"108xh3\" }],\n  [\"path\", { d: \"M3 7h2c2 0 5-1 7-2 2 1 5 2 7 2h2\", key: \"3gwbw2\" }]\n];\nconst Scale = createLucideIcon(\"scale\", __iconNode);\n\nexport { __iconNode, Scale as default };\n//# sourceMappingURL=scale.js.map\n","import { PatientProfile, ClinicalAlert, Drug } from '../types';\n\nexport interface DoseCalculationAlert {\n  id: string;\n  type: 'dosing' | 'allergy' | 'interaction' | 'contraindication' | 'monitoring' | 'lab';\n  severity: 'low' | 'moderate' | 'high' | 'critical';\n  message: string;\n  details: string;\n  recommendedAction: string;\n  affectedMedication?: string;\n  category: 'renal' | 'hepatic' | 'cardiac' | 'hematologic' | 'age' | 'weight' | 'bsa' | 'genetic' | 'general';\n  source: string;\n  priority: number; // 1-10, 10 being highest priority\n}\n\nexport interface DoseRecommendation {\n  originalDose: number;\n  recommendedDose: number;\n  unit: string;\n  adjustmentReason: string;\n  adjustmentFactor: number;\n  confidence: 'high' | 'moderate' | 'low';\n  references: string[];\n}\n\nclass AlertService {\n  private static instance: AlertService;\n\n  private constructor() {}\n\n  public static getInstance(): AlertService {\n    if (!AlertService.instance) {\n      AlertService.instance = new AlertService();\n    }\n    return AlertService.instance;\n  }\n\n  /**\n   * Comprehensive dose calculation with safety alerts\n   */\n  public calculateDoseWithAlerts(\n    patient: PatientProfile,\n    drug: Drug,\n    standardDose: number,\n    unit: string,\n    indication?: string\n  ): {\n    recommendedDose: number;\n    alerts: DoseCalculationAlert[];\n    adjustments: DoseRecommendation[];\n    safetyScore: number; // 0-100, 100 being safest\n  } {\n    const alerts: DoseCalculationAlert[] = [];\n    const adjustments: DoseRecommendation[] = [];\n    let finalDose = standardDose;\n    let totalAdjustmentFactor = 1.0;\n\n    // Age-based adjustments\n    const age = this.calculateAge(patient.demographics.dateOfBirth);\n    if (age >= 65) {\n      const ageAdjustment = this.getAgeBasedAdjustment(age, drug);\n      if (ageAdjustment.factor !== 1.0) {\n        finalDose *= ageAdjustment.factor;\n        totalAdjustmentFactor *= ageAdjustment.factor;\n        \n        adjustments.push({\n          originalDose: standardDose,\n          recommendedDose: finalDose,\n          unit,\n          adjustmentReason: ageAdjustment.reason,\n          adjustmentFactor: ageAdjustment.factor,\n          confidence: 'high',\n          references: ['Geriatric Dosing Guidelines', 'Beers Criteria']\n        });\n\n        alerts.push({\n          id: `age-${Date.now()}`,\n          type: 'dosing',\n          severity: ageAdjustment.factor < 0.7 ? 'high' : 'moderate',\n          message: `Age-based dose adjustment recommended`,\n          details: `Patient age ${age} years requires dose modification for ${drug.name}`,\n          recommendedAction: `Consider ${Math.round((1 - ageAdjustment.factor) * 100)}% dose reduction`,\n          affectedMedication: drug.name,\n          category: 'age',\n          source: 'Geriatric Pharmacology Guidelines',\n          priority: 7\n        });\n      }\n    }\n\n    // Renal function adjustments\n    const renalAlerts = this.checkRenalFunction(patient, drug, finalDose, unit);\n    alerts.push(...renalAlerts.alerts);\n    if (renalAlerts.adjustmentFactor !== 1.0) {\n      finalDose *= renalAlerts.adjustmentFactor;\n      totalAdjustmentFactor *= renalAlerts.adjustmentFactor;\n      \n      adjustments.push({\n        originalDose: standardDose * (totalAdjustmentFactor / renalAlerts.adjustmentFactor),\n        recommendedDose: finalDose,\n        unit,\n        adjustmentReason: 'Renal impairment adjustment',\n        adjustmentFactor: renalAlerts.adjustmentFactor,\n        confidence: 'high',\n        references: ['Kidney Disease: Improving Global Outcomes (KDIGO)', 'FDA Renal Impairment Guidance']\n      });\n    }\n\n    // Hepatic function adjustments\n    const hepaticAlerts = this.checkHepaticFunction(patient, drug, finalDose, unit);\n    alerts.push(...hepaticAlerts.alerts);\n    if (hepaticAlerts.adjustmentFactor !== 1.0) {\n      finalDose *= hepaticAlerts.adjustmentFactor;\n      totalAdjustmentFactor *= hepaticAlerts.adjustmentFactor;\n      \n      adjustments.push({\n        originalDose: standardDose * (totalAdjustmentFactor / hepaticAlerts.adjustmentFactor),\n        recommendedDose: finalDose,\n        unit,\n        adjustmentReason: 'Hepatic impairment adjustment',\n        adjustmentFactor: hepaticAlerts.adjustmentFactor,\n        confidence: 'moderate',\n        references: ['Child-Pugh Classification', 'FDA Hepatic Impairment Guidance']\n      });\n    }\n\n    // Weight/BSA adjustments\n    const weightAlerts = this.checkWeightBasedDosing(patient, drug, finalDose, unit);\n    alerts.push(...weightAlerts.alerts);\n\n    // Genetic/pharmacogenomic adjustments\n    const geneticAlerts = this.checkGeneticFactors(patient, drug, finalDose, unit);\n    alerts.push(...geneticAlerts.alerts);\n    if (geneticAlerts.adjustmentFactor !== 1.0) {\n      finalDose *= geneticAlerts.adjustmentFactor;\n      totalAdjustmentFactor *= geneticAlerts.adjustmentFactor;\n    }\n\n    // Drug allergy checks\n    const allergyAlerts = this.checkDrugAllergies(patient, drug);\n    alerts.push(...allergyAlerts);\n\n    // Lab value alerts\n    const labAlerts = this.checkLabValues(patient, drug);\n    alerts.push(...labAlerts);\n\n    // Drug-specific contraindications\n    const contraindicationAlerts = this.checkContraindications(patient, drug);\n    alerts.push(...contraindicationAlerts);\n\n    // Calculate safety score\n    const safetyScore = this.calculateSafetyScore(alerts);\n\n    return {\n      recommendedDose: Math.round(finalDose * 100) / 100, // Round to 2 decimal places\n      alerts: alerts.sort((a, b) => b.priority - a.priority), // Sort by priority\n      adjustments,\n      safetyScore\n    };\n  }\n\n  private calculateAge(dateOfBirth: string): number {\n    const today = new Date();\n    const birthDate = new Date(dateOfBirth);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  }\n\n  private getAgeBasedAdjustment(age: number, drug: Drug): { factor: number; reason: string } {\n    // Age-based adjustment logic for common oncology drugs\n    const drugName = drug.name.toLowerCase();\n    \n    if (age >= 75) {\n      if (drugName.includes('doxorubicin') || drugName.includes('adriamycin')) {\n        return { factor: 0.75, reason: 'Increased cardiotoxicity risk in elderly patients' };\n      }\n      if (drugName.includes('carboplatin') || drugName.includes('cisplatin')) {\n        return { factor: 0.8, reason: 'Increased nephrotoxicity and ototoxicity risk' };\n      }\n      if (drugName.includes('fluorouracil') || drugName.includes('5-fu')) {\n        return { factor: 0.85, reason: 'Increased risk of severe mucositis and myelosuppression' };\n      }\n      return { factor: 0.9, reason: 'General elderly dose reduction for safety' };\n    } else if (age >= 65) {\n      if (drugName.includes('doxorubicin') || drugName.includes('adriamycin')) {\n        return { factor: 0.85, reason: 'Moderate cardiotoxicity risk reduction' };\n      }\n      return { factor: 0.95, reason: 'Mild elderly dose adjustment' };\n    }\n    \n    return { factor: 1.0, reason: 'No age-based adjustment needed' };\n  }\n\n  private checkRenalFunction(patient: PatientProfile, drug: Drug, dose: number, unit: string): {\n    alerts: DoseCalculationAlert[];\n    adjustmentFactor: number;\n  } {\n    const alerts: DoseCalculationAlert[] = [];\n    let adjustmentFactor = 1.0;\n\n    // Look for creatinine clearance in lab values\n    const recentCrCl = patient.labValues\n      .filter(lab => lab.labType.toLowerCase().includes('creatinine clearance') || lab.labType.toLowerCase() === 'crcl')\n      .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())[0];\n\n    if (recentCrCl) {\n      const crcl = recentCrCl.value;\n      const drugName = drug.name.toLowerCase();\n\n      if (crcl < 30) {\n        // Severe renal impairment\n        if (drugName.includes('carboplatin')) {\n          adjustmentFactor = 0.5;\n          alerts.push({\n            id: `renal-severe-${Date.now()}`,\n            type: 'dosing',\n            severity: 'critical',\n            message: 'Severe renal impairment detected',\n            details: `CrCl ${crcl} mL/min requires significant dose reduction for ${drug.name}`,\n            recommendedAction: '50% dose reduction recommended, consider nephrology consultation',\n            affectedMedication: drug.name,\n            category: 'renal',\n            source: 'Renal Dosing Guidelines',\n            priority: 9\n          });\n        } else if (drugName.includes('cisplatin')) {\n          alerts.push({\n            id: `renal-contraindication-${Date.now()}`,\n            type: 'contraindication',\n            severity: 'critical',\n            message: 'Cisplatin contraindicated in severe renal impairment',\n            details: `CrCl ${crcl} mL/min is below safe threshold for cisplatin administration`,\n            recommendedAction: 'Consider alternative platinum agent (carboplatin) or non-platinum regimen',\n            affectedMedication: drug.name,\n            category: 'renal',\n            source: 'FDA Drug Label',\n            priority: 10\n          });\n        }\n      } else if (crcl < 50) {\n        // Moderate renal impairment\n        if (drugName.includes('carboplatin') || drugName.includes('cisplatin')) {\n          adjustmentFactor = 0.75;\n          alerts.push({\n            id: `renal-moderate-${Date.now()}`,\n            type: 'dosing',\n            severity: 'high',\n            message: 'Moderate renal impairment requires dose adjustment',\n            details: `CrCl ${crcl} mL/min requires dose modification for ${drug.name}`,\n            recommendedAction: '25% dose reduction recommended',\n            affectedMedication: drug.name,\n            category: 'renal',\n            source: 'NCCN Guidelines',\n            priority: 8\n          });\n        }\n      } else if (crcl < 80) {\n        // Mild renal impairment\n        alerts.push({\n          id: `renal-mild-${Date.now()}`,\n          type: 'monitoring',\n          severity: 'moderate',\n          message: 'Mild renal impairment detected',\n          details: `CrCl ${crcl} mL/min requires close monitoring during ${drug.name} therapy`,\n          recommendedAction: 'Monitor renal function before each cycle',\n          affectedMedication: drug.name,\n          category: 'renal',\n          source: 'Clinical Guidelines',\n          priority: 5\n        });\n      }\n    } else {\n      // No recent creatinine clearance available\n      alerts.push({\n        id: `renal-missing-${Date.now()}`,\n        type: 'lab',\n        severity: 'moderate',\n        message: 'Recent renal function test required',\n        details: `No recent creatinine clearance available for safe ${drug.name} dosing`,\n        recommendedAction: 'Obtain creatinine clearance before drug administration',\n        affectedMedication: drug.name,\n        category: 'renal',\n        source: 'Standard of Care',\n        priority: 6\n      });\n    }\n\n    return { alerts, adjustmentFactor };\n  }\n\n  private checkHepaticFunction(patient: PatientProfile, drug: Drug, dose: number, unit: string): {\n    alerts: DoseCalculationAlert[];\n    adjustmentFactor: number;\n  } {\n    const alerts: DoseCalculationAlert[] = [];\n    let adjustmentFactor = 1.0;\n\n    // Check for liver function tests\n    const recentAST = patient.labValues\n      .filter(lab => lab.labType.toLowerCase().includes('ast') || lab.labType.toLowerCase().includes('sgot'))\n      .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())[0];\n\n    const recentALT = patient.labValues\n      .filter(lab => lab.labType.toLowerCase().includes('alt') || lab.labType.toLowerCase().includes('sgpt'))\n      .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())[0];\n\n    const recentBilirubin = patient.labValues\n      .filter(lab => lab.labType.toLowerCase().includes('bilirubin'))\n      .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())[0];\n\n    if (recentAST && recentALT && recentBilirubin) {\n      const ast = recentAST.value;\n      const alt = recentALT.value;\n      const bilirubin = recentBilirubin.value;\n      const drugName = drug.name.toLowerCase();\n\n      // Assuming normal ranges: AST/ALT < 40 U/L, Bilirubin < 1.2 mg/dL\n      if (ast > 120 || alt > 120 || bilirubin > 3.0) {\n        // Severe hepatic impairment\n        adjustmentFactor = 0.5;\n        alerts.push({\n          id: `hepatic-severe-${Date.now()}`,\n          type: 'dosing',\n          severity: 'critical',\n          message: 'Severe hepatic impairment detected',\n          details: `Elevated liver enzymes (AST: ${ast}, ALT: ${alt}, Bilirubin: ${bilirubin}) require dose reduction`,\n          recommendedAction: '50% dose reduction recommended, consider hepatology consultation',\n          affectedMedication: drug.name,\n          category: 'hepatic',\n          source: 'Child-Pugh Classification',\n          priority: 9\n        });\n      } else if (ast > 80 || alt > 80 || bilirubin > 2.0) {\n        // Moderate hepatic impairment\n        adjustmentFactor = 0.75;\n        alerts.push({\n          id: `hepatic-moderate-${Date.now()}`,\n          type: 'dosing',\n          severity: 'high',\n          message: 'Moderate hepatic impairment requires dose adjustment',\n          details: `Elevated liver enzymes require dose modification for ${drug.name}`,\n          recommendedAction: '25% dose reduction recommended',\n          affectedMedication: drug.name,\n          category: 'hepatic',\n          source: 'FDA Hepatic Impairment Guidance',\n          priority: 8\n        });\n      } else if (ast > 40 || alt > 40 || bilirubin > 1.2) {\n        // Mild hepatic impairment\n        alerts.push({\n          id: `hepatic-mild-${Date.now()}`,\n          type: 'monitoring',\n          severity: 'moderate',\n          message: 'Mild hepatic impairment detected',\n          details: `Elevated liver enzymes require close monitoring during therapy`,\n          recommendedAction: 'Monitor liver function before each cycle',\n          affectedMedication: drug.name,\n          category: 'hepatic',\n          source: 'Clinical Guidelines',\n          priority: 5\n        });\n      }\n    }\n\n    return { alerts, adjustmentFactor };\n  }\n\n  private checkWeightBasedDosing(patient: PatientProfile, drug: Drug, dose: number, unit: string): {\n    alerts: DoseCalculationAlert[];\n  } {\n    const alerts: DoseCalculationAlert[] = [];\n    const { heightCm, weightKg } = patient.demographics;\n\n    if (!weightKg) {\n      alerts.push({\n        id: `weight-missing-${Date.now()}`,\n        type: 'dosing',\n        severity: 'high',\n        message: 'Patient weight required for accurate dosing',\n        details: `Body weight is required for safe ${drug.name} dosing calculations`,\n        recommendedAction: 'Obtain current accurate weight before dosing',\n        affectedMedication: drug.name,\n        category: 'weight',\n        source: 'Standard of Care',\n        priority: 8\n      });\n      return { alerts };\n    }\n\n    // Calculate BMI if height is available\n    if (heightCm) {\n      const bmi = weightKg / ((heightCm / 100) ** 2);\n      \n      if (bmi < 18.5) {\n        alerts.push({\n          id: `weight-underweight-${Date.now()}`,\n          type: 'monitoring',\n          severity: 'moderate',\n          message: 'Patient underweight - monitor for toxicity',\n          details: `BMI ${bmi.toFixed(1)} may increase risk of drug toxicity`,\n          recommendedAction: 'Consider dose reduction and enhanced monitoring',\n          affectedMedication: drug.name,\n          category: 'weight',\n          source: 'Clinical Guidelines',\n          priority: 6\n        });\n      } else if (bmi > 30) {\n        alerts.push({\n          id: `weight-obese-${Date.now()}`,\n          type: 'monitoring',\n          severity: 'moderate',\n          message: 'Obesity may affect drug distribution',\n          details: `BMI ${bmi.toFixed(1)} may require dosing adjustment considerations`,\n          recommendedAction: 'Consider BSA-based dosing and monitor for efficacy',\n          affectedMedication: drug.name,\n          category: 'weight',\n          source: 'Obesity Pharmacology Guidelines',\n          priority: 5\n        });\n      }\n    }\n\n    // Check for weight-based vs BSA-based dosing recommendations\n    const drugName = drug.name.toLowerCase();\n    if (drugName.includes('carboplatin')) {\n      alerts.push({\n        id: `dosing-method-${Date.now()}`,\n        type: 'dosing',\n        severity: 'moderate',\n        message: 'Carboplatin dosing recommendation',\n        details: 'Carboplatin should be dosed using Calvert formula (AUC-based) rather than BSA',\n        recommendedAction: 'Use AUC-based dosing: Dose = AUC × (CrCl + 25)',\n        affectedMedication: drug.name,\n        category: 'general',\n        source: 'Calvert Formula',\n        priority: 7\n      });\n    }\n\n    return { alerts };\n  }\n\n  private checkGeneticFactors(patient: PatientProfile, drug: Drug, dose: number, unit: string): {\n    alerts: DoseCalculationAlert[];\n    adjustmentFactor: number;\n  } {\n    const alerts: DoseCalculationAlert[] = [];\n    let adjustmentFactor = 1.0;\n    const drugName = drug.name.toLowerCase();\n\n    // Check for relevant genetic variants\n    patient.genetics.forEach(genetic => {\n      const gene = genetic.geneSymbol.toUpperCase();\n      \n      if (gene === 'DPYD' && (drugName.includes('fluorouracil') || drugName.includes('5-fu') || drugName.includes('capecitabine'))) {\n        if (genetic.metabolizerStatus === 'poor' || genetic.phenotype.toLowerCase().includes('deficient')) {\n          adjustmentFactor = 0.25;\n          alerts.push({\n            id: `genetic-dpyd-${Date.now()}`,\n            type: 'dosing',\n            severity: 'critical',\n            message: 'DPYD deficiency detected - severe dose reduction required',\n            details: `${genetic.phenotype} DPYD status requires 75% dose reduction for fluoropyrimidines`,\n            recommendedAction: 'Start with 25% of standard dose and monitor closely',\n            affectedMedication: drug.name,\n            category: 'genetic',\n            source: 'CPIC Guidelines',\n            priority: 10\n          });\n        } else if (genetic.metabolizerStatus === 'intermediate') {\n          adjustmentFactor = 0.5;\n          alerts.push({\n            id: `genetic-dpyd-intermediate-${Date.now()}`,\n            type: 'dosing',\n            severity: 'high',\n            message: 'DPYD intermediate metabolism - dose reduction required',\n            details: `Intermediate DPYD activity requires dose reduction for fluoropyrimidines`,\n            recommendedAction: 'Start with 50% of standard dose',\n            affectedMedication: drug.name,\n            category: 'genetic',\n            source: 'CPIC Guidelines',\n            priority: 9\n          });\n        }\n      }\n\n      if (gene === 'UGT1A1' && drugName.includes('irinotecan')) {\n        if (genetic.phenotype.includes('*28/*28') || genetic.metabolizerStatus === 'poor') {\n          adjustmentFactor = 0.7;\n          alerts.push({\n            id: `genetic-ugt1a1-${Date.now()}`,\n            type: 'dosing',\n            severity: 'high',\n            message: 'UGT1A1 polymorphism affects irinotecan metabolism',\n            details: `UGT1A1*28/*28 genotype increases risk of severe neutropenia and diarrhea`,\n            recommendedAction: '30% dose reduction recommended for initial cycles',\n            affectedMedication: drug.name,\n            category: 'genetic',\n            source: 'FDA Drug Label',\n            priority: 8\n          });\n        }\n      }\n\n      if (gene === 'TPMT' && (drugName.includes('mercaptopurine') || drugName.includes('azathioprine'))) {\n        if (genetic.metabolizerStatus === 'poor') {\n          adjustmentFactor = 0.1;\n          alerts.push({\n            id: `genetic-tpmt-${Date.now()}`,\n            type: 'dosing',\n            severity: 'critical',\n            message: 'TPMT deficiency - extreme dose reduction required',\n            details: `TPMT poor metabolizer status requires 90% dose reduction`,\n            recommendedAction: 'Start with 10% of standard dose',\n            affectedMedication: drug.name,\n            category: 'genetic',\n            source: 'CPIC Guidelines',\n            priority: 10\n          });\n        } else if (genetic.metabolizerStatus === 'intermediate') {\n          adjustmentFactor = 0.5;\n          alerts.push({\n            id: `genetic-tpmt-intermediate-${Date.now()}`,\n            type: 'dosing',\n            severity: 'high',\n            message: 'TPMT intermediate metabolism - dose reduction required',\n            details: `Intermediate TPMT activity requires dose reduction`,\n            recommendedAction: 'Start with 50% of standard dose',\n            affectedMedication: drug.name,\n            category: 'genetic',\n            source: 'CPIC Guidelines',\n            priority: 9\n          });\n        }\n      }\n    });\n\n    return { alerts, adjustmentFactor };\n  }\n\n  private checkDrugAllergies(patient: PatientProfile, drug: Drug): DoseCalculationAlert[] {\n    const alerts: DoseCalculationAlert[] = [];\n\n    patient.allergies.forEach(allergy => {\n      const allergenLower = allergy.allergen.toLowerCase();\n      const drugNameLower = drug.name.toLowerCase();\n\n      // Direct drug name match\n      if (drugNameLower.includes(allergenLower) || allergenLower.includes(drugNameLower)) {\n        alerts.push({\n          id: `allergy-direct-${Date.now()}`,\n          type: 'allergy',\n          severity: allergy.severity === 'life-threatening' ? 'critical' : \n                   allergy.severity === 'severe' ? 'high' : 'moderate',\n          message: 'Known drug allergy detected',\n          details: `Patient has documented ${allergy.severity} allergy to ${allergy.allergen}`,\n          recommendedAction: 'DO NOT ADMINISTER - Consider alternative agent',\n          affectedMedication: drug.name,\n          category: 'general',\n          source: 'Patient Allergy History',\n          priority: 10\n        });\n      }\n\n      // Cross-sensitivity checks\n      if (allergenLower.includes('platinum') && (drugNameLower.includes('carboplatin') || drugNameLower.includes('cisplatin') || drugNameLower.includes('oxaliplatin'))) {\n        alerts.push({\n          id: `allergy-cross-platinum-${Date.now()}`,\n          type: 'allergy',\n          severity: 'high',\n          message: 'Potential platinum cross-sensitivity',\n          details: `Patient has allergy to ${allergy.allergen}, cross-sensitivity possible with ${drug.name}`,\n          recommendedAction: 'Consider premedication or alternative non-platinum regimen',\n          affectedMedication: drug.name,\n          category: 'general',\n          source: 'Cross-Sensitivity Database',\n          priority: 8\n        });\n      }\n\n      if (allergenLower.includes('sulfa') && drugNameLower.includes('sulfamethoxazole')) {\n        alerts.push({\n          id: `allergy-cross-sulfa-${Date.now()}`,\n          type: 'allergy',\n          severity: 'high',\n          message: 'Sulfa allergy cross-sensitivity',\n          details: `Patient has sulfa allergy, potential cross-reactivity with ${drug.name}`,\n          recommendedAction: 'Consider alternative antibiotic',\n          affectedMedication: drug.name,\n          category: 'general',\n          source: 'Cross-Sensitivity Database',\n          priority: 8\n        });\n      }\n    });\n\n    return alerts;\n  }\n\n  private checkLabValues(patient: PatientProfile, drug: Drug): DoseCalculationAlert[] {\n    const alerts: DoseCalculationAlert[] = [];\n    const drugName = drug.name.toLowerCase();\n\n    // Get most recent lab values\n    const getRecentLab = (labType: string) => {\n      return patient.labValues\n        .filter(lab => lab.labType.toLowerCase().includes(labType))\n        .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())[0];\n    };\n\n    // Check absolute neutrophil count for chemotherapy\n    const anc = getRecentLab('anc') || getRecentLab('neutrophil');\n    if (anc && (drugName.includes('doxorubicin') || drugName.includes('carboplatin') || drugName.includes('paclitaxel'))) {\n      if (anc.value < 1000) {\n        alerts.push({\n          id: `lab-anc-low-${Date.now()}`,\n          type: 'lab',\n          severity: 'critical',\n          message: 'Severe neutropenia - hold chemotherapy',\n          details: `ANC ${anc.value} cells/μL is below safe threshold for chemotherapy`,\n          recommendedAction: 'Hold treatment until ANC > 1000, consider growth factor support',\n          affectedMedication: drug.name,\n          category: 'hematologic',\n          source: 'NCCN Guidelines',\n          priority: 10\n        });\n      } else if (anc.value < 1500) {\n        alerts.push({\n          id: `lab-anc-borderline-${Date.now()}`,\n          type: 'lab',\n          severity: 'high',\n          message: 'Borderline neutropenia detected',\n          details: `ANC ${anc.value} cells/μL requires close monitoring`,\n          recommendedAction: 'Consider dose reduction or delay, monitor closely',\n          affectedMedication: drug.name,\n          category: 'hematologic',\n          source: 'Clinical Guidelines',\n          priority: 8\n        });\n      }\n    }\n\n    // Check platelet count\n    const platelets = getRecentLab('platelet');\n    if (platelets && platelets.value < 100) {\n      alerts.push({\n        id: `lab-platelets-low-${Date.now()}`,\n        type: 'lab',\n        severity: platelets.value < 50 ? 'critical' : 'high',\n        message: `${platelets.value < 50 ? 'Severe' : 'Moderate'} thrombocytopenia detected`,\n        details: `Platelet count ${platelets.value} × 10³/μL may contraindicate therapy`,\n        recommendedAction: platelets.value < 50 ? 'Hold treatment, consider platelet transfusion' : 'Monitor closely, consider dose reduction',\n        affectedMedication: drug.name,\n        category: 'hematologic',\n        source: 'Hematology Guidelines',\n        priority: platelets.value < 50 ? 10 : 8\n      });\n    }\n\n    // Check LVEF for cardiotoxic drugs\n    const lvef = getRecentLab('lvef') || getRecentLab('ejection fraction');\n    if (lvef && (drugName.includes('doxorubicin') || drugName.includes('trastuzumab'))) {\n      if (lvef.value < 50) {\n        alerts.push({\n          id: `lab-lvef-low-${Date.now()}`,\n          type: 'lab',\n          severity: lvef.value < 40 ? 'critical' : 'high',\n          message: 'Reduced cardiac function detected',\n          details: `LVEF ${lvef.value}% may contraindicate cardiotoxic therapy`,\n          recommendedAction: lvef.value < 40 ? 'Cardiology consultation required before treatment' : 'Close cardiac monitoring recommended',\n          affectedMedication: drug.name,\n          category: 'cardiac',\n          source: 'Cardio-Oncology Guidelines',\n          priority: 9\n        });\n      }\n    }\n\n    return alerts;\n  }\n\n  private checkContraindications(patient: PatientProfile, drug: Drug): DoseCalculationAlert[] {\n    const alerts: DoseCalculationAlert[] = [];\n    const drugName = drug.name.toLowerCase();\n\n    // Check active conditions for contraindications\n    patient.conditions.forEach(condition => {\n      const conditionName = condition.condition.toLowerCase();\n\n      if (conditionName.includes('heart failure') && drugName.includes('doxorubicin')) {\n        alerts.push({\n          id: `contraindication-hf-doxorubicin-${Date.now()}`,\n          type: 'contraindication',\n          severity: 'critical',\n          message: 'Doxorubicin contraindicated in heart failure',\n          details: `Active heart failure is a contraindication to doxorubicin therapy`,\n          recommendedAction: 'Consider alternative anthracycline-free regimen',\n          affectedMedication: drug.name,\n          category: 'cardiac',\n          source: 'FDA Drug Label',\n          priority: 10\n        });\n      }\n\n      if (conditionName.includes('renal failure') && drugName.includes('cisplatin')) {\n        alerts.push({\n          id: `contraindication-rf-cisplatin-${Date.now()}`,\n          type: 'contraindication',\n          severity: 'critical',\n          message: 'Cisplatin contraindicated in renal failure',\n          details: `Renal failure is a contraindication to cisplatin therapy`,\n          recommendedAction: 'Consider carboplatin or alternative regimen',\n          affectedMedication: drug.name,\n          category: 'renal',\n          source: 'FDA Drug Label',\n          priority: 10\n        });\n      }\n\n      if (conditionName.includes('hearing loss') && drugName.includes('cisplatin')) {\n        alerts.push({\n          id: `contraindication-hearing-cisplatin-${Date.now()}`,\n          type: 'contraindication',\n          severity: 'high',\n          message: 'Cisplatin ototoxicity risk in hearing impairment',\n          details: `Pre-existing hearing loss increases ototoxicity risk with cisplatin`,\n          recommendedAction: 'Consider carboplatin, baseline audiometry recommended',\n          affectedMedication: drug.name,\n          category: 'general',\n          source: 'Clinical Guidelines',\n          priority: 8\n        });\n      }\n\n      if (conditionName.includes('neuropathy') && drugName.includes('paclitaxel')) {\n        alerts.push({\n          id: `contraindication-neuropathy-paclitaxel-${Date.now()}`,\n          type: 'contraindication',\n          severity: 'high',\n          message: 'Paclitaxel neurotoxicity risk in existing neuropathy',\n          details: `Pre-existing neuropathy may be exacerbated by paclitaxel`,\n          recommendedAction: 'Consider alternative taxane or non-taxane regimen',\n          affectedMedication: drug.name,\n          category: 'general',\n          source: 'Neurotoxicity Guidelines',\n          priority: 8\n        });\n      }\n    });\n\n    return alerts;\n  }\n\n  private calculateSafetyScore(alerts: DoseCalculationAlert[]): number {\n    let score = 100;\n\n    alerts.forEach(alert => {\n      switch (alert.severity) {\n        case 'critical':\n          score -= 30;\n          break;\n        case 'high':\n          score -= 20;\n          break;\n        case 'moderate':\n          score -= 10;\n          break;\n        case 'low':\n          score -= 5;\n          break;\n      }\n    });\n\n    return Math.max(0, score); // Ensure score doesn't go below 0\n  }\n\n  /**\n   * Get clinical monitoring recommendations based on drug and patient factors\n   */\n  public getMonitoringRecommendations(patient: PatientProfile, drug: Drug): Array<{\n    parameter: string;\n    frequency: string;\n    rationale: string;\n    urgency: 'routine' | 'urgent' | 'critical';\n  }> {\n    const recommendations = [];\n    const drugName = drug.name.toLowerCase();\n\n    // Drug-specific monitoring\n    if (drugName.includes('doxorubicin')) {\n      recommendations.push({\n        parameter: 'LVEF/ECHO',\n        frequency: 'Before treatment, after 200-300 mg/m², then every 100 mg/m²',\n        rationale: 'Monitor for doxorubicin-induced cardiomyopathy',\n        urgency: 'critical' as const\n      });\n    }\n\n    if (drugName.includes('cisplatin')) {\n      recommendations.push(\n        {\n          parameter: 'Creatinine/BUN',\n          frequency: 'Before each cycle',\n          rationale: 'Monitor for cisplatin nephrotoxicity',\n          urgency: 'critical' as const\n        },\n        {\n          parameter: 'Audiometry',\n          frequency: 'Baseline, then as clinically indicated',\n          rationale: 'Monitor for cisplatin ototoxicity',\n          urgency: 'routine' as const\n        },\n        {\n          parameter: 'Electrolytes (Mg, K)',\n          frequency: 'Before each cycle',\n          rationale: 'Monitor for cisplatin-induced electrolyte wasting',\n          urgency: 'urgent' as const\n        }\n      );\n    }\n\n    if (drugName.includes('paclitaxel')) {\n      recommendations.push({\n        parameter: 'Neurological exam',\n        frequency: 'Before each cycle',\n        rationale: 'Monitor for paclitaxel-induced peripheral neuropathy',\n        urgency: 'routine' as const\n      });\n    }\n\n    // General chemotherapy monitoring\n    if (drugName.includes('carboplatin') || drugName.includes('cisplatin') || drugName.includes('doxorubicin')) {\n      recommendations.push({\n        parameter: 'CBC with differential',\n        frequency: 'Before each cycle, nadir count (day 10-14)',\n        rationale: 'Monitor for myelosuppression',\n        urgency: 'critical' as const\n      });\n    }\n\n    return recommendations;\n  }\n}\n\nexport const alertService = AlertService.getInstance();","import React, { useState, useEffect } from 'react';\nimport { usePatient } from '../../context/PatientContext';\nimport { Drug } from '../../types';\nimport { alertService, DoseCalculationAlert, DoseRecommendation } from '../../services/alertService';\nimport Card from '../UI/Card';\nimport Alert from '../UI/Alert';\nimport Tooltip from '../UI/Tooltip';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport {\n  Calculator,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Info,\n  Activity,\n  Heart,\n  Droplet,\n  Eye,\n  Brain,\n  TestTube,\n  Dna,\n  Scale,\n  Clock,\n  Shield,\n  TrendingUp,\n  TrendingDown,\n  AlertCircle\n} from 'lucide-react';\n\ninterface EnhancedDoseCalculatorProps {\n  drug: Drug;\n  standardDose?: number;\n  unit?: string;\n  indication?: string;\n  onDoseCalculated?: (result: any) => void;\n}\n\nconst EnhancedDoseCalculator: React.FC<EnhancedDoseCalculatorProps> = ({\n  drug,\n  standardDose = 0,\n  unit = 'mg/m²',\n  indication,\n  onDoseCalculated\n}) => {\n  const { state } = usePatient();\n  const { currentPatient } = state;\n  \n  const [inputDose, setInputDose] = useState(standardDose);\n  const [inputUnit, setInputUnit] = useState(unit);\n  const [calculationResult, setCalculationResult] = useState<any>(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  useEffect(() => {\n    if (currentPatient && inputDose > 0) {\n      calculateDose();\n    }\n  }, [currentPatient, inputDose, inputUnit, drug]);\n\n  const calculateDose = async () => {\n    if (!currentPatient || inputDose <= 0) return;\n\n    setIsCalculating(true);\n    try {\n      // Simulate async calculation\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      const result = alertService.calculateDoseWithAlerts(\n        currentPatient,\n        drug,\n        inputDose,\n        inputUnit,\n        indication\n      );\n\n      const monitoringRecommendations = alertService.getMonitoringRecommendations(currentPatient, drug);\n\n      setCalculationResult({\n        ...result,\n        monitoringRecommendations\n      });\n\n      if (onDoseCalculated) {\n        onDoseCalculated(result);\n      }\n    } catch (error) {\n      console.error('Dose calculation failed:', error);\n    } finally {\n      setIsCalculating(false);\n    }\n  };\n\n  const getSeverityIcon = (severity: string) => {\n    switch (severity) {\n      case 'critical':\n        return <XCircle className=\"w-5 h-5 text-red-600\" />;\n      case 'high':\n        return <AlertTriangle className=\"w-5 h-5 text-red-500\" />;\n      case 'moderate':\n        return <AlertCircle className=\"w-5 h-5 text-yellow-500\" />;\n      case 'low':\n        return <Info className=\"w-5 h-5 text-blue-500\" />;\n      default:\n        return <Info className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    switch (category) {\n      case 'cardiac':\n        return <Heart className=\"w-4 h-4\" />;\n      case 'renal':\n        return <Droplet className=\"w-4 h-4\" />;\n      case 'hepatic':\n        return <Activity className=\"w-4 h-4\" />;\n      case 'hematologic':\n        return <TestTube className=\"w-4 h-4\" />;\n      case 'genetic':\n        return <Dna className=\"w-4 h-4\" />;\n      case 'weight':\n      case 'bsa':\n        return <Scale className=\"w-4 h-4\" />;\n      case 'age':\n        return <Clock className=\"w-4 h-4\" />;\n      default:\n        return <Info className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getSafetyScoreColor = (score: number) => {\n    if (score >= 80) return 'text-green-600 bg-green-100';\n    if (score >= 60) return 'text-yellow-600 bg-yellow-100';\n    if (score >= 40) return 'text-orange-600 bg-orange-100';\n    return 'text-red-600 bg-red-100';\n  };\n\n  const getSafetyScoreIcon = (score: number) => {\n    if (score >= 80) return <CheckCircle className=\"w-5 h-5 text-green-600\" />;\n    if (score >= 60) return <AlertCircle className=\"w-5 h-5 text-yellow-600\" />;\n    if (score >= 40) return <AlertTriangle className=\"w-5 h-5 text-orange-600\" />;\n    return <XCircle className=\"w-5 h-5 text-red-600\" />;\n  };\n\n  if (!currentPatient) {\n    return (\n      <Card>\n        <div className=\"text-center py-8\">\n          <Calculator className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <p className=\"text-lg font-medium text-gray-500\">No Patient Selected</p>\n          <p className=\"text-sm text-gray-400\">Select a patient to perform dose calculations</p>\n        </div>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <Card>\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center\">\n              <Calculator className=\"w-5 h-5 text-primary-600\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">Enhanced Dose Calculator</h3>\n              <p className=\"text-sm text-gray-600\">\n                AI-powered dosing with safety alerts for {drug.name}\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <Tooltip content=\"Advanced clinical decision support with real-time safety monitoring\">\n              <Shield className=\"w-5 h-5 text-primary-600\" />\n            </Tooltip>\n          </div>\n        </div>\n\n        {/* Dose Input */}\n        <div className=\"grid md:grid-cols-3 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Standard Dose\n            </label>\n            <input\n              type=\"number\"\n              value={inputDose}\n              onChange={(e) => setInputDose(Number(e.target.value))}\n              step=\"0.1\"\n              min=\"0\"\n              className=\"block w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Unit\n            </label>\n            <select\n              value={inputUnit}\n              onChange={(e) => setInputUnit(e.target.value)}\n              className=\"block w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            >\n              <option value=\"mg/m²\">mg/m²</option>\n              <option value=\"mg/kg\">mg/kg</option>\n              <option value=\"mg\">mg (flat dose)</option>\n              <option value=\"units/m²\">units/m²</option>\n              <option value=\"AUC\">AUC (Carboplatin)</option>\n            </select>\n          </div>\n\n          <div className=\"flex items-end\">\n            <button\n              onClick={calculateDose}\n              disabled={isCalculating || inputDose <= 0}\n              className=\"w-full flex items-center justify-center space-x-2 px-4 py-2 bg-primary-600 text-white text-sm font-medium rounded-md hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isCalculating ? (\n                <>\n                  <LoadingSpinner size=\"sm\" />\n                  <span>Calculating...</span>\n                </>\n              ) : (\n                <>\n                  <Calculator className=\"w-4 h-4\" />\n                  <span>Calculate Dose</span>\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n      </Card>\n\n      {/* Calculation Results */}\n      {calculationResult && (\n        <div className=\"space-y-6\">\n          {/* Safety Score and Recommended Dose */}\n          <Card>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <div className=\"flex items-center space-x-2 mb-3\">\n                  <Calculator className=\"w-5 h-5 text-gray-400\" />\n                  <h4 className=\"text-lg font-semibold text-gray-900\">Recommended Dose</h4>\n                </div>\n                \n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"text-3xl font-bold text-primary-600\">\n                    {calculationResult.recommendedDose}\n                  </div>\n                  <div className=\"text-lg text-gray-600\">{inputUnit}</div>\n                  \n                  {calculationResult.recommendedDose !== inputDose && (\n                    <div className=\"flex items-center space-x-1\">\n                      {calculationResult.recommendedDose < inputDose ? (\n                        <TrendingDown className=\"w-4 h-4 text-red-500\" />\n                      ) : (\n                        <TrendingUp className=\"w-4 h-4 text-green-500\" />\n                      )}\n                      <span className=\"text-sm text-gray-600\">\n                        {Math.round(((calculationResult.recommendedDose - inputDose) / inputDose) * 100)}%\n                      </span>\n                    </div>\n                  )}\n                </div>\n\n                {calculationResult.adjustments.length > 0 && (\n                  <div className=\"mt-3 text-sm text-gray-600\">\n                    <span className=\"font-medium\">Adjustments applied:</span>\n                    <ul className=\"mt-1 space-y-1\">\n                      {calculationResult.adjustments.map((adj: DoseRecommendation, index: number) => (\n                        <li key={index}>• {adj.adjustmentReason}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n\n              <div>\n                <div className=\"flex items-center space-x-2 mb-3\">\n                  <Shield className=\"w-5 h-5 text-gray-400\" />\n                  <h4 className=\"text-lg font-semibold text-gray-900\">Safety Score</h4>\n                  <Tooltip content=\"Overall safety assessment based on patient factors, drug interactions, and clinical alerts\">\n                    <Info className=\"w-4 h-4 text-gray-400\" />\n                  </Tooltip>\n                </div>\n                \n                <div className=\"flex items-center space-x-4\">\n                  {getSafetyScoreIcon(calculationResult.safetyScore)}\n                  <div className={`text-3xl font-bold ${getSafetyScoreColor(calculationResult.safetyScore).split(' ')[0]}`}>\n                    {calculationResult.safetyScore}\n                  </div>\n                  <div className=\"text-lg text-gray-600\">/100</div>\n                </div>\n\n                <div className={`mt-3 inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getSafetyScoreColor(calculationResult.safetyScore)}`}>\n                  {calculationResult.safetyScore >= 80 ? 'Safe to administer' :\n                   calculationResult.safetyScore >= 60 ? 'Caution recommended' :\n                   calculationResult.safetyScore >= 40 ? 'High risk - close monitoring' :\n                   'Critical risk - consider alternatives'}\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Clinical Alerts */}\n          {calculationResult.alerts.length > 0 && (\n            <Card>\n              <div className=\"flex items-center space-x-2 mb-4\">\n                <AlertTriangle className=\"w-5 h-5 text-red-500\" />\n                <h4 className=\"text-lg font-semibold text-gray-900\">\n                  Clinical Alerts ({calculationResult.alerts.length})\n                </h4>\n              </div>\n\n              <div className=\"space-y-3\">\n                {calculationResult.alerts.map((alert: DoseCalculationAlert) => (\n                  <div\n                    key={alert.id}\n                    className={`border-l-4 p-4 rounded-lg ${\n                      alert.severity === 'critical' ? 'border-red-500 bg-red-50' :\n                      alert.severity === 'high' ? 'border-orange-500 bg-orange-50' :\n                      alert.severity === 'moderate' ? 'border-yellow-500 bg-yellow-50' :\n                      'border-blue-500 bg-blue-50'\n                    }`}\n                  >\n                    <div className=\"flex items-start space-x-3\">\n                      {getSeverityIcon(alert.severity)}\n                      \n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-2 mb-1\">\n                          <h5 className=\"font-medium text-gray-900\">{alert.message}</h5>\n                          {getCategoryIcon(alert.category)}\n                          <span className=\"text-xs text-gray-500 bg-white px-2 py-0.5 rounded\">\n                            {alert.category}\n                          </span>\n                        </div>\n                        \n                        <p className=\"text-sm text-gray-700 mb-2\">{alert.details}</p>\n                        \n                        <div className=\"bg-white bg-opacity-70 rounded p-2\">\n                          <span className=\"text-xs font-medium text-gray-600\">Recommended Action:</span>\n                          <p className=\"text-sm text-gray-800 mt-1\">{alert.recommendedAction}</p>\n                        </div>\n                        \n                        <div className=\"flex items-center justify-between mt-2\">\n                          <span className=\"text-xs text-gray-500\">Source: {alert.source}</span>\n                          <span className={`text-xs px-2 py-0.5 rounded-full ${\n                            alert.severity === 'critical' ? 'bg-red-100 text-red-800' :\n                            alert.severity === 'high' ? 'bg-orange-100 text-orange-800' :\n                            alert.severity === 'moderate' ? 'bg-yellow-100 text-yellow-800' :\n                            'bg-blue-100 text-blue-800'\n                          }`}>\n                            Priority: {alert.priority}/10\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </Card>\n          )}\n\n          {/* Monitoring Recommendations */}\n          {calculationResult.monitoringRecommendations.length > 0 && (\n            <Card>\n              <div className=\"flex items-center space-x-2 mb-4\">\n                <Eye className=\"w-5 h-5 text-blue-500\" />\n                <h4 className=\"text-lg font-semibold text-gray-900\">Monitoring Recommendations</h4>\n                <Tooltip content=\"Required monitoring parameters based on drug toxicity profile and patient risk factors\">\n                  <Info className=\"w-4 h-4 text-gray-400\" />\n                </Tooltip>\n              </div>\n\n              <div className=\"overflow-hidden\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Parameter</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Frequency</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Rationale</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Urgency</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200\">\n                    {calculationResult.monitoringRecommendations.map((rec: any, index: number) => (\n                      <tr key={index}>\n                        <td className=\"px-4 py-2 text-sm font-medium text-gray-900\">{rec.parameter}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-600\">{rec.frequency}</td>\n                        <td className=\"px-4 py-2 text-sm text-gray-600\">{rec.rationale}</td>\n                        <td className=\"px-4 py-2\">\n                          <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${\n                            rec.urgency === 'critical' ? 'bg-red-100 text-red-800' :\n                            rec.urgency === 'urgent' ? 'bg-yellow-100 text-yellow-800' :\n                            'bg-blue-100 text-blue-800'\n                          }`}>\n                            {rec.urgency}\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </Card>\n          )}\n\n          {/* Advanced Details */}\n          <Card>\n            <button\n              onClick={() => setShowAdvanced(!showAdvanced)}\n              className=\"flex items-center justify-between w-full text-left\"\n            >\n              <div className=\"flex items-center space-x-2\">\n                <Brain className=\"w-5 h-5 text-gray-400\" />\n                <h4 className=\"text-lg font-semibold text-gray-900\">Advanced Calculations</h4>\n              </div>\n              <div className={`transform transition-transform ${showAdvanced ? 'rotate-180' : ''}`}>\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                </svg>\n              </div>\n            </button>\n\n            {showAdvanced && (\n              <div className=\"mt-4 space-y-4\">\n                {calculationResult.adjustments.length > 0 && (\n                  <div>\n                    <h5 className=\"font-medium text-gray-900 mb-2\">Dose Adjustments Applied:</h5>\n                    <div className=\"space-y-2\">\n                      {calculationResult.adjustments.map((adj: DoseRecommendation, index: number) => (\n                        <div key={index} className=\"bg-gray-50 rounded p-3\">\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <span className=\"font-medium text-gray-900\">{adj.adjustmentReason}</span>\n                            <span className={`text-sm px-2 py-1 rounded ${\n                              adj.confidence === 'high' ? 'bg-green-100 text-green-800' :\n                              adj.confidence === 'moderate' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-red-100 text-red-800'\n                            }`}>\n                              {adj.confidence} confidence\n                            </span>\n                          </div>\n                          <div className=\"text-sm text-gray-600\">\n                            {adj.originalDose} → {adj.recommendedDose} {adj.unit} \n                            (×{adj.adjustmentFactor.toFixed(2)})\n                          </div>\n                          {adj.references.length > 0 && (\n                            <div className=\"text-xs text-gray-500 mt-1\">\n                              References: {adj.references.join(', ')}\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                <div>\n                  <h5 className=\"font-medium text-gray-900 mb-2\">Patient Factors Considered:</h5>\n                  <div className=\"grid md:grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <span className=\"text-gray-600\">Age:</span>\n                      <span className=\"ml-2 font-medium\">\n                        {Math.floor((new Date().getTime() - new Date(currentPatient.demographics.dateOfBirth).getTime()) / (365.25 * 24 * 60 * 60 * 1000))} years\n                      </span>\n                    </div>\n                    {currentPatient.demographics.weightKg && (\n                      <div>\n                        <span className=\"text-gray-600\">Weight:</span>\n                        <span className=\"ml-2 font-medium\">{currentPatient.demographics.weightKg} kg</span>\n                      </div>\n                    )}\n                    {currentPatient.demographics.heightCm && (\n                      <div>\n                        <span className=\"text-gray-600\">Height:</span>\n                        <span className=\"ml-2 font-medium\">{currentPatient.demographics.heightCm} cm</span>\n                      </div>\n                    )}\n                    <div>\n                      <span className=\"text-gray-600\">Allergies:</span>\n                      <span className=\"ml-2 font-medium\">{currentPatient.allergies.length}</span>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Active Medications:</span>\n                      <span className=\"ml-2 font-medium\">{currentPatient.medications.filter(m => m.isActive).length}</span>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Genetic Variants:</span>\n                      <span className=\"ml-2 font-medium\">{currentPatient.genetics.length}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </Card>\n        </div>\n      )}\n\n      {/* No calculation performed yet */}\n      {!calculationResult && !isCalculating && (\n        <Card>\n          <div className=\"text-center py-12\">\n            <Calculator className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <p className=\"text-lg font-medium text-gray-500\">Enter dose and calculate</p>\n            <p className=\"text-sm text-gray-400\">\n              Advanced dose calculation with safety alerts will appear here\n            </p>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedDoseCalculator;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { apiBaseUrl } from '../utils/env';\nimport Card from '../components/UI/Card';\nimport Alert from '../components/UI/Alert';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport Tooltip from '../components/UI/Tooltip';\nimport EnhancedDoseCalculator from '../components/Dosing/EnhancedDoseCalculator';\nimport { Search, Download, FileText, Calculator, Copy, Check, AlertTriangle, Info, Filter, Shield } from 'lucide-react';\n\ntype Regimen = {\n  id: string;\n  name: string;\n  indication: string;\n  cycleLengthDays?: number;\n  components?: { name: string; dose: string }[];\n  pretreatment?: string[];\n  monitoring?: string[];\n  notes?: string[];\n};\n\nconst Regimens: React.FC = () => {\n  const [list, setList] = useState<Regimen[]>([]);\n  const [selected, setSelected] = useState<Regimen | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [detailsLoading, setDetailsLoading] = useState(false);\n  const [dosingLoading, setDosingLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterIndication, setFilterIndication] = useState('');\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [labs, setLabs] = useState<{ ANC?: number; platelets?: number; CrCl?: number; LVEF?: number }>({});\n  const [patient, setPatient] = useState<{ heightCm?: number; weightKg?: number; ageYears?: number; sex?: string; serumCreatinineMgDl?: number }>({});\n  const [calculators, setCalculators] = useState<{ BSA?: number | null; CrCl?: number | null } | null>(null);\n  const [phenotypes, setPhenotypes] = useState<{ [gene: string]: string }>({});\n  const [dosingRecs, setDosingRecs] = useState<string[] | null>(null);\n  const [warnings, setWarnings] = useState<string[] | null>(null);\n  const [calcDoses, setCalcDoses] = useState<{ component: string; dose: string; calculatedMg?: number }[] | null>(null);\n  const [rounding, setRounding] = useState<string>('5');\n  const [validationErrors, setValidationErrors] = useState<Record<string, string>>({});\n  const [showEnhancedCalculator, setShowEnhancedCalculator] = useState(false);\n  const [selectedDrugForCalculator, setSelectedDrugForCalculator] = useState<{ name: string; dose: string } | null>(null);\n\n  // Auto-hide success messages\n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => setSuccessMessage(null), 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const base = apiBaseUrl();\n        const resp = await fetch(`${base}/regimens`);\n        if (!resp.ok) throw new Error(`HTTP ${resp.status}: ${resp.statusText}`);\n        const data = await resp.json();\n        setList(data.regimens || []);\n      } catch (e) {\n        setError(e instanceof Error ? e.message : 'Failed to load regimens');\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    try {\n      const saved = localStorage.getItem('pgxPhenotypes');\n      if (saved) setPhenotypes(JSON.parse(saved));\n    } catch {}\n  }, []);\n\n  const loadDetails = async (id: string) => {\n    setDetailsLoading(true);\n    setError(null);\n    try {\n      const base = apiBaseUrl();\n      const resp = await fetch(`${base}/regimens/${id}`);\n      if (!resp.ok) throw new Error(`HTTP ${resp.status}: ${resp.statusText}`);\n      const data = await resp.json();\n      setSelected(data);\n      // Clear previous dosing calculations when selecting new regimen\n      setDosingRecs(null);\n      setWarnings(null);\n      setCalcDoses(null);\n      setCalculators(null);\n    } catch (e) {\n      setError(e instanceof Error ? e.message : 'Failed to load regimen details');\n    } finally {\n      setDetailsLoading(false);\n    }\n  };\n\n  const apiBase = useMemo(() => apiBaseUrl(), []);\n\n  const downloadPdf = (id: string) => {\n    try {\n      const url = `${apiBase}/export/regimen/${encodeURIComponent(id)}/pdf`;\n      window.open(url, '_blank');\n      setSuccessMessage('PDF download initiated');\n    } catch (e) {\n      setError('Failed to initiate PDF download');\n    }\n  };\n\n  const copyDoses = async () => {\n    if (!Array.isArray(calcDoses) || !selected) return;\n    const lines = [\n      `Regimen: ${selected.name}`,\n      calculators?.BSA ? `BSA: ${calculators.BSA.toFixed(2)} m²` : '',\n      ...calcDoses.map(cd => {\n        const calc = cd.calculatedMg !== undefined ? `${cd.calculatedMg} mg` : '-';\n        const round = (cd as any).roundedMg !== undefined ? `${(cd as any).roundedMg} mg` : '-';\n        return `${cd.component}: ${cd.dose} | Calculated: ${calc} | Rounded: ${round}`;\n      })\n    ].filter(Boolean).join('\\n');\n    try {\n      await navigator.clipboard.writeText(lines);\n      setSuccessMessage('Dose calculations copied to clipboard');\n    } catch (e) {\n      setError('Failed to copy to clipboard');\n    }\n  };\n\n  const validateInputs = () => {\n    const errors: Record<string, string> = {};\n    \n    // Validate patient data for BSA calculation\n    if (patient.heightCm && (patient.heightCm < 100 || patient.heightCm > 250)) {\n      errors.height = 'Height must be between 100-250 cm';\n    }\n    if (patient.weightKg && (patient.weightKg < 20 || patient.weightKg > 300)) {\n      errors.weight = 'Weight must be between 20-300 kg';\n    }\n    if (patient.ageYears && (patient.ageYears < 0 || patient.ageYears > 120)) {\n      errors.age = 'Age must be between 0-120 years';\n    }\n    if (patient.serumCreatinineMgDl && (patient.serumCreatinineMgDl < 0.1 || patient.serumCreatinineMgDl > 20)) {\n      errors.creatinine = 'Serum creatinine must be between 0.1-20 mg/dL';\n    }\n\n    // Validate lab values\n    if (labs.ANC && (labs.ANC < 0 || labs.ANC > 50000)) {\n      errors.anc = 'ANC must be between 0-50,000 /µL';\n    }\n    if (labs.platelets && (labs.platelets < 0 || labs.platelets > 2000000)) {\n      errors.platelets = 'Platelets must be between 0-2,000,000 /µL';\n    }\n    if (labs.CrCl && (labs.CrCl < 0 || labs.CrCl > 300)) {\n      errors.creatinine_clearance = 'CrCl must be between 0-300 mL/min';\n    }\n    if (labs.LVEF && (labs.LVEF < 0 || labs.LVEF > 100)) {\n      errors.lvef = 'LVEF must be between 0-100%';\n    }\n\n    setValidationErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const adjustDosing = async () => {\n    if (!selected) return;\n    \n    if (!validateInputs()) {\n      setError('Please correct the validation errors before proceeding');\n      return;\n    }\n\n    setDosingLoading(true);\n    setError(null);\n    \n    try {\n      const resp = await fetch(`${apiBase}/dosing/adjust`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          regimenId: selected.id, \n          labs, \n          phenotypes, \n          patient, \n          rounding: parseInt(rounding, 10) \n        })\n      });\n      \n      if (!resp.ok) {\n        throw new Error(`HTTP ${resp.status}: ${resp.statusText}`);\n      }\n      \n      const data = await resp.json();\n      setDosingRecs(data.recommendations || []);\n      setWarnings(data.warnings || []);\n      setCalcDoses(data.calculatedDoses || null);\n      setCalculators(data.calculators || null);\n      setSuccessMessage('Dosing calculations completed successfully');\n    } catch (e) {\n      setError(e instanceof Error ? e.message : 'Failed to adjust dosing');\n    } finally {\n      setDosingLoading(false);\n    }\n  };\n\n  // Filter regimens based on search and indication\n  const filteredRegimens = useMemo(() => {\n    return list.filter(regimen => {\n      const matchesSearch = regimen.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                           regimen.indication.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesIndication = !filterIndication || regimen.indication.toLowerCase().includes(filterIndication.toLowerCase());\n      return matchesSearch && matchesIndication;\n    });\n  }, [list, searchQuery, filterIndication]);\n\n  // Get unique indications for filter dropdown\n  const uniqueIndications = useMemo(() => {\n    const indications = Array.from(new Set(list.map(r => r.indication)));\n    return indications.sort();\n  }, [list]);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">Regimen Templates</h1>\n        <div className=\"flex items-center space-x-2\">\n          <Calculator className=\"w-6 h-6 text-blue-600\" />\n          <span className=\"text-sm text-gray-600\">Production Ready</span>\n        </div>\n      </div>\n      \n      {error && <Alert type=\"error\" title=\"Error\">{error}</Alert>}\n      {successMessage && <Alert type=\"success\" title=\"Success\">{successMessage}</Alert>}\n      \n      <div className=\"grid md:grid-cols-3 gap-6\">\n        <Card>\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-lg font-semibold\">Regimens ({filteredRegimens.length})</h2>\n            <Tooltip content=\"Browse and select oncology treatment regimens for dose calculations\">\n              <Info className=\"w-4 h-4 text-gray-400\" />\n            </Tooltip>\n          </div>\n          \n          {/* Search and Filter */}\n          <div className=\"space-y-3 mb-4\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search regimens...\"\n                className=\"w-full pl-9 pr-3 py-2 border border-gray-300 rounded-md text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n              />\n            </div>\n            <div className=\"relative\">\n              <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n              <select\n                className=\"w-full pl-9 pr-3 py-2 border border-gray-300 rounded-md text-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                value={filterIndication}\n                onChange={(e) => setFilterIndication(e.target.value)}\n              >\n                <option value=\"\">All indications</option>\n                {uniqueIndications.map(indication => (\n                  <option key={indication} value={indication}>{indication}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {loading ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <LoadingSpinner size=\"md\" />\n              <span className=\"ml-2 text-gray-600\">Loading regimens...</span>\n            </div>\n          ) : (\n            <ul className=\"divide-y max-h-96 overflow-y-auto\">\n              {filteredRegimens.map((r) => (\n                <li key={r.id} className=\"py-3 flex items-center justify-between\">\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"font-medium text-gray-900 truncate\">{r.name}</div>\n                    <div className=\"text-sm text-gray-500 truncate\">{r.indication}</div>\n                    {r.cycleLengthDays && (\n                      <div className=\"text-xs text-gray-400\">{r.cycleLengthDays} day cycle</div>\n                    )}\n                  </div>\n                  <button \n                    className=\"ml-2 px-3 py-1 text-sm text-primary-600 hover:text-primary-700 hover:bg-primary-50 rounded-md transition-colors disabled:opacity-50\"\n                    onClick={() => loadDetails(r.id)}\n                    disabled={detailsLoading}\n                  >\n                    {detailsLoading ? <LoadingSpinner size=\"sm\" /> : 'View'}\n                  </button>\n                </li>\n              ))}\n              {filteredRegimens.length === 0 && !loading && (\n                <li className=\"py-8 text-center text-gray-500\">\n                  {searchQuery || filterIndication ? 'No regimens match your search criteria' : 'No regimens available'}\n                </li>\n              )}\n            </ul>\n          )}\n        </Card>\n        <div className=\"md:col-span-2\">\n          <Card>\n            {detailsLoading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <LoadingSpinner size=\"lg\" />\n                <span className=\"ml-3 text-gray-600\">Loading regimen details...</span>\n              </div>\n            ) : !selected ? (\n              <div className=\"text-center py-12\">\n                <FileText className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n                <div className=\"text-gray-500\">Select a regimen from the list to view details and perform dose calculations.</div>\n              </div>\n            ) : (\n              <div className=\"space-y-6\">\n                <div className=\"border-b border-gray-200 pb-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-gray-900\">{selected.name}</h3>\n                      <p className=\"text-gray-600 mt-1\">Indication: {selected.indication}</p>\n                      {selected.cycleLengthDays && (\n                        <p className=\"text-sm text-gray-500 mt-1\">Cycle length: {selected.cycleLengthDays} days</p>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className=\"space-y-3\">\n                    <div className=\"flex flex-wrap gap-3\">\n                      <Tooltip content=\"Download basic regimen protocol as PDF\">\n                        <button \n                          onClick={() => downloadPdf(selected.id)} \n                          className=\"inline-flex items-center px-4 py-2 bg-gray-800 text-white text-sm font-medium rounded-md hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-500 transition-colors\"\n                        >\n                          <Download className=\"w-4 h-4 mr-2\" />\n                          Download PDF\n                        </button>\n                      </Tooltip>\n                      \n                      <Tooltip content=\"Generate comprehensive electronic Prior Authorization package with patient data, dose calculations, clinical justification, and safety monitoring\">\n                        <button\n                          onClick={() => {\n                            // Check if we have sufficient data for ePA\n                            const hasPatientData = patient.heightCm && patient.weightKg && patient.ageYears;\n                            const hasLabData = labs.ANC || labs.platelets || labs.CrCl || labs.LVEF;\n                            \n                            if (!hasPatientData && !hasLabData) {\n                              setError('ePA package requires patient parameters (height, weight, age) and/or lab values. Please enter data and run dose calculations first.');\n                              return;\n                            }\n\n                            // Create comprehensive ePA package data\n                            const epaData = {\n                              regimenId: selected.id,\n                              regimenName: selected.name,\n                              indication: selected.indication,\n                              timestamp: new Date().toISOString(),\n                              patient: {\n                                heightCm: patient.heightCm,\n                                weightKg: patient.weightKg,\n                                ageYears: patient.ageYears,\n                                sex: patient.sex,\n                                serumCreatinineMgDl: patient.serumCreatinineMgDl\n                              },\n                              labs: {\n                                ANC: labs.ANC,\n                                platelets: labs.platelets,\n                                CrCl: labs.CrCl,\n                                LVEF: labs.LVEF\n                              },\n                              pharmacogenomics: phenotypes,\n                              calculations: calculators,\n                              dosingRecommendations: dosingRecs,\n                              clinicalWarnings: warnings,\n                              calculatedDoses: calcDoses,\n                              roundingPrecision: rounding\n                            };\n\n                            // Generate comprehensive ePA package URL\n                            const params = new URLSearchParams();\n                            params.set('data', JSON.stringify(epaData));\n                            params.set('format', 'comprehensive');\n                            params.set('include', 'justification,calculations,safety');\n                            \n                            const url = `${apiBase}/export/epa-package?${params.toString()}`;\n                            window.open(url, \"_blank\");\n                            setSuccessMessage('Comprehensive ePA package with clinical justification generated');\n                          }}\n                          disabled={!selected}\n                          className=\"inline-flex items-center px-4 py-2 bg-purple-600 text-white text-sm font-medium rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                        >\n                          <FileText className=\"w-4 h-4 mr-2\" />\n                          Generate ePA Pack\n                        </button>\n                      </Tooltip>\n                    </div>\n                    \n                    {/* ePA Data Status Indicator */}\n                    {(() => {\n                      const hasPatientData = patient.heightCm && patient.weightKg && patient.ageYears;\n                      const hasLabData = labs.ANC || labs.platelets || labs.CrCl || labs.LVEF;\n                      const hasCalculations = calculators && calcDoses;\n                      \n                      if (hasPatientData || hasLabData || hasCalculations) {\n                        return (\n                          <div className=\"flex items-center space-x-2 text-xs\">\n                            <div className=\"flex items-center space-x-1 text-green-700\">\n                              <Check className=\"w-3 h-3\" />\n                              <span>ePA data available:</span>\n                            </div>\n                            <div className=\"flex flex-wrap gap-2\">\n                              {hasPatientData && (\n                                <span className=\"px-2 py-0.5 bg-green-100 text-green-700 rounded text-xs\">Patient data</span>\n                              )}\n                              {hasLabData && (\n                                <span className=\"px-2 py-0.5 bg-blue-100 text-blue-700 rounded text-xs\">Lab values</span>\n                              )}\n                              {hasCalculations && (\n                                <span className=\"px-2 py-0.5 bg-purple-100 text-purple-700 rounded text-xs\">Dose calculations</span>\n                              )}\n                              {Object.keys(phenotypes || {}).length > 0 && (\n                                <span className=\"px-2 py-0.5 bg-indigo-100 text-indigo-700 rounded text-xs\">PGx data</span>\n                              )}\n                            </div>\n                          </div>\n                        );\n                      } else {\n                        return (\n                          <div className=\"flex items-center space-x-2 text-xs text-amber-700\">\n                            <AlertTriangle className=\"w-3 h-3\" />\n                            <span>Add patient data and lab values to generate comprehensive ePA package</span>\n                          </div>\n                        );\n                      }\n                    })()}\n                  </div>\n                </div>\n                {Object.keys(phenotypes || {}).length > 0 && (\n                  <div className=\"text-xs text-green-700 bg-green-50 inline-block px-2 py-1 rounded\">Using saved PGx phenotypes</div>\n                )}\n                {selected.components && (\n                  <div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"font-medium\">Components</span>\n                      <Tooltip content=\"Active medications and their standard doses in this regimen. Actual doses may be adjusted based on patient parameters and lab values.\">\n                        <Info className=\"w-3 h-3 text-gray-400\" />\n                      </Tooltip>\n                    </div>\n                    <ul className=\"list-disc ml-6 text-sm text-gray-700\">\n                      {selected.components.map((c, idx) => (\n                        <li key={idx}>{c.name}: {c.dose}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                {selected.pretreatment && (\n                  <div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"font-medium\">Pre-treatment</span>\n                      <Tooltip content=\"Medications that must be given before chemotherapy to prevent adverse reactions (e.g., antihistamines, steroids, antiemetics).\">\n                        <Info className=\"w-3 h-3 text-gray-400\" />\n                      </Tooltip>\n                    </div>\n                    <ul className=\"list-disc ml-6 text-sm text-gray-700\">\n                      {selected.pretreatment.map((p, idx) => <li key={idx}>{p}</li>)}\n                    </ul>\n                  </div>\n                )}\n                {selected.monitoring && (\n                  <div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"font-medium\">Monitoring</span>\n                      <Tooltip content=\"Essential lab tests and clinical assessments required during treatment to monitor for toxicity and efficacy.\">\n                        <Info className=\"w-3 h-3 text-gray-400\" />\n                      </Tooltip>\n                    </div>\n                    <ul className=\"list-disc ml-6 text-sm text-gray-700\">\n                      {selected.monitoring.map((m, idx) => <li key={idx}>{m}</li>)}\n                    </ul>\n                  </div>\n                )}\n                {selected.notes && (\n                  <div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"font-medium\">Clinical Notes</span>\n                      <Tooltip content=\"Important clinical considerations, contraindications, special populations guidance, and institutional modifications.\">\n                        <Info className=\"w-3 h-3 text-gray-400\" />\n                      </Tooltip>\n                    </div>\n                    <ul className=\"list-disc ml-6 text-sm text-gray-700\">\n                      {selected.notes.map((n, idx) => <li key={idx}>{n}</li>)}\n                    </ul>\n                  </div>\n                )}\n\n                {/* Dosing calculator */}\n                <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Calculator className=\"w-5 h-5 text-blue-600\" />\n                      <h4 className=\"font-medium text-blue-900\">Dosing Calculator</h4>\n                    </div>\n                    <Tooltip content=\"Enter patient parameters and lab values for personalized dose calculations\">\n                      <Info className=\"w-4 h-4 text-blue-600\" />\n                    </Tooltip>\n                  </div>\n                  \n                  <div className=\"space-y-4\">\n                    <div>\n                      <h5 className=\"text-sm font-medium text-gray-700 mb-2\">Laboratory Values</h5>\n                      <div className=\"grid md:grid-cols-4 gap-3 text-sm\">\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">\n                            ANC (/µL)\n                            <Tooltip content=\"Absolute Neutrophil Count - used for myelotoxicity monitoring\">\n                              <Info className=\"inline w-3 h-3 ml-1 text-gray-400\" />\n                            </Tooltip>\n                          </label>\n                          <input \n                            type=\"number\" \n                            className={`w-full border rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${validationErrors.anc ? 'border-red-500' : 'border-gray-300'}`}\n                            value={labs.ANC ?? ''} \n                            onChange={e => setLabs({ ...labs, ANC: e.target.value ? Number(e.target.value) : undefined })} \n                            placeholder=\"e.g., 1500\"\n                          />\n                          {validationErrors.anc && <p className=\"text-xs text-red-600 mt-1\">{validationErrors.anc}</p>}\n                        </div>\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">\n                            Platelets (/µL)\n                            <Tooltip content=\"Platelet count - important for bleeding risk assessment\">\n                              <Info className=\"inline w-3 h-3 ml-1 text-gray-400\" />\n                            </Tooltip>\n                          </label>\n                          <input \n                            type=\"number\" \n                            className={`w-full border rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${validationErrors.platelets ? 'border-red-500' : 'border-gray-300'}`}\n                            value={labs.platelets ?? ''} \n                            onChange={e => setLabs({ ...labs, platelets: e.target.value ? Number(e.target.value) : undefined })} \n                            placeholder=\"e.g., 150000\"\n                          />\n                          {validationErrors.platelets && <p className=\"text-xs text-red-600 mt-1\">{validationErrors.platelets}</p>}\n                        </div>\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">\n                            CrCl (mL/min)\n                            <Tooltip content=\"Creatinine clearance - for renal dose adjustments\">\n                              <Info className=\"inline w-3 h-3 ml-1 text-gray-400\" />\n                            </Tooltip>\n                          </label>\n                          <input \n                            type=\"number\" \n                            className={`w-full border rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${validationErrors.creatinine_clearance ? 'border-red-500' : 'border-gray-300'}`}\n                            value={labs.CrCl ?? ''} \n                            onChange={e => setLabs({ ...labs, CrCl: e.target.value ? Number(e.target.value) : undefined })} \n                            placeholder=\"e.g., 90\"\n                          />\n                          {validationErrors.creatinine_clearance && <p className=\"text-xs text-red-600 mt-1\">{validationErrors.creatinine_clearance}</p>}\n                        </div>\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">\n                            LVEF (%)\n                            <Tooltip content=\"Left Ventricular Ejection Fraction - for cardiotoxicity monitoring\">\n                              <Info className=\"inline w-3 h-3 ml-1 text-gray-400\" />\n                            </Tooltip>\n                          </label>\n                          <input \n                            type=\"number\" \n                            className={`w-full border rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${validationErrors.lvef ? 'border-red-500' : 'border-gray-300'}`}\n                            value={labs.LVEF ?? ''} \n                            onChange={e => setLabs({ ...labs, LVEF: e.target.value ? Number(e.target.value) : undefined })} \n                            placeholder=\"e.g., 65\"\n                          />\n                          {validationErrors.lvef && <p className=\"text-xs text-red-600 mt-1\">{validationErrors.lvef}</p>}\n                        </div>\n                      </div>\n                    </div>\n                    <div>\n                      <h5 className=\"text-sm font-medium text-gray-700 mb-2\">Patient Parameters</h5>\n                      <div className=\"grid md:grid-cols-5 gap-3 text-sm\">\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">Height (cm)</label>\n                          <input \n                            type=\"number\" \n                            className={`w-full border rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${validationErrors.height ? 'border-red-500' : 'border-gray-300'}`}\n                            value={patient.heightCm ?? ''} \n                            onChange={e => setPatient({ ...patient, heightCm: e.target.value ? Number(e.target.value) : undefined })} \n                            placeholder=\"e.g., 170\"\n                          />\n                          {validationErrors.height && <p className=\"text-xs text-red-600 mt-1\">{validationErrors.height}</p>}\n                        </div>\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">Weight (kg)</label>\n                          <input \n                            type=\"number\" \n                            className={`w-full border rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${validationErrors.weight ? 'border-red-500' : 'border-gray-300'}`}\n                            value={patient.weightKg ?? ''} \n                            onChange={e => setPatient({ ...patient, weightKg: e.target.value ? Number(e.target.value) : undefined })} \n                            placeholder=\"e.g., 70\"\n                          />\n                          {validationErrors.weight && <p className=\"text-xs text-red-600 mt-1\">{validationErrors.weight}</p>}\n                        </div>\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">Age (years)</label>\n                          <input \n                            type=\"number\" \n                            className={`w-full border rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${validationErrors.age ? 'border-red-500' : 'border-gray-300'}`}\n                            value={patient.ageYears ?? ''} \n                            onChange={e => setPatient({ ...patient, ageYears: e.target.value ? Number(e.target.value) : undefined })} \n                            placeholder=\"e.g., 65\"\n                          />\n                          {validationErrors.age && <p className=\"text-xs text-red-600 mt-1\">{validationErrors.age}</p>}\n                        </div>\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">Sex</label>\n                          <select \n                            className=\"w-full border border-gray-300 rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" \n                            value={patient.sex || ''} \n                            onChange={e => setPatient({ ...patient, sex: e.target.value })}\n                          >\n                            <option value=\"\">Select</option>\n                            <option value=\"Male\">Male</option>\n                            <option value=\"Female\">Female</option>\n                          </select>\n                        </div>\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">Serum Creatinine (mg/dL)</label>\n                          <input \n                            type=\"number\" \n                            step=\"0.01\"\n                            className={`w-full border rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${validationErrors.creatinine ? 'border-red-500' : 'border-gray-300'}`}\n                            value={patient.serumCreatinineMgDl ?? ''} \n                            onChange={e => setPatient({ ...patient, serumCreatinineMgDl: e.target.value ? Number(e.target.value) : undefined })} \n                            placeholder=\"e.g., 1.0\"\n                          />\n                          {validationErrors.creatinine && <p className=\"text-xs text-red-600 mt-1\">{validationErrors.creatinine}</p>}\n                        </div>\n                      </div>\n                    </div>\n                    <div>\n                      <h5 className=\"text-sm font-medium text-gray-700 mb-2\">Pharmacogenomics</h5>\n                      <div className=\"grid md:grid-cols-4 gap-3 text-sm\">\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">\n                            DPYD phenotype\n                            <Tooltip content=\"DPYD metabolizer status affects 5-FU/capecitabine dosing\">\n                              <Info className=\"inline w-3 h-3 ml-1 text-gray-400\" />\n                            </Tooltip>\n                          </label>\n                          <select \n                            className=\"w-full border border-gray-300 rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" \n                            value={phenotypes.DPYD || ''} \n                            onChange={e => setPhenotypes({ ...phenotypes, DPYD: e.target.value })}\n                          >\n                            <option value=\"\">Unknown</option>\n                            <option value=\"Normal metabolizer\">Normal metabolizer</option>\n                            <option value=\"Intermediate metabolizer\">Intermediate metabolizer</option>\n                            <option value=\"Poor metabolizer\">Poor metabolizer</option>\n                          </select>\n                        </div>\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">\n                            CYP2D6 phenotype\n                            <Tooltip content=\"CYP2D6 metabolizer status affects various drug metabolisms\">\n                              <Info className=\"inline w-3 h-3 ml-1 text-gray-400\" />\n                            </Tooltip>\n                          </label>\n                          <select \n                            className=\"w-full border border-gray-300 rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" \n                            value={phenotypes.CYP2D6 || ''} \n                            onChange={e => setPhenotypes({ ...phenotypes, CYP2D6: e.target.value })}\n                          >\n                            <option value=\"\">Unknown</option>\n                            <option value=\"Normal metabolizer\">Normal metabolizer</option>\n                            <option value=\"Intermediate metabolizer\">Intermediate metabolizer</option>\n                            <option value=\"Poor metabolizer\">Poor metabolizer</option>\n                            <option value=\"Ultra-rapid metabolizer\">Ultra-rapid metabolizer</option>\n                          </select>\n                        </div>\n                        <div>\n                          <label className=\"block text-gray-700 mb-1\">Rounding Precision</label>\n                          <select \n                            className=\"w-full border border-gray-300 rounded px-2 py-1 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" \n                            value={rounding} \n                            onChange={e => setRounding(e.target.value)}\n                          >\n                            <option value=\"5\">5 mg</option>\n                            <option value=\"10\">10 mg</option>\n                            <option value=\"25\">25 mg</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between pt-4 border-t border-blue-200\">\n                      <button \n                        onClick={adjustDosing} \n                        disabled={dosingLoading}\n                        className=\"inline-flex items-center px-4 py-2 bg-primary-600 text-white text-sm font-medium rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                      >\n                        {dosingLoading ? (\n                          <>\n                            <LoadingSpinner size=\"sm\" />\n                            <span className=\"ml-2\">Calculating...</span>\n                          </>\n                        ) : (\n                          <>\n                            <Calculator className=\"w-4 h-4 mr-2\" />\n                            Apply Adjustments\n                          </>\n                        )}\n                      </button>\n                      \n                      {Object.keys(phenotypes || {}).length > 0 && (\n                        <div className=\"text-xs text-green-700 bg-green-100 px-2 py-1 rounded flex items-center\">\n                          <Check className=\"w-3 h-3 mr-1\" />\n                          Using saved PGx phenotypes\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  {calculators && (\n                    <div className=\"flex items-center space-x-2 mt-2 text-xs text-gray-600\">\n                      <span>Calculated:</span>\n                      {calculators.BSA && (\n                        <Tooltip content=\"Body Surface Area calculated using Dubois formula: BSA = 0.007184 × Weight^0.425 × Height^0.725\">\n                          <span className=\"underline cursor-help\">BSA {calculators.BSA.toFixed(2)} m²</span>\n                        </Tooltip>\n                      )}\n                      {calculators.CrCl && (\n                        <Tooltip content=\"Creatinine Clearance calculated using Cockcroft-Gault equation for renal function assessment\">\n                          <span className=\"underline cursor-help\">• CrCl {Math.round(calculators.CrCl)} mL/min</span>\n                        </Tooltip>\n                      )}\n                    </div>\n                  )}\n                  {dosingRecs && (\n                    <div className=\"mt-3 space-y-1 text-sm text-gray-700\">\n                      {dosingRecs.length === 0 && <div>No adjustments recommended.</div>}\n                      {dosingRecs.map((r, idx) => <div key={idx}>• {r}</div>)}\n                    </div>\n                  )}\n                  {warnings && warnings.length > 0 && (\n                    <div className=\"mt-3\">\n                      <Alert type=\"warning\" title=\"Clinical Warnings\">\n                        <ul className=\"list-disc ml-6 space-y-1\">\n                          {warnings.map((w, i) => (<li key={i}>{w}</li>))}\n                        </ul>\n                      </Alert>\n                    </div>\n                  )}\n                  {/* Calculated doses (from backend) */}\n                  {calculators && Array.isArray(calcDoses) && (\n                    <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Calculator className=\"w-4 h-4 text-blue-600\" />\n                          <h5 className=\"font-medium text-gray-900\">Calculated Doses</h5>\n                          {calculators.BSA && (\n                            <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded\">\n                              BSA: {calculators.BSA.toFixed(2)} m²\n                            </span>\n                          )}\n                        </div>\n                        <button \n                          onClick={copyDoses} \n                          className=\"inline-flex items-center px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 border border-gray-300 rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        >\n                          <Copy className=\"w-3 h-3 mr-1\" />\n                          Copy Doses\n                        </button>\n                      </div>\n                      \n                      <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full text-xs\">\n                          <thead>\n                            <tr className=\"text-left text-gray-600 bg-gray-50\">\n                              <th className=\"px-3 py-2 font-medium\">Component</th>\n                              <th className=\"px-3 py-2 font-medium\">Regimen Dose</th>\n                              <th className=\"px-3 py-2 font-medium\">Calculated (mg)</th>\n                              <th className=\"px-3 py-2 font-medium\">Rounded (mg)</th>\n                              <th className=\"px-3 py-2 font-medium\">Note</th>\n                              <th className=\"px-3 py-2 font-medium\">Vial Guidance</th>\n                            </tr>\n                          </thead>\n                          <tbody className=\"divide-y divide-gray-200\">\n                            {calcDoses.map((cd: any, idx) => {\n                              const vialMap: Record<string, number> = {\n                                oxaliplatin: 50,\n                                irinotecan: 100,\n                                doxorubicin: 10,\n                                leucovorin: 50,\n                                paclitaxel: 100,\n                                rituximab: 100\n                              };\n                              const key = (cd.component || '').toLowerCase();\n                              const vial = vialMap[key];\n                              let vialText = '-';\n                              if (vial && cd.roundedMg) {\n                                const vials = Math.ceil(cd.roundedMg / vial);\n                                vialText = `~${vials} × ${vial} mg`;\n                              }\n                              return (\n                                <tr key={idx} className=\"hover:bg-gray-50\">\n                                  <td className=\"px-3 py-2 font-medium text-gray-900\">{cd.component}</td>\n                                  <td className=\"px-3 py-2 text-gray-700\">{cd.dose}</td>\n                                  <td className=\"px-3 py-2 text-gray-700\">{cd.calculatedMg !== undefined ? `${cd.calculatedMg} mg` : '-'}</td>\n                                  <td className=\"px-3 py-2 font-medium text-blue-700\">{cd.roundedMg !== undefined ? `${cd.roundedMg} mg` : '-'}</td>\n                                  <td className=\"px-3 py-2 text-gray-600\">{cd.note || '-'}</td>\n                                  <td className=\"px-3 py-2 text-purple-700 font-medium\">{vialText}</td>\n                                </tr>\n                              )\n                            })}\n                          </tbody>\n                        </table>\n                      </div>\n                      \n                      <div className=\"mt-3 p-2 bg-yellow-50 border border-yellow-200 rounded text-xs text-yellow-800\">\n                        <div className=\"flex items-start space-x-2\">\n                          <AlertTriangle className=\"w-3 h-3 mt-0.5 flex-shrink-0\" />\n                          <div>\n                            <strong>Important:</strong> These are calculated suggestions only. Always verify doses, confirm vial sizes, \n                            and follow institutional protocols before finalizing orders. Rounded to nearest {rounding} mg.\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* Enhanced Calculator Section */}\n                      <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            <Shield className=\"w-4 h-4 text-blue-600\" />\n                            <div>\n                              <h6 className=\"text-sm font-medium text-blue-900\">Enhanced Safety Calculator</h6>\n                              <p className=\"text-xs text-blue-700\">AI-powered dose calculation with comprehensive safety alerts</p>\n                            </div>\n                          </div>\n                          <button\n                            onClick={() => setShowEnhancedCalculator(!showEnhancedCalculator)}\n                            className=\"px-3 py-1 bg-blue-600 text-white text-xs font-medium rounded hover:bg-blue-700 transition-colors\"\n                          >\n                            {showEnhancedCalculator ? 'Hide Calculator' : 'Open Calculator'}\n                          </button>\n                        </div>\n                        \n                        {showEnhancedCalculator && (\n                          <div className=\"mt-4\">\n                            <div className=\"mb-3\">\n                              <label className=\"block text-xs font-medium text-blue-900 mb-1\">\n                                Select Drug for Enhanced Analysis:\n                              </label>\n                              <select\n                                value={selectedDrugForCalculator ? `${selectedDrugForCalculator.name}|${selectedDrugForCalculator.dose}` : ''}\n                                onChange={(e) => {\n                                  if (e.target.value) {\n                                    const [name, dose] = e.target.value.split('|');\n                                    setSelectedDrugForCalculator({ name, dose });\n                                  } else {\n                                    setSelectedDrugForCalculator(null);\n                                  }\n                                }}\n                                className=\"block w-full border border-blue-300 rounded-md px-2 py-1 text-xs focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\n                              >\n                                <option value=\"\">Select a drug...</option>\n                                {selected?.components?.map((comp, idx) => (\n                                  <option key={idx} value={`${comp.name}|${comp.dose}`}>\n                                    {comp.name} ({comp.dose})\n                                  </option>\n                                ))}\n                              </select>\n                            </div>\n                            \n                            {selectedDrugForCalculator && (\n                              <div className=\"border border-blue-200 rounded p-3 bg-white\">\n                                <EnhancedDoseCalculator\n                                  drug={{\n                                    rxcui: 'mock-rxcui', // In real implementation, would need drug lookup\n                                    name: selectedDrugForCalculator.name,\n                                    generic_name: selectedDrugForCalculator.name\n                                  }}\n                                  standardDose={parseFloat(selectedDrugForCalculator.dose.match(/\\d+(\\.\\d+)?/)?.[0] || '0')}\n                                  unit={selectedDrugForCalculator.dose.includes('mg/m²') ? 'mg/m²' : \n                                        selectedDrugForCalculator.dose.includes('mg/kg') ? 'mg/kg' : 'mg'}\n                                  indication={selected?.indication}\n                                />\n                              </div>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Regimens;\n"],"names":["__iconNode","Droplet","createLucideIcon","Scale","AlertService","patient","drug","standardDose","unit","indication","alerts","adjustments","finalDose","totalAdjustmentFactor","age","ageAdjustment","renalAlerts","hepaticAlerts","weightAlerts","geneticAlerts","allergyAlerts","labAlerts","contraindicationAlerts","safetyScore","a","b","dateOfBirth","today","birthDate","monthDiff","drugName","dose","adjustmentFactor","recentCrCl","lab","crcl","recentAST","recentALT","recentBilirubin","ast","alt","bilirubin","heightCm","weightKg","bmi","genetic","gene","allergy","allergenLower","drugNameLower","getRecentLab","labType","anc","platelets","lvef","condition","conditionName","score","alert","recommendations","alertService","EnhancedDoseCalculator","onDoseCalculated","state","usePatient","currentPatient","inputDose","setInputDose","useState","inputUnit","setInputUnit","calculationResult","setCalculationResult","isCalculating","setIsCalculating","showAdvanced","setShowAdvanced","useEffect","calculateDose","resolve","result","monitoringRecommendations","error","getSeverityIcon","severity","jsx","XCircle","AlertTriangle","AlertCircle","Info","getCategoryIcon","category","Heart","Activity","TestTube","Dna","Clock","getSafetyScoreColor","getSafetyScoreIcon","CheckCircle","jsxs","Card","Calculator","Tooltip","Shield","e","Fragment","LoadingSpinner","TrendingDown","TrendingUp","adj","index","Eye","rec","Brain","m","Regimens","list","setList","selected","setSelected","setError","loading","setLoading","detailsLoading","setDetailsLoading","dosingLoading","setDosingLoading","searchQuery","setSearchQuery","filterIndication","setFilterIndication","successMessage","setSuccessMessage","labs","setLabs","setPatient","calculators","setCalculators","phenotypes","setPhenotypes","dosingRecs","setDosingRecs","warnings","setWarnings","calcDoses","setCalcDoses","rounding","setRounding","validationErrors","setValidationErrors","showEnhancedCalculator","setShowEnhancedCalculator","selectedDrugForCalculator","setSelectedDrugForCalculator","timer","base","apiBaseUrl","resp","data","saved","loadDetails","id","apiBase","useMemo","downloadPdf","url","copyDoses","lines","cd","calc","round","validateInputs","errors","adjustDosing","filteredRegimens","regimen","matchesSearch","matchesIndication","uniqueIndications","Alert","Search","Filter","r","Download","hasPatientData","hasLabData","epaData","params","FileText","hasCalculations","Check","c","idx","p","n","w","i","Copy","vialMap","key","vial","vialText","name","comp"],"mappings":"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","x_google_ignoreList":[0,1]}