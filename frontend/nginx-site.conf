# OncoSafeRx Site Configuration
server {
    listen 80;
    server_name oncosaferx.com www.oncosaferx.com;
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Security headers specific to the application
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.oncosaferx.com https://api-staging.oncosaferx.com wss://api.oncosaferx.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

    # Handle React Router (SPA routing)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # Static assets with long-term caching
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Precompressed static assets
        location ~* \.(js|css)$ {
            gzip_static on;
        }
    }

    # Service Worker - must not be cached
    location /sw.js {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # Manifest and PWA files
    location ~* \.(webmanifest|manifest\.json)$ {
        expires 1d;
        add_header Cache-Control "public";
    }

    # Images with medium-term caching
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
        expires 30d;
        add_header Cache-Control "public";
        access_log off;
    }

    # Fonts
    location ~* \.(woff|woff2|eot|ttf|otf)$ {
        expires 1y;
        add_header Cache-Control "public";
        access_log off;
        
        # CORS for fonts
        add_header Access-Control-Allow-Origin "*";
    }

    # API proxy (if needed)
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=api burst=20 nodelay;
        
        # Proxy to backend API
        proxy_pass https://api.oncosaferx.com;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # WebSocket support for real-time features
    location /ws/ {
        proxy_pass https://api.oncosaferx.com;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Security.txt for responsible disclosure
    location /.well-known/security.txt {
        add_header Content-Type text/plain;
        return 200 "Contact: security@oncosaferx.com\nExpires: 2025-12-31T23:59:59.000Z\nEncryption: https://oncosaferx.com/pgp-key.txt\nPreferred-Languages: en\nCanonical: https://oncosaferx.com/.well-known/security.txt\n";
    }

    # Robots.txt
    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /api/\nDisallow: /admin/\nSitemap: https://oncosaferx.com/sitemap.xml\n";
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to backup files
    location ~* \.(bak|backup|swp|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Logging
    access_log /var/log/nginx/oncosaferx.access.log main;
    error_log /var/log/nginx/oncosaferx.error.log warn;
}

# HTTPS redirect (uncomment when SSL is configured)
# server {
#     listen 80;
#     server_name oncosaferx.com www.oncosaferx.com;
#     return 301 https://$server_name$request_uri;
# }

# HTTPS configuration (uncomment and configure when SSL certificates are available)
# server {
#     listen 443 ssl http2;
#     server_name oncosaferx.com www.oncosaferx.com;
#     
#     ssl_certificate /etc/ssl/certs/oncosaferx.crt;
#     ssl_certificate_key /etc/ssl/private/oncosaferx.key;
#     
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     
#     # Include the same location blocks as above
#     include /etc/nginx/conf.d/oncosaferx-locations.conf;
# }