{"version":3,"file":"AdminLogin-XizwxtCv.js","sources":["../../src/components/Admin/AdminLogin.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Shield, Lock, User, Eye, EyeOff, AlertCircle, CheckCircle } from 'lucide-react';\nimport { useAuth } from '../../context/AuthContext';\nimport { ROLES, PERMISSIONS, useRBAC } from '../../utils/rbac';\n\ninterface AdminCredentials {\n  email: string;\n  password: string;\n}\n\nconst AdminLogin: React.FC = () => {\n  const [credentials, setCredentials] = useState<AdminCredentials>({ email: '', password: '' });\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const { actions, state } = useAuth();\n  const navigate = useNavigate();\n  const rbac = useRBAC(state.user);\n  const location = useLocation();\n  const search = new URLSearchParams(location.search);\n  const nextPath = search.get('next') || '/admin';\n\n  // Check if user is already logged in and has admin access\n  React.useEffect(() => {\n    console.log('AdminLogin useEffect - Auth state:', { isAuthenticated: state.isAuthenticated, hasUser: !!state.user });\n    if (state.isAuthenticated && state.user) {\n      const canAccess = rbac.canAccessAdminConsole();\n      console.log('AdminLogin useEffect - Can access admin console:', canAccess);\n      if (canAccess) {\n        console.log('AdminLogin useEffect - Navigating to', nextPath);\n        navigate(nextPath);\n      } else {\n        console.log('AdminLogin useEffect - User lacks admin privileges');\n        setError('Current user does not have administrator privileges. Please login with an admin account.');\n      }\n    }\n  }, [state.isAuthenticated, state.user, rbac, navigate, nextPath]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      // Use Supabase authentication\n      await actions.login(credentials);\n      // Navigation will be handled by useEffect after successful login\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (field: keyof AdminCredentials, value: string) => {\n    setCredentials(prev => ({ ...prev, [field]: value }));\n    if (error) setError('');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-red-50 via-orange-50 to-yellow-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* Header */}\n        <div>\n          <div className=\"mx-auto h-16 w-16 bg-red-100 rounded-full flex items-center justify-center\">\n            <Shield className=\"h-8 w-8 text-red-600\" />\n          </div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Admin Console Access\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Sign in to your administrator account\n          </p>\n        </div>\n\n        {/* Login Form */}\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"bg-white rounded-lg shadow-lg p-8 space-y-6\">\n            {/* Error Message */}\n            {error && (\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                <div className=\"flex items-center\">\n                  <AlertCircle className=\"h-5 w-5 text-red-400 mr-2\" />\n                  <span className=\"text-sm text-red-700\">{error}</span>\n                </div>\n              </div>\n            )}\n\n            {/* Email Field */}\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Administrator Email\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <User className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  value={credentials.email}\n                  onChange={(e) => handleInputChange('email', e.target.value)}\n                  className=\"pl-10 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 focus:outline-none focus:ring-red-500 focus:border-red-500\"\n                  placeholder=\"Enter your admin email\"\n                />\n              </div>\n            </div>\n\n            {/* Password Field */}\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Password\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Lock className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  autoComplete=\"current-password\"\n                  required\n                  value={credentials.password}\n                  onChange={(e) => handleInputChange('password', e.target.value)}\n                  className=\"pl-10 pr-10 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 focus:outline-none focus:ring-red-500 focus:border-red-500\"\n                  placeholder=\"Enter your password\"\n                />\n                <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    className=\"text-gray-400 hover:text-gray-600 focus:outline-none\"\n                  >\n                    {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Remember Me */}\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember-me\"\n                name=\"remember-me\"\n                type=\"checkbox\"\n                checked={rememberMe}\n                onChange={(e) => setRememberMe(e.target.checked)}\n                className=\"h-4 w-4 text-red-600 focus:ring-red-500 border-gray-300 rounded\"\n              />\n              <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-700\">\n                Remember me for 30 days\n              </label>\n            </div>\n\n            {/* Submit Button */}\n            <button\n              type=\"submit\"\n              disabled={loading || !credentials.email || !credentials.password}\n              className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              {loading ? (\n                <div className=\"flex items-center\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Authenticating...\n                </div>\n              ) : (\n                'Sign In to Admin Console'\n              )}\n            </button>\n          </div>\n        </form>\n\n        {/* Demo Credentials */}\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n          <h3 className=\"text-sm font-medium text-blue-900 mb-2\">Development Access</h3>\n          <div className=\"space-y-2 text-xs text-blue-800\">\n            <div>\n              <strong>Test Credentials:</strong> Use gdogra@gmail.com or demo@oncosaferx.com with any password\n            </div>\n            <div>\n              <strong>Role:</strong> Authenticated as Oncologist with admin privileges\n            </div>\n            <div>\n              <strong>Demo Mode:</strong> Use demo@oncosaferx.com / demo123 if VITE_ALLOW_DEMO_LOGIN is enabled\n            </div>\n          </div>\n        </div>\n\n        {/* Security Notice */}\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <div className=\"flex items-start\">\n            <Shield className=\"h-5 w-5 text-yellow-400 mr-2 mt-0.5\" />\n            <div className=\"text-sm text-yellow-800\">\n              <p className=\"font-medium\">Security Notice</p>\n              <p className=\"mt-1\">\n                Admin access is logged and monitored. All administrative actions are recorded for audit purposes.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"text-center\">\n          <p className=\"text-xs text-gray-500\">\n            OncoSafeRx Admin Console â€¢ Secure Healthcare Analytics Platform\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminLogin;\n"],"names":["AdminLogin","credentials","setCredentials","useState","showPassword","setShowPassword","loading","setLoading","error","setError","rememberMe","setRememberMe","actions","state","useAuth","navigate","useNavigate","rbac","useRBAC","location","useLocation","nextPath","React","canAccess","handleSubmit","e","err","handleInputChange","field","value","prev","jsxs","jsx","Shield","AlertCircle","User","Lock","EyeOff","Eye"],"mappings":"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"}