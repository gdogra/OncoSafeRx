name: Build, Push and Deploy

on:
  workflow_dispatch:
    inputs:
      image-tag:
        description: 'Image tag (default: commit SHA)'
        required: false
        default: ''
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ inputs.image-tag }},enable=${{ inputs.image-tag != '' }}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}
            VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}
            VITE_SENTRY_DSN=${{ secrets.VITE_SENTRY_DSN }}
            VITE_SENTRY_ENV=production
            VITE_SENTRY_TRACES_SAMPLE_RATE=0.1

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.30.0'

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${KUBE_CONFIG}" | base64 -d > $HOME/.kube/config
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG_B64 }}

      - name: Set image on deployment
        env:
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          IMAGE_TAG="${{ inputs.image-tag }}"
          if [ -z "$IMAGE_TAG" ]; then IMAGE_TAG=${GITHUB_SHA}; fi
          kubectl set image deployment/oncosaferx-api api=${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} --record
          kubectl rollout status deployment/oncosaferx-api --timeout=90s
