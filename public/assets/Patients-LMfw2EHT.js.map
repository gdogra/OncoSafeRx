{"version":3,"file":"Patients-LMfw2EHT.js","sources":["../../node_modules/lucide-react/dist/esm/icons/scissors.js","../../src/components/Patient/ComprehensivePatientForm.tsx","../../src/components/Patient/PatientSelector.tsx","../../src/components/Patient/MedicationManager.tsx","../../src/components/Patient/GenomicsManager.tsx","../../src/components/Patient/TreatmentTimeline.tsx","../../src/components/Patient/OutcomeTracker.tsx","../../src/components/Patient/DataExporter.tsx","../../src/components/Patient/PatientDashboard.tsx","../../src/pages/Patients.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"6\", cy: \"6\", r: \"3\", key: \"1lh9wr\" }],\n  [\"path\", { d: \"M8.12 8.12 12 12\", key: \"1alkpv\" }],\n  [\"path\", { d: \"M20 4 8.12 15.88\", key: \"xgtan2\" }],\n  [\"circle\", { cx: \"6\", cy: \"18\", r: \"3\", key: \"fqmcym\" }],\n  [\"path\", { d: \"M14.8 14.8 20 20\", key: \"ptml3r\" }]\n];\nconst Scissors = createLucideIcon(\"scissors\", __iconNode);\n\nexport { __iconNode, Scissors as default };\n//# sourceMappingURL=scissors.js.map\n","import React, { useState } from 'react';\nimport { \n  User, \n  Calendar, \n  Phone, \n  Home, \n  Shield, \n  Heart, \n  Zap, \n  Activity,\n  AlertTriangle,\n  ChevronDown,\n  ChevronUp,\n  Save,\n  X,\n  Info\n} from 'lucide-react';\nimport { PatientDemographics } from '../../types';\nimport Card from '../UI/Card';\nimport Tooltip from '../UI/Tooltip';\n\ninterface ComprehensivePatientFormProps {\n  onSubmit: (patientData: ComprehensivePatientData) => void;\n  onCancel: () => void;\n}\n\ninterface ComprehensivePatientData extends PatientDemographics {\n  // Contact Information\n  email?: string;\n  phone?: string;\n  emergencyContact?: {\n    name: string;\n    relationship: string;\n    phone: string;\n  };\n  \n  // Address\n  address?: {\n    street: string;\n    city: string;\n    state: string;\n    zipCode: string;\n    country: string;\n  };\n  \n  // Insurance & Medical Information\n  insurance?: {\n    provider: string;\n    memberId: string;\n    groupNumber?: string;\n  };\n  \n  // Clinical Information\n  primaryDiagnosis?: string;\n  stage?: string;\n  dateOfDiagnosis?: string;\n  histology?: string;\n  primarySite?: string;\n  \n  // Performance Status\n  ecogPerformanceStatus?: 0 | 1 | 2 | 3 | 4;\n  karnofskyScore?: number;\n  \n  // Vital Signs & Measurements\n  bsa?: number;\n  vitals?: {\n    bloodPressureSystolic?: number;\n    bloodPressureDiastolic?: number;\n    heartRate?: number;\n    temperature?: number;\n    respiratoryRate?: number;\n    oxygenSaturation?: number;\n  };\n  \n  // Laboratory Values\n  labValues?: {\n    hemoglobin?: number;\n    hematocrit?: number;\n    wbc?: number;\n    platelets?: number;\n    neutrophils?: number;\n    creatinine?: number;\n    bun?: number;\n    ast?: number;\n    alt?: number;\n    bilirubin?: number;\n    albumin?: number;\n  };\n  \n  // Allergies\n  allergies?: Array<{\n    allergen: string;\n    reaction: string;\n    severity: 'mild' | 'moderate' | 'severe';\n    verified: boolean;\n  }>;\n  \n  // Medical History\n  medicalHistory?: Array<{\n    condition: string;\n    yearDiagnosed?: number;\n    status: 'active' | 'resolved' | 'chronic';\n  }>;\n  \n  // Social History\n  socialHistory?: {\n    smokingStatus: 'never' | 'former' | 'current';\n    smokingPackYears?: number;\n    alcoholUse: 'none' | 'occasional' | 'moderate' | 'heavy';\n    drugUse: 'none' | 'former' | 'current';\n    occupation?: string;\n    maritalStatus?: 'single' | 'married' | 'divorced' | 'widowed';\n  };\n  \n  // Family History\n  familyHistory?: Array<{\n    relationship: string;\n    condition: string;\n    ageAtDiagnosis?: number;\n  }>;\n  \n  // Provider Information\n  primaryOncologist?: string;\n  referringPhysician?: string;\n  treatmentCenter?: string;\n}\n\nconst ComprehensivePatientForm: React.FC<ComprehensivePatientFormProps> = ({\n  onSubmit,\n  onCancel\n}) => {\n  const [activeSection, setActiveSection] = useState<string>('demographics');\n  const [formData, setFormData] = useState<ComprehensivePatientData>({\n    firstName: '',\n    lastName: '',\n    dateOfBirth: '',\n    sex: 'male' as const,\n    allergies: [],\n    medicalHistory: [],\n    familyHistory: []\n  });\n  \n  const [newAllergy, setNewAllergy] = useState({ allergen: '', reaction: '', severity: 'mild' as const });\n  const [newMedicalCondition, setNewMedicalCondition] = useState({ condition: '', yearDiagnosed: '', status: 'active' as const });\n  const [newFamilyHistory, setNewFamilyHistory] = useState({ relationship: '', condition: '', ageAtDiagnosis: '' });\n\n  const sections = [\n    { id: 'demographics', label: 'Demographics', icon: User },\n    { id: 'contact', label: 'Contact Info', icon: Phone },\n    { id: 'clinical', label: 'Clinical Info', icon: Heart },\n    { id: 'vitals', label: 'Vitals & Labs', icon: Activity },\n    { id: 'history', label: 'Medical History', icon: Shield },\n    { id: 'social', label: 'Social History', icon: Home },\n    { id: 'providers', label: 'Care Team', icon: User }\n  ];\n\n  const updateFormData = (path: string, value: any) => {\n    setFormData(prev => {\n      const keys = path.split('.');\n      const updated = { ...prev };\n      let current = updated;\n      \n      for (let i = 0; i < keys.length - 1; i++) {\n        if (!current[keys[i]]) current[keys[i]] = {};\n        current = current[keys[i]];\n      }\n      \n      current[keys[keys.length - 1]] = value;\n      return updated;\n    });\n  };\n\n  const addAllergy = () => {\n    if (newAllergy.allergen && newAllergy.reaction) {\n      const newAllergyWithId = {\n        ...newAllergy,\n        id: `allergy-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        allergenType: 'drug' as const,\n        dateReported: new Date().toISOString(),\n        verified: false\n      };\n      setFormData(prev => ({\n        ...prev,\n        allergies: [...(prev.allergies || []), newAllergyWithId]\n      }));\n      setNewAllergy({ allergen: '', reaction: '', severity: 'mild' });\n    }\n  };\n\n  const addMedicalCondition = () => {\n    if (newMedicalCondition.condition) {\n      setFormData(prev => ({\n        ...prev,\n        medicalHistory: [...(prev.medicalHistory || []), {\n          ...newMedicalCondition,\n          yearDiagnosed: newMedicalCondition.yearDiagnosed ? parseInt(newMedicalCondition.yearDiagnosed) : undefined\n        }]\n      }));\n      setNewMedicalCondition({ condition: '', yearDiagnosed: '', status: 'active' });\n    }\n  };\n\n  const addFamilyHistory = () => {\n    if (newFamilyHistory.relationship && newFamilyHistory.condition) {\n      setFormData(prev => ({\n        ...prev,\n        familyHistory: [...(prev.familyHistory || []), {\n          ...newFamilyHistory,\n          ageAtDiagnosis: newFamilyHistory.ageAtDiagnosis ? parseInt(newFamilyHistory.ageAtDiagnosis) : undefined\n        }]\n      }));\n      setNewFamilyHistory({ relationship: '', condition: '', ageAtDiagnosis: '' });\n    }\n  };\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const validateRequiredFields = () => {\n    const newErrors: Record<string, string> = {};\n\n    // Required demographic fields\n    if (!formData.firstName?.trim()) {\n      newErrors.firstName = 'First name is required';\n    }\n    if (!formData.lastName?.trim()) {\n      newErrors.lastName = 'Last name is required';\n    }\n    if (!formData.dateOfBirth) {\n      newErrors.dateOfBirth = 'Date of birth is required';\n    }\n    if (!formData.sex) {\n      newErrors.sex = 'Sex is required';\n    }\n\n    // Validate email format if provided\n    if (formData.email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Validate phone format if provided\n    if (formData.phone && !/^\\+?[\\d\\s\\-\\(\\)]{10,}$/.test(formData.phone)) {\n      newErrors.phone = 'Please enter a valid phone number';\n    }\n\n    // Validate emergency contact if any field is filled\n    if (formData.emergencyContact?.name || formData.emergencyContact?.phone || formData.emergencyContact?.relationship) {\n      if (!formData.emergencyContact?.name?.trim()) {\n        newErrors['emergencyContact.name'] = 'Emergency contact name is required';\n      }\n      if (!formData.emergencyContact?.phone?.trim()) {\n        newErrors['emergencyContact.phone'] = 'Emergency contact phone is required';\n      }\n      if (!formData.emergencyContact?.relationship?.trim()) {\n        newErrors['emergencyContact.relationship'] = 'Emergency contact relationship is required';\n      }\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (validateRequiredFields()) {\n      onSubmit(formData);\n    } else {\n      // Switch to first section with errors\n      if (errors.firstName || errors.lastName || errors.dateOfBirth || errors.sex) {\n        setActiveSection('demographics');\n      } else if (errors.email || errors.phone) {\n        setActiveSection('contact');\n      }\n    }\n  };\n\n  const renderSection = () => {\n    switch (activeSection) {\n      case 'demographics':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  First Name <span className=\"text-red-500\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.firstName}\n                  onChange={(e) => updateFormData('firstName', e.target.value)}\n                  required\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Last Name <span className=\"text-red-500\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.lastName}\n                  onChange={(e) => updateFormData('lastName', e.target.value)}\n                  required\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Date of Birth <span className=\"text-red-500\">*</span>\n                </label>\n                <input\n                  type=\"date\"\n                  value={formData.dateOfBirth}\n                  onChange={(e) => updateFormData('dateOfBirth', e.target.value)}\n                  required\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Biological Sex <span className=\"text-red-500\">*</span>\n                </label>\n                <select\n                  value={formData.sex}\n                  onChange={(e) => updateFormData('sex', e.target.value)}\n                  required\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                >\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                  <option value=\"other\">Other/Unknown</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Height (cm)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.heightCm || ''}\n                  onChange={(e) => updateFormData('heightCm', e.target.value ? parseFloat(e.target.value) : undefined)}\n                  min=\"0\"\n                  max=\"300\"\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Weight (kg)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.weightKg || ''}\n                  onChange={(e) => updateFormData('weightKg', e.target.value ? parseFloat(e.target.value) : undefined)}\n                  min=\"0\"\n                  max=\"500\"\n                  step=\"0.1\"\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  BSA (m²)\n                  <Tooltip content=\"Body Surface Area - calculated automatically if height and weight provided\">\n                    <Info className=\"w-3 h-3 ml-1 inline\" />\n                  </Tooltip>\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.bsa || ''}\n                  onChange={(e) => updateFormData('bsa', e.target.value ? parseFloat(e.target.value) : undefined)}\n                  step=\"0.01\"\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Medical Record Number (MRN)\n              </label>\n              <input\n                type=\"text\"\n                value={formData.mrn || ''}\n                onChange={(e) => updateFormData('mrn', e.target.value)}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n            </div>\n          </div>\n        );\n\n      case 'contact':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n                <input\n                  type=\"email\"\n                  value={formData.email || ''}\n                  onChange={(e) => updateFormData('email', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Phone</label>\n                <input\n                  type=\"tel\"\n                  value={formData.phone || ''}\n                  onChange={(e) => updateFormData('phone', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Address</h4>\n              <div className=\"space-y-3\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Street Address\"\n                  value={formData.address?.street || ''}\n                  onChange={(e) => updateFormData('address.street', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n                <div className=\"grid grid-cols-3 gap-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"City\"\n                    value={formData.address?.city || ''}\n                    onChange={(e) => updateFormData('address.city', e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"State\"\n                    value={formData.address?.state || ''}\n                    onChange={(e) => updateFormData('address.state', e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"ZIP Code\"\n                    value={formData.address?.zipCode || ''}\n                    onChange={(e) => updateFormData('address.zipCode', e.target.value)}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Emergency Contact</h4>\n              <div className=\"grid grid-cols-3 gap-3\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Contact Name\"\n                  value={formData.emergencyContact?.name || ''}\n                  onChange={(e) => updateFormData('emergencyContact.name', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Relationship\"\n                  value={formData.emergencyContact?.relationship || ''}\n                  onChange={(e) => updateFormData('emergencyContact.relationship', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n                <input\n                  type=\"tel\"\n                  placeholder=\"Phone Number\"\n                  value={formData.emergencyContact?.phone || ''}\n                  onChange={(e) => updateFormData('emergencyContact.phone', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Insurance Information</h4>\n              <div className=\"grid grid-cols-3 gap-3\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Insurance Provider\"\n                  value={formData.insurance?.provider || ''}\n                  onChange={(e) => updateFormData('insurance.provider', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Member ID\"\n                  value={formData.insurance?.memberId || ''}\n                  onChange={(e) => updateFormData('insurance.memberId', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Group Number\"\n                  value={formData.insurance?.groupNumber || ''}\n                  onChange={(e) => updateFormData('insurance.groupNumber', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'clinical':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Primary Diagnosis</label>\n                <input\n                  type=\"text\"\n                  value={formData.primaryDiagnosis || ''}\n                  onChange={(e) => updateFormData('primaryDiagnosis', e.target.value)}\n                  placeholder=\"e.g., Breast Cancer, Lung Adenocarcinoma\"\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Stage</label>\n                <input\n                  type=\"text\"\n                  value={formData.stage || ''}\n                  onChange={(e) => updateFormData('stage', e.target.value)}\n                  placeholder=\"e.g., Stage IIIA, T2N1M0\"\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date of Diagnosis</label>\n                <input\n                  type=\"date\"\n                  value={formData.dateOfDiagnosis || ''}\n                  onChange={(e) => updateFormData('dateOfDiagnosis', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Primary Site</label>\n                <input\n                  type=\"text\"\n                  value={formData.primarySite || ''}\n                  onChange={(e) => updateFormData('primarySite', e.target.value)}\n                  placeholder=\"e.g., Left breast, Right upper lobe\"\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Histology</label>\n              <input\n                type=\"text\"\n                value={formData.histology || ''}\n                onChange={(e) => updateFormData('histology', e.target.value)}\n                placeholder=\"e.g., Invasive ductal carcinoma, Adenocarcinoma\"\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  ECOG Performance Status\n                  <Tooltip content=\"0=Fully active, 1=Restricted strenuous activity, 2=Ambulatory >50% of time, 3=Limited self-care, 4=Completely disabled\">\n                    <Info className=\"w-3 h-3 ml-1 inline\" />\n                  </Tooltip>\n                </label>\n                <select\n                  value={formData.ecogPerformanceStatus || ''}\n                  onChange={(e) => updateFormData('ecogPerformanceStatus', e.target.value ? parseInt(e.target.value) : undefined)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                >\n                  <option value=\"\">Select ECOG Score</option>\n                  <option value=\"0\">0 - Fully active</option>\n                  <option value=\"1\">1 - Restricted strenuous activity</option>\n                  <option value=\"2\">2 - Ambulatory, self-care</option>\n                  <option value=\"3\">3 - Limited self-care</option>\n                  <option value=\"4\">4 - Completely disabled</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Karnofsky Score\n                  <Tooltip content=\"Performance status scale 0-100, where 100 = normal activity\">\n                    <Info className=\"w-3 h-3 ml-1 inline\" />\n                  </Tooltip>\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.karnofskyScore || ''}\n                  onChange={(e) => updateFormData('karnofskyScore', e.target.value ? parseInt(e.target.value) : undefined)}\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"10\"\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'vitals':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Vital Signs</h4>\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">BP Systolic</label>\n                  <input\n                    type=\"number\"\n                    value={formData.vitals?.bloodPressureSystolic || ''}\n                    onChange={(e) => updateFormData('vitals.bloodPressureSystolic', e.target.value ? parseInt(e.target.value) : undefined)}\n                    placeholder=\"mmHg\"\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">BP Diastolic</label>\n                  <input\n                    type=\"number\"\n                    value={formData.vitals?.bloodPressureDiastolic || ''}\n                    onChange={(e) => updateFormData('vitals.bloodPressureDiastolic', e.target.value ? parseInt(e.target.value) : undefined)}\n                    placeholder=\"mmHg\"\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Heart Rate</label>\n                  <input\n                    type=\"number\"\n                    value={formData.vitals?.heartRate || ''}\n                    onChange={(e) => updateFormData('vitals.heartRate', e.target.value ? parseInt(e.target.value) : undefined)}\n                    placeholder=\"bpm\"\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Laboratory Values</h4>\n              <div className=\"grid grid-cols-4 gap-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Hemoglobin</label>\n                  <input\n                    type=\"number\"\n                    value={formData.labValues?.hemoglobin || ''}\n                    onChange={(e) => updateFormData('labValues.hemoglobin', e.target.value ? parseFloat(e.target.value) : undefined)}\n                    placeholder=\"g/dL\"\n                    step=\"0.1\"\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">WBC</label>\n                  <input\n                    type=\"number\"\n                    value={formData.labValues?.wbc || ''}\n                    onChange={(e) => updateFormData('labValues.wbc', e.target.value ? parseFloat(e.target.value) : undefined)}\n                    placeholder=\"K/μL\"\n                    step=\"0.1\"\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Platelets</label>\n                  <input\n                    type=\"number\"\n                    value={formData.labValues?.platelets || ''}\n                    onChange={(e) => updateFormData('labValues.platelets', e.target.value ? parseFloat(e.target.value) : undefined)}\n                    placeholder=\"K/μL\"\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Creatinine</label>\n                  <input\n                    type=\"number\"\n                    value={formData.labValues?.creatinine || ''}\n                    onChange={(e) => updateFormData('labValues.creatinine', e.target.value ? parseFloat(e.target.value) : undefined)}\n                    placeholder=\"mg/dL\"\n                    step=\"0.01\"\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'history':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Allergies</h4>\n              <div className=\"space-y-3\">\n                <div className=\"grid grid-cols-4 gap-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Allergen\"\n                    value={newAllergy.allergen}\n                    onChange={(e) => setNewAllergy(prev => ({ ...prev, allergen: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Reaction\"\n                    value={newAllergy.reaction}\n                    onChange={(e) => setNewAllergy(prev => ({ ...prev, reaction: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                  <select\n                    value={newAllergy.severity}\n                    onChange={(e) => setNewAllergy(prev => ({ ...prev, severity: e.target.value as 'mild' | 'moderate' | 'severe' }))}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"mild\">Mild</option>\n                    <option value=\"moderate\">Moderate</option>\n                    <option value=\"severe\">Severe</option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    onClick={addAllergy}\n                    className=\"px-3 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700\"\n                  >\n                    Add\n                  </button>\n                </div>\n                {formData.allergies && formData.allergies.length > 0 && (\n                  <div className=\"space-y-2\">\n                    {formData.allergies.map((allergy, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-red-50 rounded-md\">\n                        <span>{allergy.allergen} - {allergy.reaction} ({allergy.severity})</span>\n                        <button\n                          type=\"button\"\n                          onClick={() => setFormData(prev => ({\n                            ...prev,\n                            allergies: prev.allergies?.filter((_, i) => i !== index)\n                          }))}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          <X className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Medical History</h4>\n              <div className=\"space-y-3\">\n                <div className=\"grid grid-cols-4 gap-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Condition\"\n                    value={newMedicalCondition.condition}\n                    onChange={(e) => setNewMedicalCondition(prev => ({ ...prev, condition: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                  <input\n                    type=\"number\"\n                    placeholder=\"Year Diagnosed\"\n                    value={newMedicalCondition.yearDiagnosed}\n                    onChange={(e) => setNewMedicalCondition(prev => ({ ...prev, yearDiagnosed: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                  <select\n                    value={newMedicalCondition.status}\n                    onChange={(e) => setNewMedicalCondition(prev => ({ ...prev, status: e.target.value as 'active' | 'resolved' | 'chronic' }))}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"active\">Active</option>\n                    <option value=\"chronic\">Chronic</option>\n                    <option value=\"resolved\">Resolved</option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    onClick={addMedicalCondition}\n                    className=\"px-3 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700\"\n                  >\n                    Add\n                  </button>\n                </div>\n                {formData.medicalHistory && formData.medicalHistory.length > 0 && (\n                  <div className=\"space-y-2\">\n                    {formData.medicalHistory.map((condition, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-blue-50 rounded-md\">\n                        <span>{condition.condition} {condition.yearDiagnosed && `(${condition.yearDiagnosed})`} - {condition.status}</span>\n                        <button\n                          type=\"button\"\n                          onClick={() => setFormData(prev => ({\n                            ...prev,\n                            medicalHistory: prev.medicalHistory?.filter((_, i) => i !== index)\n                          }))}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          <X className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Family History</h4>\n              <div className=\"space-y-3\">\n                <div className=\"grid grid-cols-4 gap-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Relationship\"\n                    value={newFamilyHistory.relationship}\n                    onChange={(e) => setNewFamilyHistory(prev => ({ ...prev, relationship: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Condition\"\n                    value={newFamilyHistory.condition}\n                    onChange={(e) => setNewFamilyHistory(prev => ({ ...prev, condition: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                  <input\n                    type=\"number\"\n                    placeholder=\"Age at Diagnosis\"\n                    value={newFamilyHistory.ageAtDiagnosis}\n                    onChange={(e) => setNewFamilyHistory(prev => ({ ...prev, ageAtDiagnosis: e.target.value }))}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={addFamilyHistory}\n                    className=\"px-3 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700\"\n                  >\n                    Add\n                  </button>\n                </div>\n                {formData.familyHistory && formData.familyHistory.length > 0 && (\n                  <div className=\"space-y-2\">\n                    {formData.familyHistory.map((history, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-green-50 rounded-md\">\n                        <span>{history.relationship} - {history.condition} {history.ageAtDiagnosis && `(age ${history.ageAtDiagnosis})`}</span>\n                        <button\n                          type=\"button\"\n                          onClick={() => setFormData(prev => ({\n                            ...prev,\n                            familyHistory: prev.familyHistory?.filter((_, i) => i !== index)\n                          }))}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          <X className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'social':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Smoking Status</label>\n                <select\n                  value={formData.socialHistory?.smokingStatus || ''}\n                  onChange={(e) => updateFormData('socialHistory.smokingStatus', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                >\n                  <option value=\"\">Select status</option>\n                  <option value=\"never\">Never smoker</option>\n                  <option value=\"former\">Former smoker</option>\n                  <option value=\"current\">Current smoker</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Pack Years (if applicable)</label>\n                <input\n                  type=\"number\"\n                  value={formData.socialHistory?.smokingPackYears || ''}\n                  onChange={(e) => updateFormData('socialHistory.smokingPackYears', e.target.value ? parseFloat(e.target.value) : undefined)}\n                  step=\"0.5\"\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Alcohol Use</label>\n                <select\n                  value={formData.socialHistory?.alcoholUse || ''}\n                  onChange={(e) => updateFormData('socialHistory.alcoholUse', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                >\n                  <option value=\"\">Select usage</option>\n                  <option value=\"none\">None</option>\n                  <option value=\"occasional\">Occasional</option>\n                  <option value=\"moderate\">Moderate</option>\n                  <option value=\"heavy\">Heavy</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Marital Status</label>\n                <select\n                  value={formData.socialHistory?.maritalStatus || ''}\n                  onChange={(e) => updateFormData('socialHistory.maritalStatus', e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                >\n                  <option value=\"\">Select status</option>\n                  <option value=\"single\">Single</option>\n                  <option value=\"married\">Married</option>\n                  <option value=\"divorced\">Divorced</option>\n                  <option value=\"widowed\">Widowed</option>\n                </select>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Occupation</label>\n              <input\n                type=\"text\"\n                value={formData.socialHistory?.occupation || ''}\n                onChange={(e) => updateFormData('socialHistory.occupation', e.target.value)}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n            </div>\n          </div>\n        );\n\n      case 'providers':\n        return (\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Primary Oncologist</label>\n              <input\n                type=\"text\"\n                value={formData.primaryOncologist || ''}\n                onChange={(e) => updateFormData('primaryOncologist', e.target.value)}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Referring Physician</label>\n              <input\n                type=\"text\"\n                value={formData.referringPhysician || ''}\n                onChange={(e) => updateFormData('referringPhysician', e.target.value)}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Treatment Center/Hospital</label>\n              <input\n                type=\"text\"\n                value={formData.treatmentCenter || ''}\n                onChange={(e) => updateFormData('treatmentCenter', e.target.value)}\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-white rounded-lg w-full max-w-4xl max-h-[90vh] overflow-hidden flex flex-col\">\n        {/* Header */}\n        <div className=\"p-6 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-2xl font-bold text-gray-900\">Create New Patient</h2>\n            <button\n              onClick={onCancel}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n          </div>\n          <p className=\"text-gray-600 mt-2\">Complete patient information for comprehensive clinical management</p>\n        </div>\n\n        {/* Section Navigation */}\n        <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\n          <div className=\"flex space-x-1 overflow-x-auto\">\n            {sections.map(({ id, label, icon: Icon }) => (\n              <button\n                key={id}\n                onClick={() => setActiveSection(id)}\n                className={`flex items-center space-x-2 px-4 py-2 rounded-lg whitespace-nowrap transition-colors ${\n                  activeSection === id\n                    ? 'bg-primary-600 text-white'\n                    : 'bg-white text-gray-700 hover:bg-gray-100'\n                }`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                <span className=\"text-sm font-medium\">{label}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Form Content */}\n        <form onSubmit={handleSubmit} className=\"flex-1 overflow-y-auto\">\n          <div className=\"p-6\">\n            {renderSection()}\n          </div>\n\n          {/* Footer */}\n          <div className=\"p-6 border-t border-gray-200 bg-gray-50\">\n            <div className=\"flex justify-between\">\n              <button\n                type=\"button\"\n                onClick={onCancel}\n                className=\"px-6 py-2 border border-gray-300 text-gray-700 bg-white rounded-md hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <div className=\"flex space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    const currentIndex = sections.findIndex(s => s.id === activeSection);\n                    if (currentIndex > 0) {\n                      setActiveSection(sections[currentIndex - 1].id);\n                    }\n                  }}\n                  disabled={sections.findIndex(s => s.id === activeSection) === 0}\n                  className=\"px-6 py-2 border border-gray-300 text-gray-700 bg-white rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  Previous\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    const currentIndex = sections.findIndex(s => s.id === activeSection);\n                    if (currentIndex < sections.length - 1) {\n                      setActiveSection(sections[currentIndex + 1].id);\n                    }\n                  }}\n                  disabled={sections.findIndex(s => s.id === activeSection) === sections.length - 1}\n                  className=\"px-6 py-2 border border-gray-300 text-gray-700 bg-white rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  Next\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"flex items-center space-x-2 px-6 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700\"\n                >\n                  <Save className=\"w-4 h-4\" />\n                  <span>Create Patient</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ComprehensivePatientForm;","import React, { useState } from 'react';\nimport { supabase } from '../../lib/supabase';\nimport { useToast } from '../UI/Toast';\nimport { usePatient } from '../../context/PatientContext';\nimport { PatientProfile, PatientDemographics } from '../../types';\nimport Card from '../UI/Card';\nimport Tooltip from '../UI/Tooltip';\nimport ComprehensivePatientForm from './ComprehensivePatientForm';\nimport { \n  Search, \n  User, \n  Plus, \n  Calendar, \n  FileText, \n  Clock,\n  Star,\n  Info,\n  Trash2,\n  RefreshCw\n} from 'lucide-react';\n\nconst PatientSelector: React.FC = () => {\n  const { state, actions } = usePatient();\n  const { showToast } = useToast();\n  const { currentPatient, recentPatients } = state;\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  \n\n  // Patient search: prefer server when authenticated; fallback to local recent patients\n  const searchPatients = async (query: string): Promise<PatientProfile[]> => {\n    if (!query.trim()) return [];\n    try {\n      const { data: sess } = await supabase.auth.getSession();\n      const token = sess?.session?.access_token;\n      if (token) {\n        const params = new URLSearchParams({ q: query, page: '1', pageSize: '10' });\n        const resp = await fetch(`/api/patients?${params.toString()}`, { headers: { Authorization: `Bearer ${token}` } });\n        if (resp.ok) {\n          const body = await resp.json();\n          const list = Array.isArray(body?.patients) ? body.patients : [];\n          return list.map((p: any) => p.data || p);\n        }\n      }\n    } catch {}\n    const q = query.toLowerCase();\n    return recentPatients.filter(patient => \n      `${patient.demographics.firstName} ${patient.demographics.lastName}`\n        .toLowerCase()\n        .includes(q) ||\n      (patient.demographics.mrn || '').toLowerCase().includes(q)\n    );\n  };\n\n  const [searchResults, setSearchResults] = useState<PatientProfile[]>([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [showAllPatients, setShowAllPatients] = useState(false);\n\n  const handleSearch = async (query: string) => {\n    setSearchQuery(query);\n    if (query.trim().length === 0) {\n      setSearchResults([]);\n      return;\n    }\n\n    setIsSearching(true);\n    try {\n      const results = await searchPatients(query);\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Search failed:', error);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const selectPatient = (patient: PatientProfile) => {\n    actions.setCurrentPatient(patient);\n    setSearchQuery('');\n    setSearchResults([]);\n    setShowAllPatients(false);\n  };\n\n  const handleSearchFocus = () => {\n    if (searchQuery.trim() === '') {\n      setShowAllPatients(true);\n      setSearchResults(recentPatients);\n    }\n  };\n\n  const handleSearchBlur = () => {\n    // Delay hiding to allow for clicks\n    setTimeout(() => {\n      setShowAllPatients(false);\n      if (searchQuery.trim() === '') {\n        setSearchResults([]);\n      }\n    }, 200);\n  };\n\n  const createNewPatient = async (patientData: any) => {\n    // Extract demographics and other data from comprehensive form\n    const demographics: PatientDemographics = {\n      firstName: patientData.firstName,\n      lastName: patientData.lastName,\n      dateOfBirth: patientData.dateOfBirth,\n      sex: patientData.sex,\n      mrn: patientData.mrn,\n      heightCm: patientData.heightCm,\n      weightKg: patientData.weightKg,\n    };\n\n    // Determine creator from Supabase auth if available\n    let createdBy = 'guest';\n    try {\n      const { data: sess } = await supabase.auth.getSession();\n      createdBy = sess?.session?.user?.id || createdBy;\n    } catch {}\n\n    const newPatient: PatientProfile = {\n      id: `patient-${Date.now()}`,\n      demographics,\n      allergies: patientData.allergies || [],\n      medications: [],\n      conditions: patientData.medicalConditions || [],\n      labValues: patientData.labValues ? [patientData.labValues] : [],\n      genetics: [],\n      vitals: patientData.vitals ? [patientData.vitals] : [],\n      treatmentHistory: [],\n      notes: [],\n      preferences: {},\n      lastUpdated: new Date().toISOString(),\n      createdBy,\n      isActive: true,\n    };\n\n    // Optimistically set current and then try to persist\n    actions.setCurrentPatient(newPatient);\n\n    try {\n      const { data: sess } = await supabase.auth.getSession();\n      const token = sess?.session?.access_token;\n      if (token) {\n        await fetch('/api/patients', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\n          body: JSON.stringify({ patient: newPatient })\n        });\n        showToast('success', 'Patient created');\n      }\n    } catch {\n      showToast('warning', 'Saved locally (offline)');\n    }\n    setShowCreateForm(false);\n  };\n\n  const calculateAge = (dateOfBirth: string): number => {\n    const today = new Date();\n    const birthDate = new Date(dateOfBirth);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Current Patient Display */}\n      {currentPatient && (\n        <Card className=\"bg-primary-50 border-primary-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-12 h-12 bg-primary-100 rounded-full flex items-center justify-center\">\n                <User className=\"w-6 h-6 text-primary-600\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-primary-900\">\n                  {currentPatient.demographics.firstName} {currentPatient.demographics.lastName}\n                </h3>\n                <div className=\"flex items-center space-x-3 text-sm text-primary-700\">\n                  <span>{calculateAge(currentPatient.demographics.dateOfBirth)} years old</span>\n                  <span className=\"capitalize\">{currentPatient.demographics.sex}</span>\n                  {currentPatient.demographics.mrn && (\n                    <span>MRN: {currentPatient.demographics.mrn}</span>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Tooltip content=\"Currently selected patient\">\n                <Star className=\"w-5 h-5 text-primary-600 fill-current\" />\n              </Tooltip>\n            </div>\n          </div>\n        </Card>\n      )}\n\n      {/* Patient Search */}\n      <Card>\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Search className=\"w-5 h-5 text-gray-400\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">Patient Search</h3>\n          <Tooltip \n            content=\"Search for existing patients by name or MRN, or create a new patient profile. Focus on the search field to see all available patients.\"\n            type=\"help\"\n            position=\"bottom\"\n          >\n            <Info className=\"w-4 h-4 text-gray-400 hover:text-blue-600 cursor-help transition-colors\" />\n          </Tooltip>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <div className=\"flex-1 relative\">\n            <input\n              type=\"text\"\n              value={searchQuery}\n              onChange={(e) => handleSearch(e.target.value)}\n              onFocus={handleSearchFocus}\n              onBlur={handleSearchBlur}\n              placeholder=\"Search by patient name or MRN...\"\n              className=\"block w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n            {isSearching && (\n              <div className=\"absolute right-3 top-2.5\">\n                <div className=\"w-4 h-4 border-2 border-primary-600 border-t-transparent rounded-full animate-spin\"></div>\n              </div>\n            )}\n          </div>\n          <Tooltip \n            content=\"Create a new patient profile with comprehensive clinical information\"\n            position=\"bottom\"\n          >\n            <button\n              onClick={() => setShowCreateForm(true)}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white text-sm font-medium rounded-md hover:bg-primary-700\"\n            >\n              <Plus className=\"w-4 h-4\" />\n              <span>New Patient</span>\n            </button>\n          </Tooltip>\n          <Tooltip content=\"Sync patients from server\" position=\"bottom\">\n            <button\n              onClick={() => actions.syncFromServer()}\n              className=\"flex items-center space-x-2 px-3 py-2 bg-white border text-sm font-medium rounded-md hover:bg-gray-50\"\n            >\n              <RefreshCw className=\"w-4 h-4\" />\n              <span>Sync</span>\n            </button>\n          </Tooltip>\n        </div>\n\n        {/* Search Results */}\n        {searchResults.length > 0 && (\n          <div className=\"mt-4 space-y-2\">\n            <h4 className=\"text-sm font-medium text-gray-700\">\n              {showAllPatients ? 'Available Patients:' : 'Search Results:'}\n            </h4>\n            {searchResults.map((patient) => (\n              <div\n                key={patient.id}\n                onClick={() => selectPatient(patient)}\n                className=\"p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <div className=\"font-medium text-gray-900\">\n                      {patient.demographics.firstName} {patient.demographics.lastName}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      {calculateAge(patient.demographics.dateOfBirth)} years • {patient.demographics.sex} • MRN: {patient.demographics.mrn}\n                    </div>\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    Last updated: {new Date(patient.lastUpdated).toLocaleDateString()}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {searchQuery.length >= 1 && searchResults.length === 0 && !isSearching && (\n          <div className=\"mt-4 text-sm text-gray-500\">\n            No patients found matching \"{searchQuery}\"\n          </div>\n        )}\n      </Card>\n\n      {/* Recent Patients */}\n      {recentPatients.length > 0 && (\n        <Card>\n          <div className=\"flex items-center space-x-2 mb-4\">\n            <Clock className=\"w-5 h-5 text-gray-400\" />\n            <h3 className=\"text-lg font-semibold text-gray-900\">Recent Patients</h3>\n            <Tooltip content=\"Recently accessed patient profiles for quick selection\">\n              <Info className=\"w-4 h-4 text-gray-400\" />\n            </Tooltip>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 gap-3\">\n            {recentPatients.slice(0, 6).map((patient) => (\n              <div\n                key={patient.id}\n                onClick={() => selectPatient(patient)}\n                className={`p-3 border rounded-lg cursor-pointer transition-colors ${\n                  currentPatient?.id === patient.id\n                    ? 'border-primary-300 bg-primary-50'\n                    : 'border-gray-200 hover:bg-gray-50'\n                }`}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center\">\n                    <User className=\"w-4 h-4 text-gray-600\" />\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"font-medium text-gray-900 truncate\">\n                      {patient.demographics.firstName} {patient.demographics.lastName}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      {calculateAge(patient.demographics.dateOfBirth)} years • MRN: {patient.demographics.mrn}\n                    </div>\n                  </div>\n                  <button\n                    className=\"p-1 text-gray-400 hover:text-red-600\"\n                    onClick={async (e) => {\n                      e.stopPropagation();\n                      if (!confirm('Delete this patient?')) return;\n                      const deleted = patient;\n                      actions.removePatient(patient.id);\n                      showToast('success', 'Patient deleted', 5000, {\n                        label: 'Undo',\n                        onClick: async () => {\n                          // Restore locally and attempt to persist server-side\n                          actions.setCurrentPatient(deleted);\n                          try {\n                            const { data: sess } = await supabase.auth.getSession();\n                            const token = sess?.session?.access_token;\n                            if (token) {\n                              await fetch('/api/patients', {\n                                method: 'POST',\n                                headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\n                                body: JSON.stringify({ patient: deleted })\n                              });\n                            }\n                          } catch {}\n                        }\n                      });\n                    }}\n                    title=\"Delete patient\"\n                  >\n                    <Trash2 className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n      )}\n\n      {/* Create New Patient Form */}\n      {showCreateForm && (\n        <ComprehensivePatientForm\n          onSubmit={createNewPatient}\n          onCancel={() => setShowCreateForm(false)}\n        />\n      )}\n      {/* Toasts are rendered by ToastProvider */}\n    </div>\n  );\n};\n\nexport default PatientSelector;\n","import React, { useState } from 'react';\nimport { usePatient } from '../../context/PatientContext';\nimport { PatientMedication, Drug } from '../../types';\nimport Card from '../UI/Card';\nimport Tooltip from '../UI/Tooltip';\nimport Alert from '../UI/Alert';\nimport { \n  Pill, \n  Plus, \n  Edit, \n  Trash2, \n  Clock, \n  AlertTriangle,\n  CheckCircle,\n  Calendar,\n  User,\n  Info,\n  Filter,\n  Search\n} from 'lucide-react';\n\ninterface MedicationManagerProps {\n  patientId?: string;\n}\n\nconst MedicationManager: React.FC<MedicationManagerProps> = ({ patientId }) => {\n  const { state, actions } = usePatient();\n  const { currentPatient } = state;\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingMedication, setEditingMedication] = useState<PatientMedication | null>(null);\n  const [filter, setFilter] = useState<'all' | 'active' | 'inactive'>('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [newMedication, setNewMedication] = useState<Partial<PatientMedication>>({\n    drugName: '',\n    dosage: '',\n    frequency: '',\n    route: 'Oral',\n    startDate: new Date().toISOString().split('T')[0],\n    indication: '',\n    prescribedBy: '',\n    isActive: true,\n    adherence: 'good'\n  });\n\n  if (!currentPatient) {\n    return (\n      <Card>\n        <div className=\"text-center py-8\">\n          <Pill className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <h3 className=\"text-lg font-medium text-gray-500 mb-2\">No Patient Selected</h3>\n          <p className=\"text-gray-400\">Select a patient to manage their medications</p>\n        </div>\n      </Card>\n    );\n  }\n\n  const getMedications = () => {\n    let medications = currentPatient.medications || [];\n    \n    // Filter by status\n    if (filter === 'active') {\n      medications = medications.filter(med => med.isActive);\n    } else if (filter === 'inactive') {\n      medications = medications.filter(med => !med.isActive);\n    }\n\n    // Filter by search query\n    if (searchQuery.trim()) {\n      medications = medications.filter(med => \n        med.drugName?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        med.indication?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        med.prescribedBy?.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n\n    return medications;\n  };\n\n  const handleAddMedication = () => {\n    if (!newMedication.drugName || !newMedication.dosage || !newMedication.frequency) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    const medication: any = {\n      id: `med-${Date.now()}`,\n      drugName: newMedication.drugName,\n      dosage: newMedication.dosage,\n      frequency: newMedication.frequency,\n      route: newMedication.route || 'Oral',\n      startDate: newMedication.startDate || new Date().toISOString().split('T')[0],\n      endDate: newMedication.endDate,\n      indication: newMedication.indication || '',\n      prescribedBy: newMedication.prescribedBy || '',\n      isActive: newMedication.isActive !== false,\n      adherence: newMedication.adherence || 'good',\n      sideEffects: newMedication.sideEffects || []\n    };\n\n    const updatedMedications = [...(currentPatient.medications || []), medication];\n    actions.updatePatientData({ medications: updatedMedications });\n\n    // Reset form\n    setNewMedication({\n      drugName: '',\n      dosage: '',\n      frequency: '',\n      route: 'Oral',\n      startDate: new Date().toISOString().split('T')[0],\n      indication: '',\n      prescribedBy: '',\n      isActive: true,\n      adherence: 'good'\n    });\n    setShowAddForm(false);\n  };\n\n  const handleEditMedication = (medication: any) => {\n    setEditingMedication(medication);\n    setNewMedication(medication);\n    setShowAddForm(true);\n  };\n\n  const handleUpdateMedication = () => {\n    if (!editingMedication || !newMedication.drugName || !newMedication.dosage || !newMedication.frequency) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    const updatedMedications = currentPatient.medications.map(med => \n      med.id === editingMedication.id ? { ...newMedication, id: editingMedication.id } : med\n    );\n    \n    actions.updatePatientData({ medications: updatedMedications });\n\n    // Reset form\n    setNewMedication({\n      drugName: '',\n      dosage: '',\n      frequency: '',\n      route: 'Oral',\n      startDate: new Date().toISOString().split('T')[0],\n      indication: '',\n      prescribedBy: '',\n      isActive: true,\n      adherence: 'good'\n    });\n    setEditingMedication(null);\n    setShowAddForm(false);\n  };\n\n  const handleRemoveMedication = (medicationId: string) => {\n    if (confirm('Are you sure you want to remove this medication?')) {\n      const updatedMedications = currentPatient.medications.filter(med => med.id !== medicationId);\n      actions.updatePatientData({ medications: updatedMedications });\n    }\n  };\n\n  const toggleMedicationStatus = (medicationId: string) => {\n    const updatedMedications = currentPatient.medications.map(med => \n      med.id === medicationId ? { ...med, isActive: !med.isActive, endDate: med.isActive ? new Date().toISOString().split('T')[0] : undefined } : med\n    );\n    actions.updatePatientData({ medications: updatedMedications });\n  };\n\n  const getAdherenceColor = (adherence?: string) => {\n    switch (adherence) {\n      case 'excellent': return 'bg-green-100 text-green-800';\n      case 'good': return 'bg-blue-100 text-blue-800';\n      case 'fair': return 'bg-yellow-100 text-yellow-800';\n      case 'poor': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const medications = getMedications();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <Card>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Pill className=\"w-6 h-6 text-primary-600\" />\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">Medication Management</h2>\n              <p className=\"text-sm text-gray-600\">\n                {currentPatient.demographics.firstName} {currentPatient.demographics.lastName} - Current medications and history\n              </p>\n            </div>\n          </div>\n          <button\n            onClick={() => setShowAddForm(true)}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            <span>Add Medication</span>\n          </button>\n        </div>\n      </Card>\n\n      {/* Filters and Search */}\n      <Card>\n        <div className=\"flex items-center justify-between space-x-4\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Filter className=\"w-4 h-4 text-gray-400\" />\n              <select\n                value={filter}\n                onChange={(e) => setFilter(e.target.value as 'all' | 'active' | 'inactive')}\n                className=\"border border-gray-300 rounded-md px-3 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              >\n                <option value=\"all\">All Medications</option>\n                <option value=\"active\">Active Only</option>\n                <option value=\"inactive\">Inactive Only</option>\n              </select>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Search className=\"w-4 h-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search medications...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n            </div>\n          </div>\n          <div className=\"text-sm text-gray-600\">\n            {medications.length} medication{medications.length !== 1 ? 's' : ''} found\n          </div>\n        </div>\n      </Card>\n\n      {/* Medication List */}\n      <div className=\"space-y-4\">\n        {medications.length === 0 ? (\n          <Card>\n            <div className=\"text-center py-8\">\n              <Pill className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n              <h3 className=\"text-lg font-medium text-gray-500 mb-2\">No Medications Found</h3>\n              <p className=\"text-gray-400\">\n                {searchQuery || filter !== 'all' \n                  ? 'Try adjusting your search or filter criteria'\n                  : 'Add the first medication to get started'\n                }\n              </p>\n            </div>\n          </Card>\n        ) : (\n          medications.map((medication) => (\n            <Card key={medication.id} className={`${!medication.isActive ? 'bg-gray-50 border-gray-200' : ''}`}>\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3 mb-2\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">{medication.drugName}</h3>\n                    <div className=\"flex items-center space-x-2\">\n                      {medication.isActive ? (\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                          <CheckCircle className=\"w-3 h-3 mr-1\" />\n                          Active\n                        </span>\n                      ) : (\n                        <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n                          <Clock className=\"w-3 h-3 mr-1\" />\n                          Inactive\n                        </span>\n                      )}\n                      {medication.adherence && (\n                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getAdherenceColor(medication.adherence)}`}>\n                          {medication.adherence} adherence\n                        </span>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"grid md:grid-cols-3 gap-4 text-sm\">\n                    <div>\n                      <span className=\"font-medium text-gray-700\">Dosage & Frequency:</span>\n                      <p className=\"text-gray-900\">{medication.dosage} {medication.frequency}</p>\n                    </div>\n                    <div>\n                      <span className=\"font-medium text-gray-700\">Route:</span>\n                      <p className=\"text-gray-900\">{medication.route}</p>\n                    </div>\n                    <div>\n                      <span className=\"font-medium text-gray-700\">Start Date:</span>\n                      <p className=\"text-gray-900\">{new Date(medication.startDate).toLocaleDateString()}</p>\n                    </div>\n                  </div>\n\n                  {medication.indication && (\n                    <div className=\"mt-2 text-sm\">\n                      <span className=\"font-medium text-gray-700\">Indication:</span>\n                      <p className=\"text-gray-900\">{medication.indication}</p>\n                    </div>\n                  )}\n\n                  {medication.prescribedBy && (\n                    <div className=\"mt-2 text-sm\">\n                      <span className=\"font-medium text-gray-700\">Prescribed by:</span>\n                      <p className=\"text-gray-900\">{medication.prescribedBy}</p>\n                    </div>\n                  )}\n\n                  {medication.endDate && (\n                    <div className=\"mt-2 text-sm\">\n                      <span className=\"font-medium text-gray-700\">End Date:</span>\n                      <p className=\"text-gray-900\">{new Date(medication.endDate).toLocaleDateString()}</p>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"flex items-center space-x-2 ml-4\">\n                  <Tooltip content={medication.isActive ? 'Mark as inactive' : 'Mark as active'}>\n                    <button\n                      onClick={() => toggleMedicationStatus(medication.id)}\n                      className={`p-2 rounded-lg ${\n                        medication.isActive \n                          ? 'text-green-600 hover:bg-green-50' \n                          : 'text-gray-400 hover:bg-gray-50'\n                      }`}\n                    >\n                      {medication.isActive ? <CheckCircle className=\"w-4 h-4\" /> : <Clock className=\"w-4 h-4\" />}\n                    </button>\n                  </Tooltip>\n                  <Tooltip content=\"Edit medication\">\n                    <button\n                      onClick={() => handleEditMedication(medication)}\n                      className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\n                    >\n                      <Edit className=\"w-4 h-4\" />\n                    </button>\n                  </Tooltip>\n                  <Tooltip content=\"Remove medication\">\n                    <button\n                      onClick={() => handleRemoveMedication(medication.id)}\n                      className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </button>\n                  </Tooltip>\n                </div>\n              </div>\n            </Card>\n          ))\n        )}\n      </div>\n\n      {/* Add/Edit Medication Form */}\n      {showAddForm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-2xl max-h-[90vh] overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                {editingMedication ? 'Edit Medication' : 'Add New Medication'}\n              </h3>\n            </div>\n\n            <div className=\"p-6 space-y-4 overflow-y-auto max-h-[60vh]\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Drug Name <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newMedication.drugName || ''}\n                    onChange={(e) => setNewMedication({ ...newMedication, drugName: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    placeholder=\"e.g., Tamoxifen\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Dosage <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newMedication.dosage || ''}\n                    onChange={(e) => setNewMedication({ ...newMedication, dosage: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    placeholder=\"e.g., 20 mg\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Frequency <span className=\"text-red-500\">*</span>\n                  </label>\n                  <select\n                    value={newMedication.frequency || ''}\n                    onChange={(e) => setNewMedication({ ...newMedication, frequency: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"\">Select frequency</option>\n                    <option value=\"Once daily\">Once daily</option>\n                    <option value=\"Twice daily\">Twice daily</option>\n                    <option value=\"Three times daily\">Three times daily</option>\n                    <option value=\"Four times daily\">Four times daily</option>\n                    <option value=\"Every other day\">Every other day</option>\n                    <option value=\"Weekly\">Weekly</option>\n                    <option value=\"Every 3 weeks\">Every 3 weeks</option>\n                    <option value=\"Monthly\">Monthly</option>\n                    <option value=\"As needed\">As needed</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Route</label>\n                  <select\n                    value={newMedication.route || 'Oral'}\n                    onChange={(e) => setNewMedication({ ...newMedication, route: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"Oral\">Oral</option>\n                    <option value=\"IV\">Intravenous (IV)</option>\n                    <option value=\"IM\">Intramuscular (IM)</option>\n                    <option value=\"SC\">Subcutaneous (SC)</option>\n                    <option value=\"Topical\">Topical</option>\n                    <option value=\"Inhalation\">Inhalation</option>\n                    <option value=\"Other\">Other</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Start Date</label>\n                  <input\n                    type=\"date\"\n                    value={newMedication.startDate || ''}\n                    onChange={(e) => setNewMedication({ ...newMedication, startDate: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">End Date</label>\n                  <input\n                    type=\"date\"\n                    value={newMedication.endDate || ''}\n                    onChange={(e) => setNewMedication({ ...newMedication, endDate: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Indication</label>\n                <input\n                  type=\"text\"\n                  value={newMedication.indication || ''}\n                  onChange={(e) => setNewMedication({ ...newMedication, indication: e.target.value })}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"e.g., Breast cancer adjuvant therapy\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Prescribed By</label>\n                  <input\n                    type=\"text\"\n                    value={newMedication.prescribedBy || ''}\n                    onChange={(e) => setNewMedication({ ...newMedication, prescribedBy: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    placeholder=\"e.g., Dr. Smith\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Adherence</label>\n                  <select\n                    value={newMedication.adherence || 'good'}\n                    onChange={(e) => setNewMedication({ ...newMedication, adherence: e.target.value as any })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"excellent\">Excellent</option>\n                    <option value=\"good\">Good</option>\n                    <option value=\"fair\">Fair</option>\n                    <option value=\"poor\">Poor</option>\n                  </select>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    checked={newMedication.isActive !== false}\n                    onChange={(e) => setNewMedication({ ...newMedication, isActive: e.target.checked })}\n                    className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\n                  />\n                  <span className=\"text-sm font-medium text-gray-700\">Active medication</span>\n                </label>\n              </div>\n            </div>\n\n            <div className=\"p-6 border-t border-gray-200 flex justify-between\">\n              <button\n                onClick={() => {\n                  setShowAddForm(false);\n                  setEditingMedication(null);\n                  setNewMedication({\n                    drugName: '',\n                    dosage: '',\n                    frequency: '',\n                    route: 'Oral',\n                    startDate: new Date().toISOString().split('T')[0],\n                    indication: '',\n                    prescribedBy: '',\n                    isActive: true,\n                    adherence: 'good'\n                  });\n                }}\n                className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={editingMedication ? handleUpdateMedication : handleAddMedication}\n                className=\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700\"\n              >\n                {editingMedication ? 'Update Medication' : 'Add Medication'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MedicationManager;","import React, { useState } from 'react';\nimport { usePatient } from '../../context/PatientContext';\nimport { PatientGenetics } from '../../types';\nimport Card from '../UI/Card';\nimport Tooltip from '../UI/Tooltip';\nimport Alert from '../UI/Alert';\nimport { \n  Dna, \n  Plus, \n  Edit, \n  Trash2, \n  TestTube,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  Info,\n  FileText,\n  Search,\n  Filter\n} from 'lucide-react';\n\ninterface GenomicsManagerProps {\n  patientId?: string;\n}\n\nconst GenomicsManager: React.FC<GenomicsManagerProps> = ({ patientId }) => {\n  const { state, actions } = usePatient();\n  const { currentPatient } = state;\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingGenetic, setEditingGenetic] = useState<PatientGenetics | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filter, setFilter] = useState<'all' | 'pharmacogenomic' | 'oncologic'>('all');\n\n  const [newGenetic, setNewGenetic] = useState<Partial<PatientGenetics>>({\n    geneSymbol: '',\n    alleles: ['', ''],\n    phenotype: '',\n    metabolizerStatus: 'normal',\n    testDate: new Date().toISOString().split('T')[0],\n    testMethod: '',\n    clinicalSignificance: '',\n    notes: ''\n  });\n\n  if (!currentPatient) {\n    return (\n      <Card>\n        <div className=\"text-center py-8\">\n          <Dna className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <h3 className=\"text-lg font-medium text-gray-500 mb-2\">No Patient Selected</h3>\n          <p className=\"text-gray-400\">Select a patient to manage their genomic data</p>\n        </div>\n      </Card>\n    );\n  };\n\n  const getGeneticData = () => {\n    let genetics = currentPatient.genetics || [];\n    \n    // Filter by type (this is a simple categorization based on common pharmacogenes)\n    const pharmacogenes = ['CYP2D6', 'CYP2C19', 'CYP2C9', 'CYP3A4', 'TPMT', 'UGT1A1', 'DPYD', 'NUDT15'];\n    \n    if (filter === 'pharmacogenomic') {\n      genetics = genetics.filter(g => pharmacogenes.includes(g.geneSymbol.toUpperCase()));\n    } else if (filter === 'oncologic') {\n      genetics = genetics.filter(g => !pharmacogenes.includes(g.geneSymbol.toUpperCase()));\n    }\n\n    // Filter by search query\n    if (searchQuery.trim()) {\n      genetics = genetics.filter(g => \n        g.geneSymbol.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        g.phenotype.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        g.clinicalSignificance?.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n\n    return genetics;\n  };\n\n  const handleAddGenetic = () => {\n    if (!newGenetic.geneSymbol || !newGenetic.phenotype) {\n      alert('Please fill in gene symbol and phenotype');\n      return;\n    }\n\n    const genetic: PatientGenetics = {\n      geneSymbol: newGenetic.geneSymbol!,\n      alleles: newGenetic.alleles!.filter(a => a.trim() !== ''),\n      phenotype: newGenetic.phenotype!,\n      metabolizerStatus: newGenetic.metabolizerStatus,\n      testDate: newGenetic.testDate || new Date().toISOString().split('T')[0],\n      testMethod: newGenetic.testMethod,\n      clinicalSignificance: newGenetic.clinicalSignificance,\n      notes: newGenetic.notes\n    };\n\n    const updatedGenetics = [...(currentPatient.genetics || []), genetic];\n    actions.updatePatientData({ genetics: updatedGenetics });\n\n    // Reset form\n    setNewGenetic({\n      geneSymbol: '',\n      alleles: ['', ''],\n      phenotype: '',\n      metabolizerStatus: 'normal',\n      testDate: new Date().toISOString().split('T')[0],\n      testMethod: '',\n      clinicalSignificance: '',\n      notes: ''\n    });\n    setShowAddForm(false);\n  };\n\n  const handleEditGenetic = (genetic: PatientGenetics) => {\n    setEditingGenetic(genetic);\n    setNewGenetic({\n      ...genetic,\n      alleles: genetic.alleles.length < 2 ? [...genetic.alleles, '', ''] : genetic.alleles\n    });\n    setShowAddForm(true);\n  };\n\n  const handleUpdateGenetic = () => {\n    if (!editingGenetic || !newGenetic.geneSymbol || !newGenetic.phenotype) {\n      alert('Please fill in gene symbol and phenotype');\n      return;\n    }\n\n    const updatedGenetics = currentPatient.genetics.map(g => \n      g.geneSymbol === editingGenetic.geneSymbol && g.testDate === editingGenetic.testDate\n        ? { \n            ...newGenetic,\n            geneSymbol: newGenetic.geneSymbol!,\n            alleles: newGenetic.alleles!.filter(a => a.trim() !== ''),\n            phenotype: newGenetic.phenotype!\n          } as PatientGenetics\n        : g\n    );\n    \n    actions.updatePatientData({ genetics: updatedGenetics });\n\n    // Reset form\n    setNewGenetic({\n      geneSymbol: '',\n      alleles: ['', ''],\n      phenotype: '',\n      metabolizerStatus: 'normal',\n      testDate: new Date().toISOString().split('T')[0],\n      testMethod: '',\n      clinicalSignificance: '',\n      notes: ''\n    });\n    setEditingGenetic(null);\n    setShowAddForm(false);\n  };\n\n  const handleRemoveGenetic = (genetic: PatientGenetics) => {\n    if (confirm('Are you sure you want to remove this genetic data?')) {\n      const updatedGenetics = currentPatient.genetics.filter(g => \n        !(g.geneSymbol === genetic.geneSymbol && g.testDate === genetic.testDate)\n      );\n      actions.updatePatientData({ genetics: updatedGenetics });\n    }\n  };\n\n  const getMetabolizerColor = (status?: string) => {\n    switch (status) {\n      case 'poor': return 'bg-red-100 text-red-800';\n      case 'intermediate': return 'bg-yellow-100 text-yellow-800';\n      case 'normal': return 'bg-green-100 text-green-800';\n      case 'rapid': return 'bg-blue-100 text-blue-800';\n      case 'ultra-rapid': return 'bg-purple-100 text-purple-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getSignificanceColor = (significance?: string) => {\n    if (!significance) return 'bg-gray-100 text-gray-800';\n    const lower = significance.toLowerCase();\n    if (lower.includes('high') || lower.includes('pathogenic')) return 'bg-red-100 text-red-800';\n    if (lower.includes('moderate') || lower.includes('likely')) return 'bg-yellow-100 text-yellow-800';\n    if (lower.includes('low') || lower.includes('benign')) return 'bg-green-100 text-green-800';\n    return 'bg-blue-100 text-blue-800';\n  };\n\n  const getCommonPharmacoGenes = () => [\n    { gene: 'CYP2D6', description: 'Metabolizes many antidepressants, antipsychotics, and opioids' },\n    { gene: 'CYP2C19', description: 'Metabolizes proton pump inhibitors, clopidogrel, and some antidepressants' },\n    { gene: 'CYP2C9', description: 'Metabolizes warfarin, phenytoin, and NSAIDs' },\n    { gene: 'CYP3A4', description: 'Metabolizes many medications including some chemotherapy drugs' },\n    { gene: 'TPMT', description: 'Metabolizes thiopurine drugs (azathioprine, mercaptopurine)' },\n    { gene: 'UGT1A1', description: 'Metabolizes irinotecan and affects bilirubin levels' },\n    { gene: 'DPYD', description: 'Metabolizes fluoropyrimidines (5-FU, capecitabine)' },\n    { gene: 'NUDT15', description: 'Affects thiopurine metabolism, important in Asian populations' }\n  ];\n\n  const genetics = getGeneticData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <Card>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Dna className=\"w-6 h-6 text-primary-600\" />\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">Genomic Profile</h2>\n              <p className=\"text-sm text-gray-600\">\n                {currentPatient.demographics.firstName} {currentPatient.demographics.lastName} - Genetic testing results and pharmacogenomics\n              </p>\n            </div>\n          </div>\n          <button\n            onClick={() => setShowAddForm(true)}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            <span>Add Genetic Data</span>\n          </button>\n        </div>\n      </Card>\n\n      {/* Pharmacogenomic Alerts */}\n      {genetics.some(g => g.metabolizerStatus === 'poor' || g.metabolizerStatus === 'ultra-rapid') && (\n        <Alert type=\"warning\" title=\"Pharmacogenomic Considerations\">\n          <p className=\"text-sm\">\n            This patient has genetic variants that may affect drug metabolism. \n            Review medication dosing and selection based on pharmacogenomic guidance.\n          </p>\n        </Alert>\n      )}\n\n      {/* Filters and Search */}\n      <Card>\n        <div className=\"flex items-center justify-between space-x-4\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Filter className=\"w-4 h-4 text-gray-400\" />\n              <select\n                value={filter}\n                onChange={(e) => setFilter(e.target.value as 'all' | 'pharmacogenomic' | 'oncologic')}\n                className=\"border border-gray-300 rounded-md px-3 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              >\n                <option value=\"all\">All Genetic Data</option>\n                <option value=\"pharmacogenomic\">Pharmacogenomic</option>\n                <option value=\"oncologic\">Oncologic</option>\n              </select>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Search className=\"w-4 h-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search genes...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n            </div>\n          </div>\n          <div className=\"text-sm text-gray-600\">\n            {genetics.length} result{genetics.length !== 1 ? 's' : ''} found\n          </div>\n        </div>\n      </Card>\n\n      {/* Common Pharmacogenes Reference */}\n      <Card>\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Info className=\"w-5 h-5 text-blue-500\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">Common Pharmacogenes</h3>\n          <Tooltip content=\"These genes are commonly tested for drug metabolism and dosing guidance\">\n            <Info className=\"w-4 h-4 text-gray-400\" />\n          </Tooltip>\n        </div>\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n          {getCommonPharmacoGenes().map(({ gene, description }) => {\n            const hasData = genetics.some(g => g.geneSymbol.toUpperCase() === gene);\n            return (\n              <div key={gene} className={`p-3 rounded-lg border ${hasData ? 'bg-green-50 border-green-200' : 'bg-gray-50 border-gray-200'}`}>\n                <div className=\"flex items-center justify-between mb-1\">\n                  <span className=\"font-medium text-gray-900\">{gene}</span>\n                  {hasData && <CheckCircle className=\"w-4 h-4 text-green-600\" />}\n                </div>\n                <p className=\"text-xs text-gray-600\">{description}</p>\n              </div>\n            );\n          })}\n        </div>\n      </Card>\n\n      {/* Genetic Data List */}\n      <div className=\"space-y-4\">\n        {genetics.length === 0 ? (\n          <Card>\n            <div className=\"text-center py-8\">\n              <Dna className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n              <h3 className=\"text-lg font-medium text-gray-500 mb-2\">No Genetic Data Found</h3>\n              <p className=\"text-gray-400\">\n                {searchQuery || filter !== 'all' \n                  ? 'Try adjusting your search or filter criteria'\n                  : 'Add genetic testing results to enable pharmacogenomic guidance'\n                }\n              </p>\n            </div>\n          </Card>\n        ) : (\n          genetics.map((genetic, index) => (\n            <Card key={`${genetic.geneSymbol}-${genetic.testDate}-${index}`}>\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3 mb-2\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">{genetic.geneSymbol}</h3>\n                    <div className=\"flex items-center space-x-2\">\n                      {genetic.metabolizerStatus && (\n                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getMetabolizerColor(genetic.metabolizerStatus)}`}>\n                          {genetic.metabolizerStatus} metabolizer\n                        </span>\n                      )}\n                      {genetic.clinicalSignificance && (\n                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getSignificanceColor(genetic.clinicalSignificance)}`}>\n                          {genetic.clinicalSignificance}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"grid md:grid-cols-3 gap-4 text-sm\">\n                    <div>\n                      <span className=\"font-medium text-gray-700\">Alleles:</span>\n                      <p className=\"text-gray-900\">{genetic.alleles.join(' / ') || 'Not specified'}</p>\n                    </div>\n                    <div>\n                      <span className=\"font-medium text-gray-700\">Phenotype:</span>\n                      <p className=\"text-gray-900\">{genetic.phenotype}</p>\n                    </div>\n                    <div>\n                      <span className=\"font-medium text-gray-700\">Test Date:</span>\n                      <p className=\"text-gray-900\">{new Date(genetic.testDate).toLocaleDateString()}</p>\n                    </div>\n                  </div>\n\n                  {genetic.testMethod && (\n                    <div className=\"mt-2 text-sm\">\n                      <span className=\"font-medium text-gray-700\">Test Method:</span>\n                      <p className=\"text-gray-900\">{genetic.testMethod}</p>\n                    </div>\n                  )}\n\n                  {genetic.geneFunction && (\n                    <div className=\"mt-2 text-sm\">\n                      <span className=\"font-medium text-gray-700\">Gene Function:</span>\n                      <p className=\"text-gray-900\">{genetic.geneFunction}</p>\n                    </div>\n                  )}\n\n                  {genetic.notes && (\n                    <div className=\"mt-2 text-sm\">\n                      <span className=\"font-medium text-gray-700\">Notes:</span>\n                      <p className=\"text-gray-900\">{genetic.notes}</p>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"flex items-center space-x-2 ml-4\">\n                  <Tooltip content=\"Edit genetic data\">\n                    <button\n                      onClick={() => handleEditGenetic(genetic)}\n                      className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\n                    >\n                      <Edit className=\"w-4 h-4\" />\n                    </button>\n                  </Tooltip>\n                  <Tooltip content=\"Remove genetic data\">\n                    <button\n                      onClick={() => handleRemoveGenetic(genetic)}\n                      className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </button>\n                  </Tooltip>\n                </div>\n              </div>\n            </Card>\n          ))\n        )}\n      </div>\n\n      {/* Add/Edit Genetic Data Form */}\n      {showAddForm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-2xl max-h-[90vh] overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                {editingGenetic ? 'Edit Genetic Data' : 'Add Genetic Data'}\n              </h3>\n            </div>\n\n            <div className=\"p-6 space-y-4 overflow-y-auto max-h-[60vh]\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Gene Symbol <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newGenetic.geneSymbol || ''}\n                    onChange={(e) => setNewGenetic({ ...newGenetic, geneSymbol: e.target.value.toUpperCase() })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    placeholder=\"e.g., CYP2D6\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Phenotype <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newGenetic.phenotype || ''}\n                    onChange={(e) => setNewGenetic({ ...newGenetic, phenotype: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    placeholder=\"e.g., Intermediate Metabolizer\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Allele 1\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={(newGenetic.alleles && newGenetic.alleles[0]) || ''}\n                    onChange={(e) => {\n                      const newAlleles = [...(newGenetic.alleles || ['', ''])];\n                      newAlleles[0] = e.target.value;\n                      setNewGenetic({ ...newGenetic, alleles: newAlleles });\n                    }}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    placeholder=\"e.g., *1\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Allele 2\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={(newGenetic.alleles && newGenetic.alleles[1]) || ''}\n                    onChange={(e) => {\n                      const newAlleles = [...(newGenetic.alleles || ['', ''])];\n                      newAlleles[1] = e.target.value;\n                      setNewGenetic({ ...newGenetic, alleles: newAlleles });\n                    }}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    placeholder=\"e.g., *4\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Metabolizer Status\n                  </label>\n                  <select\n                    value={newGenetic.metabolizerStatus || 'normal'}\n                    onChange={(e) => setNewGenetic({ ...newGenetic, metabolizerStatus: e.target.value as any })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"poor\">Poor Metabolizer</option>\n                    <option value=\"intermediate\">Intermediate Metabolizer</option>\n                    <option value=\"normal\">Normal Metabolizer</option>\n                    <option value=\"rapid\">Rapid Metabolizer</option>\n                    <option value=\"ultra-rapid\">Ultra-Rapid Metabolizer</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Test Date\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={newGenetic.testDate || ''}\n                    onChange={(e) => setNewGenetic({ ...newGenetic, testDate: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Test Method\n                </label>\n                <input\n                  type=\"text\"\n                  value={newGenetic.testMethod || ''}\n                  onChange={(e) => setNewGenetic({ ...newGenetic, testMethod: e.target.value })}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"e.g., PCR-RFLP, Sequencing, Array\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Clinical Significance\n                </label>\n                <input\n                  type=\"text\"\n                  value={newGenetic.clinicalSignificance || ''}\n                  onChange={(e) => setNewGenetic({ ...newGenetic, clinicalSignificance: e.target.value })}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"e.g., Reduced enzyme activity\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Notes\n                </label>\n                <textarea\n                  value={newGenetic.notes || ''}\n                  onChange={(e) => setNewGenetic({ ...newGenetic, notes: e.target.value })}\n                  rows={3}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"Additional clinical notes...\"\n                />\n              </div>\n            </div>\n\n            <div className=\"p-6 border-t border-gray-200 flex justify-between\">\n              <button\n                onClick={() => {\n                  setShowAddForm(false);\n                  setEditingGenetic(null);\n                  setNewGenetic({\n                    geneSymbol: '',\n                    alleles: ['', ''],\n                    phenotype: '',\n                    metabolizerStatus: 'normal',\n                    testDate: new Date().toISOString().split('T')[0],\n                    testMethod: '',\n                    clinicalSignificance: '',\n                    notes: ''\n                  });\n                }}\n                className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={editingGenetic ? handleUpdateGenetic : handleAddGenetic}\n                className=\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700\"\n              >\n                {editingGenetic ? 'Update Genetic Data' : 'Add Genetic Data'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GenomicsManager;","import React, { useState, useMemo } from 'react';\nimport { usePatient } from '../../context/PatientContext';\nimport { TreatmentHistory } from '../../types';\nimport Card from '../UI/Card';\nimport Tooltip from '../UI/Tooltip';\nimport Alert from '../UI/Alert';\nimport { \n  History, \n  Plus, \n  Edit, \n  Trash2, \n  Calendar,\n  Activity,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  Info,\n  Filter,\n  Search,\n  Zap,\n  Target,\n  Scissors\n} from 'lucide-react';\n\ninterface TreatmentTimelineProps {\n  patientId?: string;\n}\n\nconst TreatmentTimeline: React.FC<TreatmentTimelineProps> = ({ patientId }) => {\n  const { state, actions } = usePatient();\n  const { currentPatient } = state;\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingTreatment, setEditingTreatment] = useState<TreatmentHistory | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filter, setFilter] = useState<'all' | 'active' | 'completed'>('all');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n\n  const [newTreatment, setNewTreatment] = useState<Partial<TreatmentHistory>>({\n    treatmentType: 'chemotherapy',\n    regimen: '',\n    drugs: [],\n    startDate: new Date().toISOString().split('T')[0],\n    endDate: '',\n    cycles: 1,\n    response: 'stable',\n    toxicities: [],\n    notes: ''\n  });\n\n  const [newToxicity, setNewToxicity] = useState({ grade: 1, description: '', action: '' });\n\n  if (!currentPatient) {\n    return (\n      <Card>\n        <div className=\"text-center py-8\">\n          <History className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <h3 className=\"text-lg font-medium text-gray-500 mb-2\">No Patient Selected</h3>\n          <p className=\"text-gray-400\">Select a patient to view their treatment history</p>\n        </div>\n      </Card>\n    );\n  }\n\n  const getTreatments = () => {\n    let treatments = currentPatient.treatmentHistory || [];\n    \n    // Filter by status\n    if (filter === 'active') {\n      treatments = treatments.filter(t => !t.endDate);\n    } else if (filter === 'completed') {\n      treatments = treatments.filter(t => t.endDate);\n    }\n\n    // Filter by type\n    if (typeFilter !== 'all') {\n      treatments = treatments.filter(t => t.treatmentType === typeFilter);\n    }\n\n    // Filter by search query\n    if (searchQuery.trim()) {\n      treatments = treatments.filter(t => \n        t.regimen?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        t.drugs?.some(drug => drug.toLowerCase().includes(searchQuery.toLowerCase())) ||\n        t.notes?.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n\n    // Sort by start date (most recent first)\n    return treatments.sort((a, b) => new Date(b.startDate).getTime() - new Date(a.startDate).getTime());\n  };\n\n  const treatmentTimeline = useMemo(() => {\n    const treatments = currentPatient.treatmentHistory || [];\n    return treatments\n      .sort((a, b) => new Date(a.startDate).getTime() - new Date(b.startDate).getTime())\n      .map((treatment, index) => ({\n        ...treatment,\n        order: index + 1\n      }));\n  }, [currentPatient.treatmentHistory]);\n\n  const handleAddTreatment = () => {\n    if (!newTreatment.treatmentType || !newTreatment.startDate) {\n      alert('Please fill in treatment type and start date');\n      return;\n    }\n\n    const treatment: TreatmentHistory = {\n      id: `treatment-${Date.now()}`,\n      treatmentType: newTreatment.treatmentType as any,\n      regimen: newTreatment.regimen || '',\n      drugs: newTreatment.drugs || [],\n      startDate: newTreatment.startDate!,\n      endDate: newTreatment.endDate,\n      cycles: newTreatment.cycles,\n      response: newTreatment.response,\n      toxicities: newTreatment.toxicities || [],\n      notes: newTreatment.notes\n    };\n\n    const updatedTreatments = [...(currentPatient.treatmentHistory || []), treatment];\n    actions.updatePatientData({ treatmentHistory: updatedTreatments });\n\n    // Reset form\n    setNewTreatment({\n      treatmentType: 'chemotherapy',\n      regimen: '',\n      drugs: [],\n      startDate: new Date().toISOString().split('T')[0],\n      endDate: '',\n      cycles: 1,\n      response: 'stable',\n      toxicities: [],\n      notes: ''\n    });\n    setShowAddForm(false);\n  };\n\n  const handleEditTreatment = (treatment: TreatmentHistory) => {\n    setEditingTreatment(treatment);\n    setNewTreatment(treatment);\n    setShowAddForm(true);\n  };\n\n  const handleUpdateTreatment = () => {\n    if (!editingTreatment || !newTreatment.treatmentType || !newTreatment.startDate) {\n      alert('Please fill in treatment type and start date');\n      return;\n    }\n\n    const updatedTreatments = currentPatient.treatmentHistory.map(t => \n      t.id === editingTreatment.id \n        ? { ...newTreatment, id: editingTreatment.id } as TreatmentHistory\n        : t\n    );\n    \n    actions.updatePatientData({ treatmentHistory: updatedTreatments });\n\n    // Reset form\n    setNewTreatment({\n      treatmentType: 'chemotherapy',\n      regimen: '',\n      drugs: [],\n      startDate: new Date().toISOString().split('T')[0],\n      endDate: '',\n      cycles: 1,\n      response: 'stable',\n      toxicities: [],\n      notes: ''\n    });\n    setEditingTreatment(null);\n    setShowAddForm(false);\n  };\n\n  const handleRemoveTreatment = (treatmentId: string) => {\n    if (confirm('Are you sure you want to remove this treatment?')) {\n      const updatedTreatments = currentPatient.treatmentHistory.filter(t => t.id !== treatmentId);\n      actions.updatePatientData({ treatmentHistory: updatedTreatments });\n    }\n  };\n\n  const getResponseColor = (response?: string) => {\n    switch (response) {\n      case 'complete': return 'bg-green-100 text-green-800';\n      case 'partial': return 'bg-blue-100 text-blue-800';\n      case 'stable': return 'bg-yellow-100 text-yellow-800';\n      case 'progression': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getResponseIcon = (response?: string) => {\n    switch (response) {\n      case 'complete': return <CheckCircle className=\"w-4 h-4\" />;\n      case 'partial': return <TrendingUp className=\"w-4 h-4\" />;\n      case 'stable': return <Minus className=\"w-4 h-4\" />;\n      case 'progression': return <TrendingDown className=\"w-4 h-4\" />;\n      default: return <Clock className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getTreatmentIcon = (type: string) => {\n    switch (type) {\n      case 'chemotherapy': return <Zap className=\"w-5 h-5\" />;\n      case 'radiation': return <Target className=\"w-5 h-5\" />;\n      case 'surgery': return <Scissors className=\"w-5 h-5\" />;\n      case 'immunotherapy': return <Activity className=\"w-5 h-5\" />;\n      case 'targeted': return <Target className=\"w-5 h-5\" />;\n      default: return <History className=\"w-5 h-5\" />;\n    }\n  };\n\n  const getToxicityColor = (grade: number) => {\n    switch (grade) {\n      case 1: return 'bg-green-100 text-green-800';\n      case 2: return 'bg-yellow-100 text-yellow-800';\n      case 3: return 'bg-orange-100 text-orange-800';\n      case 4: return 'bg-red-100 text-red-800';\n      case 5: return 'bg-red-200 text-red-900';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const addToxicity = () => {\n    if (newToxicity.description && newToxicity.action) {\n      setNewTreatment({\n        ...newTreatment,\n        toxicities: [...(newTreatment.toxicities || []), { ...newToxicity, grade: newToxicity.grade as any }]\n      });\n      setNewToxicity({ grade: 1, description: '', action: '' });\n    }\n  };\n\n  const treatments = getTreatments();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <Card>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <History className=\"w-6 h-6 text-primary-600\" />\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">Treatment History</h2>\n              <p className=\"text-sm text-gray-600\">\n                {currentPatient.demographics.firstName} {currentPatient.demographics.lastName} - Complete treatment timeline and outcomes\n              </p>\n            </div>\n          </div>\n          <button\n            onClick={() => setShowAddForm(true)}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            <span>Add Treatment</span>\n          </button>\n        </div>\n      </Card>\n\n      {/* Treatment Summary */}\n      {treatmentTimeline.length > 0 && (\n        <Card>\n          <div className=\"flex items-center space-x-2 mb-4\">\n            <Activity className=\"w-5 h-5 text-gray-400\" />\n            <h3 className=\"text-lg font-semibold text-gray-900\">Treatment Summary</h3>\n            <Tooltip content=\"Overview of all treatments and their outcomes\">\n              <Info className=\"w-4 h-4 text-gray-400\" />\n            </Tooltip>\n          </div>\n          <div className=\"grid md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-50 rounded-lg p-3\">\n              <div className=\"text-sm text-blue-600 font-medium\">Total Treatments</div>\n              <div className=\"text-2xl font-bold text-blue-900\">{treatmentTimeline.length}</div>\n            </div>\n            <div className=\"bg-green-50 rounded-lg p-3\">\n              <div className=\"text-sm text-green-600 font-medium\">Complete/Partial Response</div>\n              <div className=\"text-2xl font-bold text-green-900\">\n                {treatmentTimeline.filter(t => t.response === 'complete' || t.response === 'partial').length}\n              </div>\n            </div>\n            <div className=\"bg-yellow-50 rounded-lg p-3\">\n              <div className=\"text-sm text-yellow-600 font-medium\">Active Treatments</div>\n              <div className=\"text-2xl font-bold text-yellow-900\">\n                {treatmentTimeline.filter(t => !t.endDate).length}\n              </div>\n            </div>\n            <div className=\"bg-red-50 rounded-lg p-3\">\n              <div className=\"text-sm text-red-600 font-medium\">Grade 3+ Toxicities</div>\n              <div className=\"text-2xl font-bold text-red-900\">\n                {treatmentTimeline.reduce((sum, t) => sum + (t.toxicities?.filter(tox => tox.grade >= 3).length || 0), 0)}\n              </div>\n            </div>\n          </div>\n        </Card>\n      )}\n\n      {/* Filters and Search */}\n      <Card>\n        <div className=\"flex items-center justify-between space-x-4\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Filter className=\"w-4 h-4 text-gray-400\" />\n              <select\n                value={filter}\n                onChange={(e) => setFilter(e.target.value as 'all' | 'active' | 'completed')}\n                className=\"border border-gray-300 rounded-md px-3 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              >\n                <option value=\"all\">All Treatments</option>\n                <option value=\"active\">Active</option>\n                <option value=\"completed\">Completed</option>\n              </select>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <select\n                value={typeFilter}\n                onChange={(e) => setTypeFilter(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              >\n                <option value=\"all\">All Types</option>\n                <option value=\"chemotherapy\">Chemotherapy</option>\n                <option value=\"radiation\">Radiation</option>\n                <option value=\"surgery\">Surgery</option>\n                <option value=\"immunotherapy\">Immunotherapy</option>\n                <option value=\"targeted\">Targeted</option>\n                <option value=\"other\">Other</option>\n              </select>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Search className=\"w-4 h-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search treatments...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n            </div>\n          </div>\n          <div className=\"text-sm text-gray-600\">\n            {treatments.length} treatment{treatments.length !== 1 ? 's' : ''} found\n          </div>\n        </div>\n      </Card>\n\n      {/* Treatment Timeline */}\n      <div className=\"space-y-4\">\n        {treatments.length === 0 ? (\n          <Card>\n            <div className=\"text-center py-8\">\n              <History className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n              <h3 className=\"text-lg font-medium text-gray-500 mb-2\">No Treatments Found</h3>\n              <p className=\"text-gray-400\">\n                {searchQuery || filter !== 'all' || typeFilter !== 'all'\n                  ? 'Try adjusting your search or filter criteria'\n                  : 'Add the first treatment to start building the treatment history'\n                }\n              </p>\n            </div>\n          </Card>\n        ) : (\n          treatments.map((treatment, index) => (\n            <Card key={treatment.id} className=\"relative\">\n              {/* Timeline line for visual chronology */}\n              {index < treatments.length - 1 && (\n                <div className=\"absolute left-8 top-16 w-0.5 h-full bg-gray-200 -z-10\"></div>\n              )}\n              \n              <div className=\"flex items-start space-x-4\">\n                <div className={`flex-shrink-0 w-12 h-12 rounded-full flex items-center justify-center ${\n                  treatment.endDate ? 'bg-gray-100 text-gray-600' : 'bg-primary-100 text-primary-600'\n                }`}>\n                  {getTreatmentIcon(treatment.treatmentType)}\n                </div>\n\n                <div className=\"flex-1\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-3 mb-2\">\n                        <h3 className=\"text-lg font-semibold text-gray-900 capitalize\">\n                          {treatment.treatmentType} {treatment.regimen && `- ${treatment.regimen}`}\n                        </h3>\n                        <div className=\"flex items-center space-x-2\">\n                          {!treatment.endDate && (\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                              <Clock className=\"w-3 h-3 mr-1\" />\n                              Active\n                            </span>\n                          )}\n                          {treatment.response && (\n                            <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getResponseColor(treatment.response)}`}>\n                              {getResponseIcon(treatment.response)}\n                              <span className=\"ml-1 capitalize\">{treatment.response} response</span>\n                            </span>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"grid md:grid-cols-3 gap-4 text-sm mb-3\">\n                        <div>\n                          <span className=\"font-medium text-gray-700\">Start Date:</span>\n                          <p className=\"text-gray-900\">{new Date(treatment.startDate).toLocaleDateString()}</p>\n                        </div>\n                        {treatment.endDate && (\n                          <div>\n                            <span className=\"font-medium text-gray-700\">End Date:</span>\n                            <p className=\"text-gray-900\">{new Date(treatment.endDate).toLocaleDateString()}</p>\n                          </div>\n                        )}\n                        {treatment.cycles && (\n                          <div>\n                            <span className=\"font-medium text-gray-700\">Cycles:</span>\n                            <p className=\"text-gray-900\">{treatment.cycles}</p>\n                          </div>\n                        )}\n                      </div>\n\n                      {treatment.drugs && treatment.drugs.length > 0 && (\n                        <div className=\"mb-3\">\n                          <span className=\"font-medium text-gray-700 text-sm\">Drugs:</span>\n                          <div className=\"flex flex-wrap gap-1 mt-1\">\n                            {treatment.drugs.map((drug, idx) => (\n                              <span key={idx} className=\"inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-50 text-blue-800\">\n                                {drug}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n                      {treatment.toxicities && treatment.toxicities.length > 0 && (\n                        <div className=\"mb-3\">\n                          <span className=\"font-medium text-gray-700 text-sm\">Toxicities:</span>\n                          <div className=\"space-y-1 mt-1\">\n                            {treatment.toxicities.map((toxicity, idx) => (\n                              <div key={idx} className=\"flex items-center space-x-2\">\n                                <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getToxicityColor(toxicity.grade)}`}>\n                                  Grade {toxicity.grade}\n                                </span>\n                                <span className=\"text-sm text-gray-900\">{toxicity.description}</span>\n                                <span className=\"text-xs text-gray-600\">({toxicity.action})</span>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n                      {treatment.notes && (\n                        <div className=\"text-sm\">\n                          <span className=\"font-medium text-gray-700\">Notes:</span>\n                          <p className=\"text-gray-900 mt-1\">{treatment.notes}</p>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"flex items-center space-x-2 ml-4\">\n                      <Tooltip content=\"Edit treatment\">\n                        <button\n                          onClick={() => handleEditTreatment(treatment)}\n                          className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </button>\n                      </Tooltip>\n                      <Tooltip content=\"Remove treatment\">\n                        <button\n                          onClick={() => handleRemoveTreatment(treatment.id)}\n                          className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </button>\n                      </Tooltip>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          ))\n        )}\n      </div>\n\n      {/* Add/Edit Treatment Form */}\n      {showAddForm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-3xl max-h-[90vh] overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                {editingTreatment ? 'Edit Treatment' : 'Add Treatment'}\n              </h3>\n            </div>\n\n            <div className=\"p-6 space-y-6 overflow-y-auto max-h-[70vh]\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Treatment Type <span className=\"text-red-500\">*</span>\n                  </label>\n                  <select\n                    value={newTreatment.treatmentType || 'chemotherapy'}\n                    onChange={(e) => setNewTreatment({ ...newTreatment, treatmentType: e.target.value as any })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"chemotherapy\">Chemotherapy</option>\n                    <option value=\"radiation\">Radiation</option>\n                    <option value=\"surgery\">Surgery</option>\n                    <option value=\"immunotherapy\">Immunotherapy</option>\n                    <option value=\"targeted\">Targeted Therapy</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Regimen/Protocol</label>\n                  <input\n                    type=\"text\"\n                    value={newTreatment.regimen || ''}\n                    onChange={(e) => setNewTreatment({ ...newTreatment, regimen: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    placeholder=\"e.g., FOLFOX, AC-T\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Drugs (comma-separated)</label>\n                <input\n                  type=\"text\"\n                  value={newTreatment.drugs?.join(', ') || ''}\n                  onChange={(e) => setNewTreatment({ ...newTreatment, drugs: e.target.value.split(',').map(d => d.trim()).filter(d => d) })}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"e.g., Doxorubicin, Cyclophosphamide\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Start Date <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"date\"\n                    value={newTreatment.startDate || ''}\n                    onChange={(e) => setNewTreatment({ ...newTreatment, startDate: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">End Date</label>\n                  <input\n                    type=\"date\"\n                    value={newTreatment.endDate || ''}\n                    onChange={(e) => setNewTreatment({ ...newTreatment, endDate: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Cycles</label>\n                  <input\n                    type=\"number\"\n                    value={newTreatment.cycles || ''}\n                    onChange={(e) => setNewTreatment({ ...newTreatment, cycles: e.target.value ? parseInt(e.target.value) : undefined })}\n                    min=\"1\"\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Response</label>\n                <select\n                  value={newTreatment.response || 'stable'}\n                  onChange={(e) => setNewTreatment({ ...newTreatment, response: e.target.value as any })}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                >\n                  <option value=\"complete\">Complete Response</option>\n                  <option value=\"partial\">Partial Response</option>\n                  <option value=\"stable\">Stable Disease</option>\n                  <option value=\"progression\">Disease Progression</option>\n                </select>\n              </div>\n\n              {/* Toxicities Section */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">Toxicities</label>\n                <div className=\"space-y-3\">\n                  <div className=\"grid grid-cols-12 gap-2\">\n                    <div className=\"col-span-2\">\n                      <select\n                        value={newToxicity.grade}\n                        onChange={(e) => setNewToxicity({ ...newToxicity, grade: parseInt(e.target.value) })}\n                        className=\"w-full border border-gray-300 rounded-md px-2 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                      >\n                        <option value={1}>Grade 1</option>\n                        <option value={2}>Grade 2</option>\n                        <option value={3}>Grade 3</option>\n                        <option value={4}>Grade 4</option>\n                        <option value={5}>Grade 5</option>\n                      </select>\n                    </div>\n                    <div className=\"col-span-5\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Toxicity description\"\n                        value={newToxicity.description}\n                        onChange={(e) => setNewToxicity({ ...newToxicity, description: e.target.value })}\n                        className=\"w-full border border-gray-300 rounded-md px-2 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    </div>\n                    <div className=\"col-span-4\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Action taken\"\n                        value={newToxicity.action}\n                        onChange={(e) => setNewToxicity({ ...newToxicity, action: e.target.value })}\n                        className=\"w-full border border-gray-300 rounded-md px-2 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    </div>\n                    <div className=\"col-span-1\">\n                      <button\n                        type=\"button\"\n                        onClick={addToxicity}\n                        className=\"w-full h-8 bg-primary-600 text-white rounded-md hover:bg-primary-700 text-sm\"\n                      >\n                        +\n                      </button>\n                    </div>\n                  </div>\n                  {newTreatment.toxicities && newTreatment.toxicities.length > 0 && (\n                    <div className=\"space-y-1\">\n                      {newTreatment.toxicities.map((toxicity, index) => (\n                        <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                          <div className=\"flex items-center space-x-2\">\n                            <span className={`px-2 py-1 rounded-full text-xs font-medium ${getToxicityColor(toxicity.grade)}`}>\n                              Grade {toxicity.grade}\n                            </span>\n                            <span className=\"text-sm\">{toxicity.description}</span>\n                            <span className=\"text-xs text-gray-600\">({toxicity.action})</span>\n                          </div>\n                          <button\n                            type=\"button\"\n                            onClick={() => setNewTreatment({\n                              ...newTreatment,\n                              toxicities: newTreatment.toxicities?.filter((_, i) => i !== index)\n                            })}\n                            className=\"text-red-600 hover:text-red-800\"\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n                <textarea\n                  value={newTreatment.notes || ''}\n                  onChange={(e) => setNewTreatment({ ...newTreatment, notes: e.target.value })}\n                  rows={3}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"Additional treatment notes...\"\n                />\n              </div>\n            </div>\n\n            <div className=\"p-6 border-t border-gray-200 flex justify-between\">\n              <button\n                onClick={() => {\n                  setShowAddForm(false);\n                  setEditingTreatment(null);\n                  setNewTreatment({\n                    treatmentType: 'chemotherapy',\n                    regimen: '',\n                    drugs: [],\n                    startDate: new Date().toISOString().split('T')[0],\n                    endDate: '',\n                    cycles: 1,\n                    response: 'stable',\n                    toxicities: [],\n                    notes: ''\n                  });\n                }}\n                className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={editingTreatment ? handleUpdateTreatment : handleAddTreatment}\n                className=\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700\"\n              >\n                {editingTreatment ? 'Update Treatment' : 'Add Treatment'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TreatmentTimeline;","import React, { useState, useMemo } from 'react';\nimport { usePatient } from '../../context/PatientContext';\nimport Card from '../UI/Card';\nimport Tooltip from '../UI/Tooltip';\nimport Alert from '../UI/Alert';\nimport { \n  TrendingUp, \n  TrendingDown, \n  BarChart3,\n  Calendar,\n  Activity,\n  Heart,\n  Target,\n  Clock,\n  Plus,\n  Edit,\n  Trash2,\n  Info,\n  CheckCircle,\n  AlertTriangle,\n  Minus\n} from 'lucide-react';\n\ninterface OutcomeData {\n  id: string;\n  type: 'survival' | 'response' | 'quality_of_life' | 'biomarker' | 'functional_status';\n  measurement: string;\n  value: number | string;\n  unit?: string;\n  date: string;\n  notes?: string;\n  treatmentRelated?: string; // Related treatment ID\n}\n\ninterface OutcomeTrackerProps {\n  patientId?: string;\n}\n\nconst OutcomeTracker: React.FC<OutcomeTrackerProps> = ({ patientId }) => {\n  const { state, actions } = usePatient();\n  const { currentPatient } = state;\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingOutcome, setEditingOutcome] = useState<OutcomeData | null>(null);\n  const [selectedType, setSelectedType] = useState<string>('all');\n\n  // Store outcomes in patient notes for now (in a real app, this would be a separate field)\n  const getOutcomes = (): OutcomeData[] => {\n    if (!currentPatient) return [];\n    \n    // Look for outcome data in notes\n    const outcomeNotes = currentPatient.notes?.filter(note => note.type === 'clinical' && note.content.startsWith('OUTCOME_DATA:'));\n    if (!outcomeNotes) return [];\n\n    return outcomeNotes.map(note => {\n      try {\n        const data = JSON.parse(note.content.replace('OUTCOME_DATA:', ''));\n        return { ...data, id: note.id };\n      } catch {\n        return null;\n      }\n    }).filter(Boolean) as OutcomeData[];\n  };\n\n  const [newOutcome, setNewOutcome] = useState<Partial<OutcomeData>>({\n    type: 'response',\n    measurement: '',\n    value: '',\n    unit: '',\n    date: new Date().toISOString().split('T')[0],\n    notes: '',\n    treatmentRelated: ''\n  });\n\n  if (!currentPatient) {\n    return (\n      <Card>\n        <div className=\"text-center py-8\">\n          <TrendingUp className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <h3 className=\"text-lg font-medium text-gray-500 mb-2\">No Patient Selected</h3>\n          <p className=\"text-gray-400\">Select a patient to track their outcomes</p>\n        </div>\n      </Card>\n    );\n  }\n\n  const outcomes = getOutcomes();\n  const filteredOutcomes = selectedType === 'all' \n    ? outcomes \n    : outcomes.filter(o => o.type === selectedType);\n\n  const handleAddOutcome = () => {\n    if (!newOutcome.measurement || !newOutcome.value || !newOutcome.date) {\n      alert('Please fill in measurement, value, and date');\n      return;\n    }\n\n    const outcome: OutcomeData = {\n      id: `outcome-${Date.now()}`,\n      type: newOutcome.type as any,\n      measurement: newOutcome.measurement!,\n      value: newOutcome.value!,\n      unit: newOutcome.unit,\n      date: newOutcome.date!,\n      notes: newOutcome.notes,\n      treatmentRelated: newOutcome.treatmentRelated\n    };\n\n    // Store as a clinical note with special prefix\n    const noteContent = `OUTCOME_DATA:${JSON.stringify(outcome)}`;\n    const updatedNotes = [\n      ...(currentPatient.notes || []),\n      {\n        id: outcome.id,\n        timestamp: new Date().toISOString(),\n        author: 'current-user', // TODO: Get from auth context\n        type: 'clinical' as const,\n        content: noteContent\n      }\n    ];\n\n    actions.updatePatientData({ notes: updatedNotes });\n\n    // Reset form\n    setNewOutcome({\n      type: 'response',\n      measurement: '',\n      value: '',\n      unit: '',\n      date: new Date().toISOString().split('T')[0],\n      notes: '',\n      treatmentRelated: ''\n    });\n    setShowAddForm(false);\n  };\n\n  const handleEditOutcome = (outcome: OutcomeData) => {\n    setEditingOutcome(outcome);\n    setNewOutcome(outcome);\n    setShowAddForm(true);\n  };\n\n  const handleUpdateOutcome = () => {\n    if (!editingOutcome || !newOutcome.measurement || !newOutcome.value || !newOutcome.date) {\n      alert('Please fill in measurement, value, and date');\n      return;\n    }\n\n    const updatedOutcome = { ...newOutcome, id: editingOutcome.id } as OutcomeData;\n    const noteContent = `OUTCOME_DATA:${JSON.stringify(updatedOutcome)}`;\n    \n    const updatedNotes = currentPatient.notes?.map(note => \n      note.id === editingOutcome.id \n        ? { ...note, content: noteContent }\n        : note\n    ) || [];\n    \n    actions.updatePatientData({ notes: updatedNotes });\n\n    // Reset form\n    setNewOutcome({\n      type: 'response',\n      measurement: '',\n      value: '',\n      unit: '',\n      date: new Date().toISOString().split('T')[0],\n      notes: '',\n      treatmentRelated: ''\n    });\n    setEditingOutcome(null);\n    setShowAddForm(false);\n  };\n\n  const handleRemoveOutcome = (outcomeId: string) => {\n    if (confirm('Are you sure you want to remove this outcome data?')) {\n      const updatedNotes = currentPatient.notes?.filter(note => note.id !== outcomeId) || [];\n      actions.updatePatientData({ notes: updatedNotes });\n    }\n  };\n\n  const getOutcomeTypeIcon = (type: string) => {\n    switch (type) {\n      case 'survival': return <Heart className=\"w-4 h-4\" />;\n      case 'response': return <Target className=\"w-4 h-4\" />;\n      case 'quality_of_life': return <Activity className=\"w-4 h-4\" />;\n      case 'biomarker': return <BarChart3 className=\"w-4 h-4\" />;\n      case 'functional_status': return <TrendingUp className=\"w-4 h-4\" />;\n      default: return <Info className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getOutcomeTypeColor = (type: string) => {\n    switch (type) {\n      case 'survival': return 'bg-red-100 text-red-800';\n      case 'response': return 'bg-green-100 text-green-800';\n      case 'quality_of_life': return 'bg-blue-100 text-blue-800';\n      case 'biomarker': return 'bg-purple-100 text-purple-800';\n      case 'functional_status': return 'bg-orange-100 text-orange-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getResponseTrend = (value: number | string, measurement: string) => {\n    // Simple trend analysis based on common measurements\n    const numValue = typeof value === 'number' ? value : parseFloat(value.toString());\n    if (isNaN(numValue)) return null;\n\n    const lowerMeasurement = measurement.toLowerCase();\n    \n    // For tumor measurements, lower is better\n    if (lowerMeasurement.includes('tumor') || lowerMeasurement.includes('lesion') || lowerMeasurement.includes('mass')) {\n      if (numValue < 20) return 'improving';\n      if (numValue > 50) return 'worsening';\n      return 'stable';\n    }\n    \n    // For quality of life scores, higher is usually better\n    if (lowerMeasurement.includes('quality') || lowerMeasurement.includes('karnofsky') || lowerMeasurement.includes('ecog')) {\n      if (numValue > 80) return 'improving';\n      if (numValue < 40) return 'worsening';\n      return 'stable';\n    }\n    \n    return null;\n  };\n\n  const getTrendIcon = (trend: string | null) => {\n    switch (trend) {\n      case 'improving': return <TrendingUp className=\"w-4 h-4 text-green-600\" />;\n      case 'worsening': return <TrendingDown className=\"w-4 h-4 text-red-600\" />;\n      case 'stable': return <Minus className=\"w-4 h-4 text-yellow-600\" />;\n      default: return null;\n    }\n  };\n\n  // Summary statistics\n  const summaryStats = useMemo(() => {\n    const responseOutcomes = outcomes.filter(o => o.type === 'response');\n    const latestResponse = responseOutcomes.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())[0];\n    \n    const survivalOutcomes = outcomes.filter(o => o.type === 'survival');\n    const qolOutcomes = outcomes.filter(o => o.type === 'quality_of_life');\n    const biomarkerOutcomes = outcomes.filter(o => o.type === 'biomarker');\n    \n    return {\n      totalOutcomes: outcomes.length,\n      latestResponse: latestResponse?.value || 'Not assessed',\n      survivalData: survivalOutcomes.length > 0,\n      qolTracked: qolOutcomes.length > 0,\n      biomarkersTracked: biomarkerOutcomes.length > 0\n    };\n  }, [outcomes]);\n\n  const measurementSuggestions = {\n    survival: ['Overall Survival (months)', 'Disease-Free Survival (months)', 'Progression-Free Survival (months)'],\n    response: ['RECIST Response', 'Tumor Size (cm)', 'Target Lesion Sum (cm)', 'Response Rate (%)'],\n    quality_of_life: ['EORTC QLQ-C30 Score', 'Karnofsky Performance Score', 'ECOG Performance Status', 'Pain Score (0-10)'],\n    biomarker: ['PSA (ng/mL)', 'CA 19-9 (U/mL)', 'CEA (ng/mL)', 'CA-125 (U/mL)', 'AFP (ng/mL)'],\n    functional_status: ['Activities of Daily Living', 'Mobility Score', 'Cognitive Function', 'Social Function']\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <Card>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <TrendingUp className=\"w-6 h-6 text-primary-600\" />\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">Outcome Tracking</h2>\n              <p className=\"text-sm text-gray-600\">\n                {currentPatient.demographics.firstName} {currentPatient.demographics.lastName} - Treatment outcomes and response monitoring\n              </p>\n            </div>\n          </div>\n          <button\n            onClick={() => setShowAddForm(true)}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700\"\n          >\n            <Plus className=\"w-4 h-4\" />\n            <span>Add Outcome</span>\n          </button>\n        </div>\n      </Card>\n\n      {/* Summary Dashboard */}\n      <Card>\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <BarChart3 className=\"w-5 h-5 text-gray-400\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">Outcome Summary</h3>\n          <Tooltip content=\"Overview of tracked outcomes and current status\">\n            <Info className=\"w-4 h-4 text-gray-400\" />\n          </Tooltip>\n        </div>\n        <div className=\"grid md:grid-cols-5 gap-4\">\n          <div className=\"bg-blue-50 rounded-lg p-3\">\n            <div className=\"text-sm text-blue-600 font-medium\">Total Outcomes</div>\n            <div className=\"text-2xl font-bold text-blue-900\">{summaryStats.totalOutcomes}</div>\n          </div>\n          <div className=\"bg-green-50 rounded-lg p-3\">\n            <div className=\"text-sm text-green-600 font-medium\">Latest Response</div>\n            <div className=\"text-lg font-bold text-green-900 truncate\">{summaryStats.latestResponse}</div>\n          </div>\n          <div className=\"bg-red-50 rounded-lg p-3\">\n            <div className=\"text-sm text-red-600 font-medium\">Survival Data</div>\n            <div className=\"text-2xl font-bold text-red-900\">{summaryStats.survivalData ? '✓' : '○'}</div>\n          </div>\n          <div className=\"bg-purple-50 rounded-lg p-3\">\n            <div className=\"text-sm text-purple-600 font-medium\">QoL Tracked</div>\n            <div className=\"text-2xl font-bold text-purple-900\">{summaryStats.qolTracked ? '✓' : '○'}</div>\n          </div>\n          <div className=\"bg-orange-50 rounded-lg p-3\">\n            <div className=\"text-sm text-orange-600 font-medium\">Biomarkers</div>\n            <div className=\"text-2xl font-bold text-orange-900\">{summaryStats.biomarkersTracked ? '✓' : '○'}</div>\n          </div>\n        </div>\n      </Card>\n\n      {/* Filters */}\n      <Card>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <select\n              value={selectedType}\n              onChange={(e) => setSelectedType(e.target.value)}\n              className=\"border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            >\n              <option value=\"all\">All Outcome Types</option>\n              <option value=\"survival\">Survival Outcomes</option>\n              <option value=\"response\">Response Assessment</option>\n              <option value=\"quality_of_life\">Quality of Life</option>\n              <option value=\"biomarker\">Biomarkers</option>\n              <option value=\"functional_status\">Functional Status</option>\n            </select>\n          </div>\n          <div className=\"text-sm text-gray-600\">\n            {filteredOutcomes.length} outcome{filteredOutcomes.length !== 1 ? 's' : ''} found\n          </div>\n        </div>\n      </Card>\n\n      {/* Outcomes List */}\n      <div className=\"space-y-4\">\n        {filteredOutcomes.length === 0 ? (\n          <Card>\n            <div className=\"text-center py-8\">\n              <TrendingUp className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n              <h3 className=\"text-lg font-medium text-gray-500 mb-2\">No Outcomes Found</h3>\n              <p className=\"text-gray-400\">\n                {selectedType !== 'all' \n                  ? `No ${selectedType.replace('_', ' ')} outcomes recorded yet`\n                  : 'Start tracking treatment outcomes and patient responses'\n                }\n              </p>\n            </div>\n          </Card>\n        ) : (\n          filteredOutcomes\n            .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n            .map((outcome) => {\n              const trend = getResponseTrend(outcome.value, outcome.measurement);\n              return (\n                <Card key={outcome.id}>\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-3 mb-2\">\n                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getOutcomeTypeColor(outcome.type)}`}>\n                          {getOutcomeTypeIcon(outcome.type)}\n                          <span className=\"ml-1 capitalize\">{outcome.type.replace('_', ' ')}</span>\n                        </span>\n                        <h3 className=\"text-lg font-semibold text-gray-900\">{outcome.measurement}</h3>\n                        {getTrendIcon(trend)}\n                      </div>\n\n                      <div className=\"grid md:grid-cols-4 gap-4 text-sm\">\n                        <div>\n                          <span className=\"font-medium text-gray-700\">Value:</span>\n                          <p className=\"text-gray-900 font-semibold\">\n                            {outcome.value} {outcome.unit && outcome.unit}\n                          </p>\n                        </div>\n                        <div>\n                          <span className=\"font-medium text-gray-700\">Date:</span>\n                          <p className=\"text-gray-900\">{new Date(outcome.date).toLocaleDateString()}</p>\n                        </div>\n                        {outcome.treatmentRelated && (\n                          <div>\n                            <span className=\"font-medium text-gray-700\">Related Treatment:</span>\n                            <p className=\"text-gray-900\">{outcome.treatmentRelated}</p>\n                          </div>\n                        )}\n                        {trend && (\n                          <div>\n                            <span className=\"font-medium text-gray-700\">Trend:</span>\n                            <p className={`font-medium capitalize ${\n                              trend === 'improving' ? 'text-green-600' :\n                              trend === 'worsening' ? 'text-red-600' : 'text-yellow-600'\n                            }`}>\n                              {trend}\n                            </p>\n                          </div>\n                        )}\n                      </div>\n\n                      {outcome.notes && (\n                        <div className=\"mt-2 text-sm\">\n                          <span className=\"font-medium text-gray-700\">Notes:</span>\n                          <p className=\"text-gray-900\">{outcome.notes}</p>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"flex items-center space-x-2 ml-4\">\n                      <Tooltip content=\"Edit outcome\">\n                        <button\n                          onClick={() => handleEditOutcome(outcome)}\n                          className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\"\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </button>\n                      </Tooltip>\n                      <Tooltip content=\"Remove outcome\">\n                        <button\n                          onClick={() => handleRemoveOutcome(outcome.id)}\n                          className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </button>\n                      </Tooltip>\n                    </div>\n                  </div>\n                </Card>\n              );\n            })\n        )}\n      </div>\n\n      {/* Add/Edit Outcome Form */}\n      {showAddForm && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-2xl max-h-[90vh] overflow-hidden\">\n            <div className=\"p-6 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                {editingOutcome ? 'Edit Outcome' : 'Add Outcome'}\n              </h3>\n            </div>\n\n            <div className=\"p-6 space-y-4 overflow-y-auto max-h-[60vh]\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Outcome Type <span className=\"text-red-500\">*</span>\n                </label>\n                <select\n                  value={newOutcome.type || 'response'}\n                  onChange={(e) => setNewOutcome({ ...newOutcome, type: e.target.value as any })}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                >\n                  <option value=\"response\">Response Assessment</option>\n                  <option value=\"survival\">Survival Outcome</option>\n                  <option value=\"quality_of_life\">Quality of Life</option>\n                  <option value=\"biomarker\">Biomarker</option>\n                  <option value=\"functional_status\">Functional Status</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Measurement <span className=\"text-red-500\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  value={newOutcome.measurement || ''}\n                  onChange={(e) => setNewOutcome({ ...newOutcome, measurement: e.target.value })}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"e.g., Tumor Size, ECOG Score\"\n                  list=\"measurement-suggestions\"\n                />\n                <datalist id=\"measurement-suggestions\">\n                  {newOutcome.type && measurementSuggestions[newOutcome.type as keyof typeof measurementSuggestions]?.map((suggestion, idx) => (\n                    <option key={idx} value={suggestion} />\n                  ))}\n                </datalist>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Value <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newOutcome.value || ''}\n                    onChange={(e) => setNewOutcome({ ...newOutcome, value: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    placeholder=\"e.g., 5.2, Complete Response\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Unit</label>\n                  <input\n                    type=\"text\"\n                    value={newOutcome.unit || ''}\n                    onChange={(e) => setNewOutcome({ ...newOutcome, unit: e.target.value })}\n                    className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    placeholder=\"e.g., cm, %, ng/mL\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Date <span className=\"text-red-500\">*</span>\n                </label>\n                <input\n                  type=\"date\"\n                  value={newOutcome.date || ''}\n                  onChange={(e) => setNewOutcome({ ...newOutcome, date: e.target.value })}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Related Treatment</label>\n                <select\n                  value={newOutcome.treatmentRelated || ''}\n                  onChange={(e) => setNewOutcome({ ...newOutcome, treatmentRelated: e.target.value })}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                >\n                  <option value=\"\">Select treatment (optional)</option>\n                  {currentPatient.treatmentHistory?.map((treatment) => (\n                    <option key={treatment.id} value={treatment.regimen || treatment.treatmentType}>\n                      {treatment.regimen || treatment.treatmentType} ({new Date(treatment.startDate).toLocaleDateString()})\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\n                <textarea\n                  value={newOutcome.notes || ''}\n                  onChange={(e) => setNewOutcome({ ...newOutcome, notes: e.target.value })}\n                  rows={3}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"Additional notes about this outcome...\"\n                />\n              </div>\n            </div>\n\n            <div className=\"p-6 border-t border-gray-200 flex justify-between\">\n              <button\n                onClick={() => {\n                  setShowAddForm(false);\n                  setEditingOutcome(null);\n                  setNewOutcome({\n                    type: 'response',\n                    measurement: '',\n                    value: '',\n                    unit: '',\n                    date: new Date().toISOString().split('T')[0],\n                    notes: '',\n                    treatmentRelated: ''\n                  });\n                }}\n                className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={editingOutcome ? handleUpdateOutcome : handleAddOutcome}\n                className=\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700\"\n              >\n                {editingOutcome ? 'Update Outcome' : 'Add Outcome'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OutcomeTracker;","import React, { useState } from 'react';\nimport { usePatient } from '../../context/PatientContext';\nimport Card from '../UI/Card';\nimport Tooltip from '../UI/Tooltip';\nimport Alert from '../UI/Alert';\nimport { \n  Download, \n  Share2, \n  FileText, \n  Mail, \n  Printer,\n  Copy,\n  CheckCircle,\n  Calendar,\n  User,\n  Shield,\n  Info,\n  Settings\n} from 'lucide-react';\n\ninterface DataExporterProps {\n  patientId?: string;\n}\n\nconst DataExporter: React.FC<DataExporterProps> = ({ patientId }) => {\n  const { state } = usePatient();\n  const { currentPatient } = state;\n  const [selectedSections, setSelectedSections] = useState({\n    demographics: true,\n    medications: true,\n    allergies: true,\n    conditions: true,\n    vitals: true,\n    labValues: true,\n    genetics: false,\n    treatmentHistory: true,\n    notes: false\n  });\n  const [exportFormat, setExportFormat] = useState<'json' | 'csv' | 'pdf' | 'summary'>('summary');\n  const [shareMethod, setShareMethod] = useState<'download' | 'email' | 'print' | 'copy'>('download');\n  const [emailAddress, setEmailAddress] = useState('');\n  const [includeTimestamp, setIncludeTimestamp] = useState(true);\n  const [copied, setCopied] = useState(false);\n\n  if (!currentPatient) {\n    return (\n      <Card>\n        <div className=\"text-center py-8\">\n          <Download className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <h3 className=\"text-lg font-medium text-gray-500 mb-2\">No Patient Selected</h3>\n          <p className=\"text-gray-400\">Select a patient to export their data</p>\n        </div>\n      </Card>\n    );\n  }\n\n  const generateExportData = () => {\n    const exportData: any = {\n      patientInfo: {\n        id: currentPatient.id,\n        name: `${currentPatient.demographics.firstName} ${currentPatient.demographics.lastName}`,\n        mrn: currentPatient.demographics.mrn,\n        exportDate: new Date().toISOString(),\n        exportedBy: 'current-user' // TODO: Get from auth context\n      }\n    };\n\n    if (selectedSections.demographics) {\n      exportData.demographics = currentPatient.demographics;\n    }\n\n    if (selectedSections.medications) {\n      exportData.medications = currentPatient.medications;\n    }\n\n    if (selectedSections.allergies) {\n      exportData.allergies = currentPatient.allergies;\n    }\n\n    if (selectedSections.conditions) {\n      exportData.conditions = currentPatient.conditions;\n    }\n\n    if (selectedSections.vitals) {\n      exportData.vitals = currentPatient.vitals;\n    }\n\n    if (selectedSections.labValues) {\n      exportData.labValues = currentPatient.labValues;\n    }\n\n    if (selectedSections.genetics) {\n      exportData.genetics = currentPatient.genetics;\n    }\n\n    if (selectedSections.treatmentHistory) {\n      exportData.treatmentHistory = currentPatient.treatmentHistory;\n    }\n\n    if (selectedSections.notes) {\n      exportData.notes = currentPatient.notes;\n    }\n\n    return exportData;\n  };\n\n  const generateSummaryReport = () => {\n    const data = generateExportData();\n    const timestamp = includeTimestamp ? new Date().toLocaleString() : '';\n\n    return `\nPATIENT SUMMARY REPORT\n${timestamp ? `Generated: ${timestamp}` : ''}\n${'-'.repeat(50)}\n\nPATIENT INFORMATION\nName: ${data.patientInfo.name}\nMRN: ${data.patientInfo.mrn || 'Not specified'}\nDate of Birth: ${data.demographics?.dateOfBirth || 'Not specified'}\nSex: ${data.demographics?.sex || 'Not specified'}\n${data.demographics?.heightCm ? `Height: ${data.demographics.heightCm} cm` : ''}\n${data.demographics?.weightKg ? `Weight: ${data.demographics.weightKg} kg` : ''}\n\n${data.allergies?.length > 0 ? `\nALLERGIES\n${data.allergies.map((allergy: any) => \n  `• ${allergy.allergen} (${allergy.severity}) - ${allergy.reaction}`\n).join('\\n')}\n` : ''}\n\n${data.conditions?.length > 0 ? `\nMEDICAL CONDITIONS\n${data.conditions.map((condition: any) => \n  `• ${condition.name} (${condition.status}) - Diagnosed: ${new Date(condition.dateOfDiagnosis).toLocaleDateString()}`\n).join('\\n')}\n` : ''}\n\n${data.medications?.length > 0 ? `\nCURRENT MEDICATIONS\n${data.medications.filter((med: any) => med.isActive).map((med: any) => \n  `• ${med.drugName} ${med.dosage} ${med.frequency} (${med.route})`\n).join('\\n')}\n` : ''}\n\n${data.treatmentHistory?.length > 0 ? `\nTREATMENT HISTORY\n${data.treatmentHistory.map((treatment: any) => \n  `• ${treatment.treatmentType}${treatment.regimen ? ` - ${treatment.regimen}` : ''} (${new Date(treatment.startDate).toLocaleDateString()}${treatment.endDate ? ` to ${new Date(treatment.endDate).toLocaleDateString()}` : ' - ongoing'})`\n).join('\\n')}\n` : ''}\n\n${data.vitals?.length > 0 ? `\nRECENT VITALS (${new Date(data.vitals[data.vitals.length - 1].timestamp).toLocaleDateString()})\n${data.vitals[data.vitals.length - 1].bloodPressureSystolic ? `Blood Pressure: ${data.vitals[data.vitals.length - 1].bloodPressureSystolic}/${data.vitals[data.vitals.length - 1].bloodPressureDiastolic} mmHg` : ''}\n${data.vitals[data.vitals.length - 1].heartRate ? `Heart Rate: ${data.vitals[data.vitals.length - 1].heartRate} bpm` : ''}\n${data.vitals[data.vitals.length - 1].temperature ? `Temperature: ${data.vitals[data.vitals.length - 1].temperature}°C` : ''}\n${data.vitals[data.vitals.length - 1].performanceStatus !== undefined ? `ECOG Performance Status: ${data.vitals[data.vitals.length - 1].performanceStatus}` : ''}\n` : ''}\n\n${data.labValues?.length > 0 ? `\nRECENT LAB VALUES\n${data.labValues.slice(-5).map((lab: any) => \n  `• ${lab.labType}: ${lab.value} ${lab.unit} (${new Date(lab.timestamp).toLocaleDateString()})${lab.isAbnormal ? ' [ABNORMAL]' : ''}`\n).join('\\n')}\n` : ''}\n\n${data.genetics?.length > 0 ? `\nGENETIC INFORMATION\n${data.genetics.map((genetic: any) => \n  `• ${genetic.geneSymbol}: ${genetic.phenotype}${genetic.metabolizerStatus ? ` (${genetic.metabolizerStatus} metabolizer)` : ''}`\n).join('\\n')}\n` : ''}\n\n${'-'.repeat(50)}\nThis report was generated by OncoSafeRx\nCONFIDENTIAL MEDICAL INFORMATION\n    `.trim();\n  };\n\n  const convertToCSV = (data: any) => {\n    // Simple CSV conversion for medications (most commonly exported)\n    if (data.medications) {\n      const headers = ['Drug Name', 'Dosage', 'Frequency', 'Route', 'Start Date', 'Status'];\n      const rows = data.medications.map((med: any) => [\n        med.drugName || '',\n        med.dosage || '',\n        med.frequency || '',\n        med.route || '',\n        med.startDate || '',\n        med.isActive ? 'Active' : 'Inactive'\n      ]);\n      \n      return [headers, ...rows].map(row => \n        row.map(cell => `\"${cell}\"`).join(',')\n      ).join('\\n');\n    }\n    \n    return 'No data selected for CSV export';\n  };\n\n  const handleExport = async () => {\n    const data = generateExportData();\n    let content: string;\n    let filename: string;\n    let mimeType: string;\n\n    switch (exportFormat) {\n      case 'json':\n        content = JSON.stringify(data, null, 2);\n        filename = `patient-${currentPatient.demographics.firstName}-${currentPatient.demographics.lastName}-${Date.now()}.json`;\n        mimeType = 'application/json';\n        break;\n      case 'csv':\n        content = convertToCSV(data);\n        filename = `patient-medications-${Date.now()}.csv`;\n        mimeType = 'text/csv';\n        break;\n      case 'summary':\n        content = generateSummaryReport();\n        filename = `patient-summary-${Date.now()}.txt`;\n        mimeType = 'text/plain';\n        break;\n      default:\n        return;\n    }\n\n    switch (shareMethod) {\n      case 'download':\n        const blob = new Blob([content], { type: mimeType });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n        break;\n\n      case 'copy':\n        try {\n          await navigator.clipboard.writeText(content);\n          setCopied(true);\n          setTimeout(() => setCopied(false), 2000);\n        } catch (err) {\n          alert('Failed to copy to clipboard');\n        }\n        break;\n\n      case 'print':\n        const printWindow = window.open('', '_blank');\n        if (printWindow) {\n          printWindow.document.write(`\n            <html>\n              <head>\n                <title>Patient Report - ${currentPatient.demographics.firstName} ${currentPatient.demographics.lastName}</title>\n                <style>\n                  body { font-family: monospace; white-space: pre-wrap; padding: 20px; }\n                  @media print { body { margin: 0; } }\n                </style>\n              </head>\n              <body>${content}</body>\n            </html>\n          `);\n          printWindow.document.close();\n          printWindow.print();\n        }\n        break;\n\n      case 'email':\n        if (!emailAddress) {\n          alert('Please enter an email address');\n          return;\n        }\n        // In a real app, this would send via backend API\n        const subject = encodeURIComponent(`Patient Report - ${currentPatient.demographics.firstName} ${currentPatient.demographics.lastName}`);\n        const body = encodeURIComponent(content);\n        window.open(`mailto:${emailAddress}?subject=${subject}&body=${body}`);\n        break;\n    }\n  };\n\n  const toggleSection = (section: keyof typeof selectedSections) => {\n    setSelectedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  const selectAll = () => {\n    const allSelected = Object.values(selectedSections).every(Boolean);\n    const newState = Object.keys(selectedSections).reduce((acc, key) => ({\n      ...acc,\n      [key]: !allSelected\n    }), {});\n    setSelectedSections(newState as typeof selectedSections);\n  };\n\n  const getDataSize = () => {\n    const data = generateExportData();\n    const jsonString = JSON.stringify(data);\n    const sizeInBytes = new Blob([jsonString]).size;\n    \n    if (sizeInBytes < 1024) return `${sizeInBytes} bytes`;\n    if (sizeInBytes < 1024 * 1024) return `${(sizeInBytes / 1024).toFixed(1)} KB`;\n    return `${(sizeInBytes / (1024 * 1024)).toFixed(1)} MB`;\n  };\n\n  const getSectionCount = (section: keyof typeof selectedSections) => {\n    if (!currentPatient) return 0;\n    \n    switch (section) {\n      case 'medications': return currentPatient.medications?.length || 0;\n      case 'allergies': return currentPatient.allergies?.length || 0;\n      case 'conditions': return currentPatient.conditions?.length || 0;\n      case 'vitals': return currentPatient.vitals?.length || 0;\n      case 'labValues': return currentPatient.labValues?.length || 0;\n      case 'genetics': return currentPatient.genetics?.length || 0;\n      case 'treatmentHistory': return currentPatient.treatmentHistory?.length || 0;\n      case 'notes': return currentPatient.notes?.length || 0;\n      case 'demographics': return 1;\n      default: return 0;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <Card>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Download className=\"w-6 h-6 text-primary-600\" />\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">Data Export & Sharing</h2>\n              <p className=\"text-sm text-gray-600\">\n                Export {currentPatient.demographics.firstName} {currentPatient.demographics.lastName}'s data for reporting, backup, or sharing\n              </p>\n            </div>\n          </div>\n          <div className=\"text-sm text-gray-600\">\n            Export size: {getDataSize()}\n          </div>\n        </div>\n      </Card>\n\n      {/* Privacy Notice */}\n      <Alert type=\"warning\" title=\"Privacy & Security Notice\">\n        <div className=\"text-sm\">\n          <p className=\"mb-2\">\n            Patient data contains sensitive health information. Please ensure compliance with HIPAA and institutional policies when sharing or exporting data.\n          </p>\n          <ul className=\"list-disc list-inside space-y-1\">\n            <li>Only share data with authorized healthcare providers</li>\n            <li>Use secure channels for transmission</li>\n            <li>Remove or de-identify data when possible</li>\n            <li>Delete exported files after use</li>\n          </ul>\n        </div>\n      </Alert>\n\n      <div className=\"grid lg:grid-cols-2 gap-6\">\n        {/* Data Selection */}\n        <Card>\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Settings className=\"w-5 h-5 text-gray-400\" />\n              <h3 className=\"text-lg font-semibold text-gray-900\">Select Data to Export</h3>\n            </div>\n            <button\n              onClick={selectAll}\n              className=\"text-sm text-primary-600 hover:text-primary-700\"\n            >\n              {Object.values(selectedSections).every(Boolean) ? 'Deselect All' : 'Select All'}\n            </button>\n          </div>\n\n          <div className=\"space-y-3\">\n            {Object.entries(selectedSections).map(([section, selected]) => (\n              <label key={section} className=\"flex items-center justify-between p-3 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer\">\n                <div className=\"flex items-center space-x-3\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selected}\n                    onChange={() => toggleSection(section as keyof typeof selectedSections)}\n                    className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\n                  />\n                  <div>\n                    <span className=\"font-medium text-gray-900 capitalize\">\n                      {section.replace(/([A-Z])/g, ' $1').trim()}\n                    </span>\n                    <div className=\"text-sm text-gray-600\">\n                      {getSectionCount(section as keyof typeof selectedSections)} item{getSectionCount(section as keyof typeof selectedSections) !== 1 ? 's' : ''}\n                    </div>\n                  </div>\n                </div>\n                {section === 'genetics' && (\n                  <Tooltip content=\"Genetic data requires special handling and may have additional privacy considerations\">\n                    <Shield className=\"w-4 h-4 text-yellow-500\" />\n                  </Tooltip>\n                )}\n              </label>\n            ))}\n          </div>\n        </Card>\n\n        {/* Export Options */}\n        <Card>\n          <div className=\"flex items-center space-x-2 mb-4\">\n            <Share2 className=\"w-5 h-5 text-gray-400\" />\n            <h3 className=\"text-lg font-semibold text-gray-900\">Export Options</h3>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Export Format</label>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {[\n                  { value: 'summary', label: 'Summary Report', icon: FileText },\n                  { value: 'json', label: 'JSON Data', icon: Download },\n                  { value: 'csv', label: 'CSV (Medications)', icon: Download },\n                  { value: 'pdf', label: 'PDF Report', icon: FileText, disabled: true }\n                ].map(({ value, label, icon: Icon, disabled }) => (\n                  <button\n                    key={value}\n                    onClick={() => !disabled && setExportFormat(value as any)}\n                    disabled={disabled}\n                    className={`flex items-center space-x-2 p-3 border rounded-lg text-left transition-colors ${\n                      exportFormat === value && !disabled\n                        ? 'border-primary-500 bg-primary-50 text-primary-700'\n                        : disabled\n                        ? 'border-gray-200 bg-gray-50 text-gray-400 cursor-not-allowed'\n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                  >\n                    <Icon className=\"w-4 h-4\" />\n                    <span className=\"text-sm font-medium\">{label}</span>\n                    {disabled && <span className=\"text-xs\">(Coming Soon)</span>}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Sharing Method</label>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {[\n                  { value: 'download', label: 'Download File', icon: Download },\n                  { value: 'copy', label: 'Copy to Clipboard', icon: Copy },\n                  { value: 'print', label: 'Print Report', icon: Printer },\n                  { value: 'email', label: 'Email Report', icon: Mail }\n                ].map(({ value, label, icon: Icon }) => (\n                  <button\n                    key={value}\n                    onClick={() => setShareMethod(value as any)}\n                    className={`flex items-center space-x-2 p-3 border rounded-lg text-left transition-colors ${\n                      shareMethod === value\n                        ? 'border-primary-500 bg-primary-50 text-primary-700'\n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                  >\n                    <Icon className=\"w-4 h-4\" />\n                    <span className=\"text-sm font-medium\">{label}</span>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {shareMethod === 'email' && (\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email Address</label>\n                <input\n                  type=\"email\"\n                  value={emailAddress}\n                  onChange={(e) => setEmailAddress(e.target.value)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"recipient@hospital.org\"\n                />\n              </div>\n            )}\n\n            <div>\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={includeTimestamp}\n                  onChange={(e) => setIncludeTimestamp(e.target.checked)}\n                  className=\"rounded border-gray-300 text-primary-600 focus:ring-primary-500\"\n                />\n                <span className=\"text-sm text-gray-700\">Include timestamp in export</span>\n              </label>\n            </div>\n          </div>\n        </Card>\n      </div>\n\n      {/* Export Action */}\n      <Card>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">Ready to Export</h3>\n            <p className=\"text-sm text-gray-600\">\n              {Object.values(selectedSections).filter(Boolean).length} section{Object.values(selectedSections).filter(Boolean).length !== 1 ? 's' : ''} selected • {exportFormat.toUpperCase()} format • {shareMethod} method\n            </p>\n          </div>\n          <button\n            onClick={handleExport}\n            disabled={!Object.values(selectedSections).some(Boolean)}\n            className=\"flex items-center space-x-2 px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:bg-gray-300 disabled:cursor-not-allowed\"\n          >\n            {copied ? <CheckCircle className=\"w-4 h-4\" /> : <Download className=\"w-4 h-4\" />}\n            <span>{copied ? 'Copied!' : shareMethod === 'copy' ? 'Copy Data' : shareMethod === 'email' ? 'Send Email' : shareMethod === 'print' ? 'Print Report' : 'Download'}</span>\n          </button>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default DataExporter;","import React, { useState } from 'react';\nimport { usePatient } from '../../context/PatientContext';\nimport { PatientProfile } from '../../types';\nimport Card from '../UI/Card';\nimport Alert from '../UI/Alert';\nimport Tooltip from '../UI/Tooltip';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport MedicationManager from './MedicationManager';\nimport GenomicsManager from './GenomicsManager';\nimport TreatmentTimeline from './TreatmentTimeline';\nimport OutcomeTracker from './OutcomeTracker';\nimport DataExporter from './DataExporter';\nimport { \n  User, \n  Calendar, \n  Phone, \n  Mail, \n  MapPin, \n  Heart, \n  Activity, \n  AlertTriangle,\n  Plus,\n  Edit,\n  Eye,\n  Clock,\n  FileText,\n  Pill,\n  TestTube,\n  Dna,\n  Stethoscope,\n  History,\n  Bell,\n  Info,\n  Brain,\n  Shield,\n  TrendingUp,\n  MessageSquare,\n  Smartphone,\n  Target,\n  ArrowRight,\n  Sparkles,\n  Calculator,\n  Trash2\n} from 'lucide-react';\nimport { supabase } from '../../lib/supabase';\nimport { useToast } from '../UI/Toast';\n\nconst PatientDashboard: React.FC = () => {\n  const { state, actions } = usePatient();\n  const { showToast } = useToast();\n  const { currentPatient, alerts, isLoading, error } = state;\n  const [activeTab, setActiveTab] = useState<'overview' | 'medications' | 'labs' | 'genetics' | 'history' | 'outcomes' | 'export'>('overview');\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  if (!currentPatient) {\n    return (\n      <div className=\"text-center py-12\">\n        <User className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n        <p className=\"text-lg font-medium text-gray-500\">No Patient Selected</p>\n        <p className=\"text-sm text-gray-400\">Select a patient to view their clinical profile</p>\n      </div>\n    );\n  }\n\n  const calculateAge = (dateOfBirth: string): number => {\n    const today = new Date();\n    const birthDate = new Date(dateOfBirth);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDiff = today.getMonth() - birthDate.getMonth();\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  };\n\n  const calculateBSA = (heightCm?: number, weightKg?: number): number | null => {\n    if (!heightCm || !weightKg) return null;\n    // Mosteller formula: BSA = sqrt((height * weight) / 3600)\n    return Math.sqrt((heightCm * weightKg) / 3600);\n  };\n\n  const getActiveAlerts = () => alerts.filter(alert => \n    alert.patientId === currentPatient.id && !alert.isAcknowledged\n  );\n\n  const getRecentLabs = () => currentPatient.labValues\n    .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())\n    .slice(0, 5);\n\n  const getActiveMedications = () => currentPatient.medications.filter(med => med.isActive);\n\n  const getRecentVitals = () => currentPatient.vitals\n    .sort((a, b) => new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime())[0];\n\n  const tabs = [\n    { id: 'overview', label: 'Overview', icon: Eye },\n    { id: 'medications', label: 'Medications', icon: Pill },\n    { id: 'labs', label: 'Lab Values', icon: TestTube },\n    { id: 'genetics', label: 'Genomics', icon: Dna },\n    { id: 'history', label: 'History', icon: History },\n    { id: 'outcomes', label: 'Outcomes', icon: Activity },\n    { id: 'export', label: 'Export', icon: FileText },\n  ] as const;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Patient actions */}\n      <div className=\"flex items-center justify-end\">\n        <button\n          onClick={async () => {\n            if (!currentPatient) return;\n            if (!confirm('Delete this patient?')) return;\n            const deleted = currentPatient;\n            actions.removePatient(currentPatient.id);\n            showToast('success', 'Patient deleted', 5000, {\n              label: 'Undo',\n              onClick: async () => {\n                actions.setCurrentPatient(deleted);\n                try {\n                  const { data: sess } = await supabase.auth.getSession();\n                  const token = sess?.session?.access_token;\n                  if (token) {\n                    await fetch('/api/patients', {\n                      method: 'POST',\n                      headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\n                      body: JSON.stringify({ patient: deleted })\n                    });\n                  }\n                } catch {}\n              }\n            });\n          }}\n          className=\"inline-flex items-center px-3 py-1.5 text-sm bg-red-600 text-white rounded hover:bg-red-700\"\n        >\n          <Trash2 className=\"w-4 h-4 mr-1\" /> Delete Patient\n        </button>\n      </div>\n      {/* Error Display */}\n      {error && (\n        <Alert type=\"error\" title=\"Error\">\n          {error}\n        </Alert>\n      )}\n\n      {/* Active Alerts */}\n      {getActiveAlerts().length > 0 && (\n        <div className=\"space-y-2\">\n          {getActiveAlerts().map((alert, index) => (\n            <Alert\n              key={alert.id || `alert-${index}`}\n              type={alert.severity === 'critical' ? 'error' : alert.severity === 'high' ? 'warning' : 'info'}\n              title={alert.message}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  {alert.details && <p className=\"text-sm mt-1\">{alert.details}</p>}\n                  {alert.recommendedAction && (\n                    <p className=\"text-sm mt-2 font-medium\">\n                      Recommended: {alert.recommendedAction}\n                    </p>\n                  )}\n                </div>\n                <button\n                  onClick={() => actions.acknowledgeAlert(alert.id)}\n                  className=\"ml-4 px-3 py-1 text-xs bg-white bg-opacity-20 rounded hover:bg-opacity-30\"\n                >\n                  Acknowledge\n                </button>\n              </div>\n            </Alert>\n          ))}\n        </div>\n      )}\n\n      {/* Patient Header */}\n      <Card>\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex items-start space-x-4\">\n            <div className=\"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center\">\n              <User className=\"w-8 h-8 text-primary-600\" />\n            </div>\n            \n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">\n                {currentPatient.demographics.firstName} {currentPatient.demographics.lastName}\n              </h1>\n              <div className=\"flex items-center space-x-4 text-sm text-gray-600 mt-1\">\n                <div className=\"flex items-center space-x-1\">\n                  <Calendar className=\"w-4 h-4\" />\n                  <span>{calculateAge(currentPatient.demographics.dateOfBirth)} years old</span>\n                </div>\n                <div className=\"flex items-center space-x-1\">\n                  <User className=\"w-4 h-4\" />\n                  <span className=\"capitalize\">{currentPatient.demographics.sex}</span>\n                </div>\n                {currentPatient.demographics.mrn && (\n                  <div className=\"flex items-center space-x-1\">\n                    <FileText className=\"w-4 h-4\" />\n                    <span>MRN: {currentPatient.demographics.mrn}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Tooltip content=\"Edit patient information\">\n              <button className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\">\n                <Edit className=\"w-4 h-4\" />\n              </button>\n            </Tooltip>\n            <Tooltip content=\"View clinical alerts\">\n              <button className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 relative\">\n                <Bell className=\"w-4 h-4\" />\n                {getActiveAlerts().length > 0 && (\n                  <span className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full\"></span>\n                )}\n              </button>\n            </Tooltip>\n          </div>\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"mt-6 grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"bg-gray-50 rounded-lg p-3\">\n            <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n              <Activity className=\"w-4 h-4\" />\n              <span>Height/Weight</span>\n            </div>\n            <div className=\"text-lg font-semibold text-gray-900 mt-1\">\n              {currentPatient.demographics.heightCm ? `${currentPatient.demographics.heightCm} cm` : 'N/A'} / {' '}\n              {currentPatient.demographics.weightKg ? `${currentPatient.demographics.weightKg} kg` : 'N/A'}\n            </div>\n            {currentPatient.demographics.heightCm && currentPatient.demographics.weightKg && (\n              <div className=\"text-xs text-gray-500\">\n                BSA: {calculateBSA(currentPatient.demographics.heightCm, currentPatient.demographics.weightKg)?.toFixed(2)} m²\n              </div>\n            )}\n          </div>\n\n          <div className=\"bg-gray-50 rounded-lg p-3\">\n            <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n              <Pill className=\"w-4 h-4\" />\n              <span>Active Medications</span>\n            </div>\n            <div className=\"text-lg font-semibold text-gray-900 mt-1\">\n              {getActiveMedications().length}\n            </div>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-lg p-3\">\n            <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n              <AlertTriangle className=\"w-4 h-4\" />\n              <span>Allergies</span>\n            </div>\n            <div className=\"text-lg font-semibold text-gray-900 mt-1\">\n              {currentPatient.allergies.length}\n            </div>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-lg p-3\">\n            <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n              <Clock className=\"w-4 h-4\" />\n              <span>Last Updated</span>\n            </div>\n            <div className=\"text-lg font-semibold text-gray-900 mt-1\">\n              {new Date(currentPatient.lastUpdated).toLocaleDateString()}\n            </div>\n          </div>\n        </div>\n      </Card>\n\n      {/* Tabs */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n            {tabs.map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`group inline-flex items-center space-x-2 py-4 px-6 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span>{tab.label}</span>\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        <div className=\"p-6\">\n          {/* Overview Tab */}\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                {/* Contact Information */}\n                <Card>\n                  <div className=\"flex items-center space-x-2 mb-4\">\n                    <Phone className=\"w-5 h-5 text-gray-400\" />\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Contact Information</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    {currentPatient.demographics.contact?.phone && (\n                      <div className=\"flex items-center space-x-2\">\n                        <Phone className=\"w-4 h-4 text-gray-400\" />\n                        <span className=\"text-sm\">{currentPatient.demographics.contact.phone}</span>\n                      </div>\n                    )}\n                    {currentPatient.demographics.contact?.email && (\n                      <div className=\"flex items-center space-x-2\">\n                        <Mail className=\"w-4 h-4 text-gray-400\" />\n                        <span className=\"text-sm\">{currentPatient.demographics.contact.email}</span>\n                      </div>\n                    )}\n                    {currentPatient.demographics.contact?.address && (\n                      <div className=\"flex items-center space-x-2\">\n                        <MapPin className=\"w-4 h-4 text-gray-400\" />\n                        <span className=\"text-sm\">{currentPatient.demographics.contact.address}</span>\n                      </div>\n                    )}\n                  </div>\n                </Card>\n\n                {/* Recent Vitals */}\n                <Card>\n                  <div className=\"flex items-center space-x-2 mb-4\">\n                    <Stethoscope className=\"w-5 h-5 text-gray-400\" />\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Recent Vitals</h3>\n                    <Tooltip content=\"Most recent vital signs and performance status\">\n                      <Info className=\"w-4 h-4 text-gray-400\" />\n                    </Tooltip>\n                  </div>\n                  {getRecentVitals() ? (\n                    <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                      {getRecentVitals().bloodPressureSystolic && (\n                        <div key=\"blood-pressure\">\n                          <span className=\"text-gray-600\">BP:</span>\n                          <span className=\"ml-1 font-medium\">\n                            {getRecentVitals().bloodPressureSystolic}/{getRecentVitals().bloodPressureDiastolic}\n                          </span>\n                        </div>\n                      )}\n                      {getRecentVitals().heartRate && (\n                        <div key=\"heart-rate\">\n                          <span className=\"text-gray-600\">HR:</span>\n                          <span className=\"ml-1 font-medium\">{getRecentVitals().heartRate} bpm</span>\n                        </div>\n                      )}\n                      {getRecentVitals().temperature && (\n                        <div key=\"temperature\">\n                          <span className=\"text-gray-600\">Temp:</span>\n                          <span className=\"ml-1 font-medium\">{getRecentVitals().temperature}°C</span>\n                        </div>\n                      )}\n                      {getRecentVitals().performanceStatus !== undefined && (\n                        <div key=\"performance-status\">\n                          <span className=\"text-gray-600\">ECOG:</span>\n                          <span className=\"ml-1 font-medium\">{getRecentVitals().performanceStatus}</span>\n                        </div>\n                      )}\n                    </div>\n                  ) : (\n                    <p className=\"text-sm text-gray-500\">No recent vitals recorded</p>\n                  )}\n                </Card>\n              </div>\n\n              {/* Allergies */}\n              <Card>\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <AlertTriangle className=\"w-5 h-5 text-red-500\" />\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Allergies</h3>\n                    <Tooltip content=\"Known drug and environmental allergies with severity levels\">\n                      <Info className=\"w-4 h-4 text-gray-400\" />\n                    </Tooltip>\n                  </div>\n                  <button className=\"p-1 text-gray-400 hover:text-gray-600\">\n                    <Plus className=\"w-4 h-4\" />\n                  </button>\n                </div>\n                {currentPatient.allergies.length > 0 ? (\n                  <div className=\"space-y-2\">\n                    {currentPatient.allergies.map((allergy, index) => (\n                      <div\n                        key={allergy.id || `allergy-${index}`}\n                        className={`p-3 rounded-lg border-l-4 ${\n                          allergy.severity === 'life-threatening' ? 'border-red-500 bg-red-50' :\n                          allergy.severity === 'severe' ? 'border-orange-500 bg-orange-50' :\n                          allergy.severity === 'moderate' ? 'border-yellow-500 bg-yellow-50' :\n                          'border-gray-500 bg-gray-50'\n                        }`}\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <span className=\"font-medium text-gray-900\">{allergy.allergen}</span>\n                            <span className=\"text-sm text-gray-600 ml-2\">({allergy.allergenType})</span>\n                          </div>\n                          <span className={`text-xs px-2 py-1 rounded-full ${\n                            allergy.severity === 'life-threatening' ? 'bg-red-100 text-red-800' :\n                            allergy.severity === 'severe' ? 'bg-orange-100 text-orange-800' :\n                            allergy.severity === 'moderate' ? 'bg-yellow-100 text-yellow-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {allergy.severity}\n                          </span>\n                        </div>\n                        <p className=\"text-sm text-gray-600 mt-1\">{allergy.reaction}</p>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-sm text-gray-500\">No known allergies</p>\n                )}\n              </Card>\n\n              {/* Recent Lab Values */}\n              <Card>\n                <div className=\"flex items-center space-x-2 mb-4\">\n                  <TestTube className=\"w-5 h-5 text-gray-400\" />\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Recent Lab Values</h3>\n                  <Tooltip content=\"Most recent laboratory test results with reference ranges\">\n                    <Info className=\"w-4 h-4 text-gray-400\" />\n                  </Tooltip>\n                </div>\n                {getRecentLabs().length > 0 ? (\n                  <div className=\"overflow-hidden\">\n                    <table className=\"min-w-full divide-y divide-gray-200\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Test</th>\n                          <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Value</th>\n                          <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Reference</th>\n                          <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Date</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"divide-y divide-gray-200\">\n                        {getRecentLabs().map((lab, index) => (\n                          <tr key={`${lab.labType}-${lab.timestamp}-${index}`}>\n                            <td className=\"px-3 py-2 text-sm font-medium text-gray-900\">{lab.labType}</td>\n                            <td className={`px-3 py-2 text-sm ${lab.isAbnormal ? 'text-red-600 font-medium' : 'text-gray-900'}`}>\n                              {lab.value} {lab.unit}\n                              {lab.criticalFlag && <span className=\"ml-1 text-red-500\">⚠</span>}\n                            </td>\n                            <td className=\"px-3 py-2 text-sm text-gray-600\">{lab.referenceRange}</td>\n                            <td className=\"px-3 py-2 text-sm text-gray-600\">\n                              {new Date(lab.timestamp).toLocaleDateString()}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                ) : (\n                  <p className=\"text-sm text-gray-500\">No recent lab values</p>\n                )}\n              </Card>\n\n              {/* AI & Advanced Features Quick Access */}\n              <Card>\n                <div className=\"flex items-center space-x-2 mb-6\">\n                  <Sparkles className=\"w-5 h-5 text-purple-500\" />\n                  <h3 className=\"text-lg font-semibold text-gray-900\">AI & Advanced Features</h3>\n                  <Tooltip content=\"Access powerful AI and analytics tools for this patient\">\n                    <Info className=\"w-4 h-4 text-gray-400\" />\n                  </Tooltip>\n                </div>\n                \n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {/* AI Decision Engine */}\n                  <div className=\"group bg-gradient-to-br from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-4 hover:shadow-md transition-all cursor-pointer\"\n                       onClick={() => window.location.href = '/ai-decision-engine'}>\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                        <Brain className=\"w-5 h-5 text-blue-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold text-gray-900\">AI Decision Engine</h4>\n                        <p className=\"text-xs text-gray-600\">Clinical decision support</p>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-3\">Get AI-powered clinical recommendations and drug interaction analysis</p>\n                    <div className=\"flex items-center text-blue-600 text-sm font-medium group-hover:text-blue-700\">\n                      <span>Launch AI Analysis</span>\n                      <ArrowRight className=\"w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform\" />\n                    </div>\n                  </div>\n\n                  {/* Safety Alert System */}\n                  <div className=\"group bg-gradient-to-br from-green-50 to-emerald-50 border border-green-200 rounded-lg p-4 hover:shadow-md transition-all cursor-pointer\"\n                       onClick={() => window.location.href = '/safety-alerts'}>\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">\n                        <Shield className=\"w-5 h-5 text-green-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold text-gray-900\">Safety Alerts</h4>\n                        <p className=\"text-xs text-gray-600\">Real-time monitoring</p>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-3\">Monitor drug safety alerts and potential adverse events</p>\n                    <div className=\"flex items-center text-green-600 text-sm font-medium group-hover:text-green-700\">\n                      <span>View Safety Dashboard</span>\n                      <ArrowRight className=\"w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform\" />\n                    </div>\n                  </div>\n\n                  {/* ML Analytics */}\n                  <div className=\"group bg-gradient-to-br from-orange-50 to-red-50 border border-orange-200 rounded-lg p-4 hover:shadow-md transition-all cursor-pointer\"\n                       onClick={() => window.location.href = '/ml-analytics'}>\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-orange-100 rounded-lg flex items-center justify-center\">\n                        <TrendingUp className=\"w-5 h-5 text-orange-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold text-gray-900\">ML Analytics</h4>\n                        <p className=\"text-xs text-gray-600\">Advanced insights</p>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-3\">Access machine learning analytics and predictive models</p>\n                    <div className=\"flex items-center text-orange-600 text-sm font-medium group-hover:text-orange-700\">\n                      <span>Open Analytics</span>\n                      <ArrowRight className=\"w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform\" />\n                    </div>\n                  </div>\n\n                  {/* Predictive Outcomes */}\n                  <div className=\"group bg-gradient-to-br from-purple-50 to-pink-50 border border-purple-200 rounded-lg p-4 hover:shadow-md transition-all cursor-pointer\"\n                       onClick={() => window.location.href = '/predictive-outcomes'}>\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\n                        <Target className=\"w-5 h-5 text-purple-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold text-gray-900\">Predictive Outcomes</h4>\n                        <p className=\"text-xs text-gray-600\">Treatment predictions</p>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-3\">Generate AI-powered treatment outcome predictions</p>\n                    <div className=\"flex items-center text-purple-600 text-sm font-medium group-hover:text-purple-700\">\n                      <span>Generate Predictions</span>\n                      <ArrowRight className=\"w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform\" />\n                    </div>\n                  </div>\n\n                  {/* Clinical Communication */}\n                  <div className=\"group bg-gradient-to-br from-teal-50 to-cyan-50 border border-teal-200 rounded-lg p-4 hover:shadow-md transition-all cursor-pointer\"\n                       onClick={() => window.location.href = '/clinical-communication'}>\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-teal-100 rounded-lg flex items-center justify-center\">\n                        <MessageSquare className=\"w-5 h-5 text-teal-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold text-gray-900\">Team Communication</h4>\n                        <p className=\"text-xs text-gray-600\">HIPAA-compliant messaging</p>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-3\">Secure team communication and collaboration</p>\n                    <div className=\"flex items-center text-teal-600 text-sm font-medium group-hover:text-teal-700\">\n                      <span>Open Messenger</span>\n                      <ArrowRight className=\"w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform\" />\n                    </div>\n                  </div>\n\n                  {/* IoT Monitoring */}\n                  <div className=\"group bg-gradient-to-br from-indigo-50 to-blue-50 border border-indigo-200 rounded-lg p-4 hover:shadow-md transition-all cursor-pointer\"\n                       onClick={() => window.location.href = '/iot-monitoring'}>\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-indigo-100 rounded-lg flex items-center justify-center\">\n                        <Smartphone className=\"w-5 h-5 text-indigo-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold text-gray-900\">IoT Monitoring</h4>\n                        <p className=\"text-xs text-gray-600\">Connected devices</p>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-3\">Monitor connected health devices and sensors</p>\n                    <div className=\"flex items-center text-indigo-600 text-sm font-medium group-hover:text-indigo-700\">\n                      <span>View Devices</span>\n                      <ArrowRight className=\"w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform\" />\n                    </div>\n                  </div>\n                  \n                  {/* Opioid Risk Report */}\n                  <div className=\"group bg-gradient-to-br from-red-50 to-pink-50 border border-red-200 rounded-lg p-4 hover:shadow-md transition-all cursor-pointer\"\n                       onClick={() => window.location.href = '/opioid-risk-report'}>\n                    <div className=\"flex items-center space-x-3 mb-3\">\n                      <div className=\"w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center\">\n                        <Calculator className=\"w-5 h-5 text-red-600\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold text-gray-900\">Opioid Risk Report</h4>\n                        <p className=\"text-xs text-gray-600\">Addiction risk assessment</p>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-700 mb-3\">Comprehensive addiction risk and pharmacogenomic analysis</p>\n                    <div className=\"flex items-center text-red-600 text-sm font-medium group-hover:text-red-700\">\n                      <span>View Risk Assessment</span>\n                      <ArrowRight className=\"w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform\" />\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          )}\n\n          {/* Medications Tab */}\n          {activeTab === 'medications' && (\n            <MedicationManager />\n          )}\n\n          {/* Genomics Tab */}\n          {activeTab === 'genetics' && (\n            <GenomicsManager />\n          )}\n\n          {/* Treatment History Tab */}\n          {activeTab === 'history' && (\n            <TreatmentTimeline />\n          )}\n\n          {/* Outcomes Tab */}\n          {activeTab === 'outcomes' && (\n            <OutcomeTracker />\n          )}\n\n          {/* Export Tab */}\n          {activeTab === 'export' && (\n            <DataExporter />\n          )}\n\n          {/* Other tabs content will be implemented in subsequent components */}\n          {activeTab === 'labs' && (\n            <div className=\"text-center py-12\">\n              <div className=\"text-gray-400 mb-4\">\n                <TestTube className=\"w-12 h-12 mx-auto\" />\n              </div>\n              <p className=\"text-lg font-medium text-gray-500\">Lab Management</p>\n              <p className=\"text-sm text-gray-400\">Coming soon in Phase 2</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientDashboard;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { usePatient } from '../context/PatientContext';\nimport PatientSelector from '../components/Patient/PatientSelector';\nimport PatientDashboard from '../components/Patient/PatientDashboard';\nimport Card from '../components/UI/Card';\nimport { Users, Info } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '../components/UI/Tooltip';\n\nconst Patients: React.FC = () => {\n  const navigate = useNavigate();\n  const { state } = usePatient();\n  const { currentPatient } = state;\n\n  const handleCheckInteractions = () => {\n    if (currentPatient) {\n      navigate('/interactions?patient=' + currentPatient.id);\n    }\n  };\n\n  const handleGenomicAnalysis = () => {\n    if (currentPatient) {\n      navigate('/genomics?patient=' + currentPatient.id);\n    }\n  };\n\n  const handlePlanRegimen = () => {\n    if (currentPatient) {\n      navigate('/regimens?patient=' + currentPatient.id);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"text-center\">\n        <div className=\"flex items-center justify-center space-x-2 mb-4\">\n          <Users className=\"w-8 h-8 text-primary-600\" />\n          <h1 className=\"text-3xl font-bold text-gray-900\">Patient Management</h1>\n          <Tooltip content=\"Comprehensive patient profile management with clinical data, medication history, and safety alerts\">\n            <Info className=\"w-5 h-5 text-gray-400\" />\n          </Tooltip>\n        </div>\n        <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n          Search for existing patients or create new patient profiles to access comprehensive clinical information and decision support tools.\n        </p>\n        <div className=\"mt-3\">\n          <Link to=\"/patients/all\" className=\"text-sm text-blue-600 hover:underline\">View all patients</Link>\n        </div>\n      </div>\n\n      {/* Patient Selection */}\n      <div className=\"grid lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-1\">\n          <PatientSelector />\n        </div>\n        \n        <div className=\"lg:col-span-2\">\n          {currentPatient ? (\n            <PatientDashboard />\n          ) : (\n            <Card className=\"h-full flex items-center justify-center\">\n              <div className=\"text-center py-12\">\n                <Users className=\"w-16 h-16 mx-auto mb-4 text-gray-300\" />\n                <h3 className=\"text-xl font-semibold text-gray-500 mb-2\">No Patient Selected</h3>\n                <p className=\"text-gray-400 max-w-md mx-auto\">\n                  Search for an existing patient or create a new patient profile to begin accessing \n                  clinical information and decision support tools.\n                </p>\n              </div>\n            </Card>\n          )}\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      {currentPatient && (\n        <Card>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">Quick Actions</h3>\n              <p className=\"text-sm text-gray-600\">Common clinical workflows for this patient</p>\n            </div>\n            <div className=\"flex space-x-3\">\n              <button \n                onClick={handleCheckInteractions}\n                className=\"px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700\"\n              >\n                Check Interactions\n              </button>\n              <button \n                onClick={handleGenomicAnalysis}\n                className=\"px-4 py-2 bg-purple-600 text-white text-sm font-medium rounded-md hover:bg-purple-700\"\n              >\n                Genomic Analysis\n              </button>\n              <button \n                onClick={handlePlanRegimen}\n                className=\"px-4 py-2 bg-green-600 text-white text-sm font-medium rounded-md hover:bg-green-700\"\n              >\n                Plan Regimen\n              </button>\n            </div>\n          </div>\n        </Card>\n      )}\n\n      {/* Educational Content */}\n      <Card>\n        <div className=\"space-y-4\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Patient Safety Features</h2>\n          \n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <div>\n              <h3 className=\"font-medium text-gray-900 mb-2\">Allergy Checking</h3>\n              <p className=\"text-gray-600 text-sm\">\n                Automatic cross-referencing of patient allergies with drug selections to prevent \n                adverse reactions and ensure safe prescribing practices.\n              </p>\n            </div>\n            \n            <div>\n              <h3 className=\"font-medium text-gray-900 mb-2\">Clinical Alerts</h3>\n              <p className=\"text-gray-600 text-sm\">\n                Real-time alerts for drug interactions, contraindications, dosing concerns, \n                and monitoring requirements based on patient-specific factors.\n              </p>\n            </div>\n            \n            <div>\n              <h3 className=\"font-medium text-gray-900 mb-2\">Genomic Integration</h3>\n              <p className=\"text-gray-600 text-sm\">\n                Integration of pharmacogenomic data to personalize drug selection and dosing \n                based on individual genetic variants and metabolizer status.\n              </p>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default Patients;\n"],"names":["__iconNode","Scissors","createLucideIcon","ComprehensivePatientForm","onSubmit","onCancel","activeSection","setActiveSection","useState","formData","setFormData","newAllergy","setNewAllergy","newMedicalCondition","setNewMedicalCondition","newFamilyHistory","setNewFamilyHistory","sections","User","Phone","Heart","Activity","Shield","Home","updateFormData","path","value","prev","keys","updated","current","i","addAllergy","newAllergyWithId","addMedicalCondition","addFamilyHistory","errors","setErrors","validateRequiredFields","newErrors","handleSubmit","e","renderSection","jsxs","jsx","Tooltip","Info","allergy","index","_","condition","history","id","label","Icon","currentIndex","s","Save","PatientSelector","state","actions","usePatient","showToast","useToast","currentPatient","recentPatients","searchQuery","setSearchQuery","showCreateForm","setShowCreateForm","searchPatients","query","sess","supabase","token","params","resp","body","p","q","patient","searchResults","setSearchResults","isSearching","setIsSearching","showAllPatients","setShowAllPatients","handleSearch","results","error","selectPatient","handleSearchFocus","handleSearchBlur","createNewPatient","patientData","demographics","createdBy","newPatient","calculateAge","dateOfBirth","today","birthDate","age","monthDiff","Card","Star","Search","Plus","RefreshCw","Clock","deleted","Trash2","MedicationManager","patientId","showAddForm","setShowAddForm","editingMedication","setEditingMedication","filter","setFilter","newMedication","setNewMedication","Pill","getMedications","medications","med","handleAddMedication","medication","updatedMedications","handleEditMedication","handleUpdateMedication","handleRemoveMedication","medicationId","toggleMedicationStatus","getAdherenceColor","adherence","Filter","CheckCircle","Edit","GenomicsManager","editingGenetic","setEditingGenetic","newGenetic","setNewGenetic","Dna","getGeneticData","genetics","pharmacogenes","g","handleAddGenetic","genetic","updatedGenetics","handleEditGenetic","handleUpdateGenetic","handleRemoveGenetic","getMetabolizerColor","status","getSignificanceColor","significance","lower","getCommonPharmacoGenes","Alert","gene","description","hasData","newAlleles","TreatmentTimeline","editingTreatment","setEditingTreatment","typeFilter","setTypeFilter","newTreatment","setNewTreatment","newToxicity","setNewToxicity","History","getTreatments","treatments","t","drug","a","b","treatmentTimeline","useMemo","treatment","handleAddTreatment","updatedTreatments","handleEditTreatment","handleUpdateTreatment","handleRemoveTreatment","treatmentId","getResponseColor","response","getResponseIcon","TrendingUp","Minus","TrendingDown","getTreatmentIcon","type","Zap","Target","getToxicityColor","grade","addToxicity","sum","tox","idx","toxicity","d","OutcomeTracker","editingOutcome","setEditingOutcome","selectedType","setSelectedType","getOutcomes","outcomeNotes","note","newOutcome","setNewOutcome","outcomes","filteredOutcomes","o","handleAddOutcome","outcome","noteContent","updatedNotes","handleEditOutcome","handleUpdateOutcome","updatedOutcome","handleRemoveOutcome","outcomeId","getOutcomeTypeIcon","BarChart3","getOutcomeTypeColor","getResponseTrend","measurement","numValue","lowerMeasurement","getTrendIcon","trend","summaryStats","latestResponse","survivalOutcomes","qolOutcomes","biomarkerOutcomes","measurementSuggestions","suggestion","DataExporter","selectedSections","setSelectedSections","exportFormat","setExportFormat","shareMethod","setShareMethod","emailAddress","setEmailAddress","includeTimestamp","setIncludeTimestamp","copied","setCopied","Download","generateExportData","exportData","generateSummaryReport","data","timestamp","lab","convertToCSV","headers","rows","row","cell","handleExport","content","filename","mimeType","blob","url","printWindow","subject","toggleSection","section","selectAll","allSelected","newState","acc","key","getDataSize","jsonString","sizeInBytes","getSectionCount","Settings","selected","Share2","FileText","disabled","Copy","Printer","Mail","PatientDashboard","alerts","isLoading","activeTab","setActiveTab","LoadingSpinner","calculateBSA","heightCm","weightKg","getActiveAlerts","alert","getRecentLabs","getActiveMedications","getRecentVitals","tabs","Eye","TestTube","Calendar","Bell","AlertTriangle","tab","MapPin","Stethoscope","Sparkles","Brain","ArrowRight","MessageSquare","Smartphone","Calculator","Patients","navigate","useNavigate","handleCheckInteractions","handleGenomicAnalysis","handlePlanRegimen","Users","Link"],"mappings":"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","x_google_ignoreList":[0]}