{"version":3,"file":"AutoComplete-26JVlORf.js","sources":["../../src/components/UI/AutoComplete.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport { Search, X, ChevronDown, Check } from 'lucide-react';\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface AutoCompleteOption {\n  value: string;\n  label: string;\n  description?: string;\n  category?: string;\n  metadata?: any;\n}\n\ninterface AutoCompleteProps {\n  options: AutoCompleteOption[];\n  value?: string;\n  placeholder?: string;\n  onSelect: (option: AutoCompleteOption) => void;\n  onChange?: (value: string) => void;\n  loading?: boolean;\n  disabled?: boolean;\n  allowCustom?: boolean;\n  maxResults?: number;\n  minChars?: number;\n  caseSensitive?: boolean;\n  highlightMatches?: boolean;\n  groupByCategory?: boolean;\n  className?: string;\n  dropdownClassName?: string;\n  noResultsText?: string;\n  searchKeys?: (keyof AutoCompleteOption)[];\n  onSearch?: (query: string) => void;\n  debounceMs?: number;\n  disableFiltering?: boolean;\n}\n\nconst AutoComplete: React.FC<AutoCompleteProps> = ({\n  options,\n  value = '',\n  placeholder = 'Start typing to search...',\n  onSelect,\n  onChange,\n  loading = false,\n  disabled = false,\n  allowCustom = false,\n  maxResults = 10,\n  minChars = 1,\n  caseSensitive = false,\n  highlightMatches = true,\n  groupByCategory = false,\n  className = '',\n  dropdownClassName = '',\n  noResultsText = 'No results found',\n  searchKeys = ['label', 'value', 'description'],\n  onSearch,\n  debounceMs = 300,\n  disableFiltering = false,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [inputValue, setInputValue] = useState(value);\n  const [highlightedIndex, setHighlightedIndex] = useState(-1);\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  const inputRef = useRef<HTMLInputElement>(null);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const debounceRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Update input value when external value changes\n  useEffect(() => {\n    setInputValue(value);\n  }, [value]);\n\n  // Stable reference for searchKeys to prevent useEffect dependencies from changing\n  const stableSearchKeys = useMemo(() => searchKeys, [searchKeys?.join(',')]);\n\n  // Filter options based on search term (case-independent)\n  const filteredOptions = useMemo(() => {\n    // If filtering is disabled, return all options (server-side filtering)\n    if (disableFiltering) {\n      return options.slice(0, maxResults);\n    }\n\n    if (!searchTerm || searchTerm.length < minChars) return [];\n\n    const normalizedSearchTerm = caseSensitive ? searchTerm : searchTerm.toLowerCase();\n    \n    const filtered = options.filter(option => {\n      return stableSearchKeys.some(key => {\n        const fieldValue = option[key];\n        if (typeof fieldValue !== 'string') return false;\n        \n        const normalizedFieldValue = caseSensitive ? fieldValue : fieldValue.toLowerCase();\n        return normalizedFieldValue.includes(normalizedSearchTerm);\n      });\n    });\n\n    // Sort by relevance (exact match first, then starts with, then contains)\n    const sorted = filtered.sort((a, b) => {\n      const aLabel = caseSensitive ? a.label : a.label.toLowerCase();\n      const bLabel = caseSensitive ? b.label : b.label.toLowerCase();\n      \n      // Exact match\n      if (aLabel === normalizedSearchTerm) return -1;\n      if (bLabel === normalizedSearchTerm) return 1;\n      \n      // Starts with\n      if (aLabel.startsWith(normalizedSearchTerm) && !bLabel.startsWith(normalizedSearchTerm)) return -1;\n      if (bLabel.startsWith(normalizedSearchTerm) && !aLabel.startsWith(normalizedSearchTerm)) return 1;\n      \n      // Alphabetical\n      return aLabel.localeCompare(bLabel);\n    });\n\n    return sorted.slice(0, maxResults);\n  }, [searchTerm, options, minChars, maxResults, caseSensitive, disableFiltering, stableSearchKeys]);\n\n  // Group options by category\n  const groupedOptions = useMemo(() => {\n    if (!groupByCategory) return { '': filteredOptions };\n    \n    return filteredOptions.reduce((groups, option) => {\n      const category = option.category || 'Other';\n      if (!groups[category]) groups[category] = [];\n      groups[category].push(option);\n      return groups;\n    }, {} as Record<string, AutoCompleteOption[]>);\n  }, [filteredOptions, groupByCategory]);\n\n  // Handle input change with debouncing\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value;\n    setInputValue(newValue);\n    onChange?.(newValue);\n    \n    // Clear existing debounce\n    if (debounceRef.current) {\n      clearTimeout(debounceRef.current);\n    }\n    \n    // Set up new debounce\n    debounceRef.current = setTimeout(() => {\n      setSearchTerm(newValue);\n      onSearch?.(newValue);\n    }, debounceMs);\n    \n    if (newValue.length > 0) {\n      setIsOpen(true);\n    }\n    setHighlightedIndex(-1);\n  };\n\n  // Handle option selection\n  const handleSelect = (option: AutoCompleteOption) => {\n    setInputValue(option.label);\n    setSearchTerm('');\n    setIsOpen(false);\n    setHighlightedIndex(-1);\n    onSelect(option);\n    inputRef.current?.focus();\n  };\n\n  // Handle keyboard navigation\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    const key = e.key;\n    if (!isOpen) {\n      if (key === 'Enter' || key === 'ArrowDown' || key.toLowerCase() === 'j') {\n        setIsOpen(true);\n        return;\n      }\n      return;\n    }\n\n    switch (key) {\n      case 'ArrowDown':\n      case 'j':\n      case 'J':\n        e.preventDefault();\n        setHighlightedIndex(prev => \n          prev < filteredOptions.length - 1 ? prev + 1 : 0\n        );\n        break;\n      case 'ArrowUp':\n      case 'k':\n      case 'K':\n        e.preventDefault();\n        setHighlightedIndex(prev => \n          prev > 0 ? prev - 1 : filteredOptions.length - 1\n        );\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (highlightedIndex >= 0 && filteredOptions[highlightedIndex]) {\n          handleSelect(filteredOptions[highlightedIndex]);\n        } else if (allowCustom && inputValue) {\n          onSelect({ value: inputValue, label: inputValue });\n          setIsOpen(false);\n        }\n        break;\n      case 'Escape':\n        setIsOpen(false);\n        setHighlightedIndex(-1);\n        inputRef.current?.blur();\n        break;\n      case 'Tab':\n        setIsOpen(false);\n        break;\n    }\n  };\n\n  // Clear input\n  const handleClear = () => {\n    setInputValue('');\n    setSearchTerm('');\n    setIsOpen(false);\n    onChange?.('');\n    inputRef.current?.focus();\n  };\n\n  // Highlight matching text\n  const highlightText = (text: string, highlight: string) => {\n    if (!highlight || !highlightMatches) return text;\n    \n    const normalizedText = caseSensitive ? text : text.toLowerCase();\n    const normalizedHighlight = caseSensitive ? highlight : highlight.toLowerCase();\n    \n    const index = normalizedText.indexOf(normalizedHighlight);\n    if (index === -1) return text;\n    \n    return (\n      <>\n        {text.substring(0, index)}\n        <mark className=\"bg-yellow-200 font-medium\">\n          {text.substring(index, index + highlight.length)}\n        </mark>\n        {text.substring(index + highlight.length)}\n      </>\n    );\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current && \n        !dropdownRef.current.contains(event.target as Node) &&\n        !inputRef.current?.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  return (\n    <div className={`relative ${className}`}>\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n          <Search className=\"h-4 w-4 text-gray-400\" />\n        </div>\n        \n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n          onFocus={() => setIsOpen(true)}\n          placeholder={placeholder}\n          disabled={disabled || loading}\n          className=\"block w-full pl-9 pr-12 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm placeholder-gray-400 disabled:bg-gray-50 disabled:text-gray-500\"\n          autoComplete=\"off\"\n          spellCheck=\"false\"\n        />\n        \n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-2\">\n          {loading && (\n            <LoadingSpinner size=\"sm\" />\n          )}\n          \n          {inputValue && !loading && (\n            <button\n              type=\"button\"\n              onClick={handleClear}\n              className=\"p-1 text-gray-400 hover:text-gray-600 focus:outline-none focus:text-gray-600\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          )}\n          \n          <button\n            type=\"button\"\n            onClick={() => setIsOpen(!isOpen)}\n            className=\"p-1 text-gray-400 hover:text-gray-600 focus:outline-none focus:text-gray-600\"\n          >\n            <ChevronDown className={`h-4 w-4 transition-transform ${isOpen ? 'rotate-180' : ''}`} />\n          </button>\n        </div>\n      </div>\n\n      {isOpen && (\n        <div\n          ref={dropdownRef}\n          className={`absolute z-50 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg max-h-60 overflow-auto ${dropdownClassName}`}\n        >\n          {loading && (\n            <div className=\"p-4 text-center\">\n              <LoadingSpinner size=\"sm\" />\n              <p className=\"mt-2 text-sm text-gray-500\">Searching...</p>\n            </div>\n          )}\n          \n          {!loading && filteredOptions.length === 0 && searchTerm.length >= minChars && (\n            <div className=\"p-4 text-center text-sm text-gray-500\">\n              {noResultsText}\n              {allowCustom && (\n                <div className=\"mt-2\">\n                  <button\n                    onClick={() => handleSelect({ value: inputValue, label: inputValue })}\n                    className=\"text-blue-600 hover:text-blue-800 font-medium\"\n                  >\n                    Use \"{inputValue}\"\n                  </button>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {!loading && filteredOptions.length > 0 && (\n            <div className=\"py-1\">\n              {Object.entries(groupedOptions).map(([category, categoryOptions]) => (\n                <div key={category}>\n                  {groupByCategory && category && (\n                    <div className=\"px-3 py-1 text-xs font-semibold text-gray-500 uppercase tracking-wide bg-gray-50\">\n                      {category}\n                    </div>\n                  )}\n                  \n                  {categoryOptions.map((option, index) => {\n                    const globalIndex = filteredOptions.indexOf(option);\n                    const isHighlighted = highlightedIndex === globalIndex;\n                    \n                    return (\n                      <button\n                        key={`${option.value}-${index}`}\n                        onClick={() => handleSelect(option)}\n                        className={`w-full px-3 py-2 text-left hover:bg-gray-50 focus:bg-gray-50 focus:outline-none ${\n                          isHighlighted ? 'bg-blue-50 text-blue-900' : 'text-gray-900'\n                        }`}\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"text-sm font-medium truncate\">\n                              {highlightText(option.label, searchTerm)}\n                            </div>\n                            {option.description && (\n                              <div className=\"text-xs text-gray-500 truncate\">\n                                {highlightText(option.description, searchTerm)}\n                              </div>\n                            )}\n                          </div>\n                          {isHighlighted && (\n                            <Check className=\"h-4 w-4 text-blue-600 flex-shrink-0\" />\n                          )}\n                        </div>\n                      </button>\n                    );\n                  })}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AutoComplete;\n"],"names":["AutoComplete","options","value","placeholder","onSelect","onChange","loading","disabled","allowCustom","maxResults","minChars","caseSensitive","highlightMatches","groupByCategory","className","dropdownClassName","noResultsText","searchKeys","onSearch","debounceMs","disableFiltering","isOpen","setIsOpen","useState","inputValue","setInputValue","highlightedIndex","setHighlightedIndex","searchTerm","setSearchTerm","inputRef","useRef","dropdownRef","debounceRef","useEffect","stableSearchKeys","useMemo","filteredOptions","normalizedSearchTerm","option","key","fieldValue","a","b","aLabel","bLabel","groupedOptions","groups","category","handleInputChange","newValue","handleSelect","handleKeyDown","prev","handleClear","highlightText","text","highlight","normalizedText","normalizedHighlight","index","jsxs","Fragment","jsx","handleClickOutside","event","Search","LoadingSpinner","X","ChevronDown","categoryOptions","globalIndex","isHighlighted","Check"],"mappings":"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"}