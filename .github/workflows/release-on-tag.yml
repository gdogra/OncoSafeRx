name: Release on tag

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  verify_changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify CHANGELOG has section for tag
        shell: bash
        run: |
          set -euo pipefail
          TAG="${GITHUB_REF_NAME}"
          echo "Verifying CHANGELOG.md has section for: $TAG"
          if [[ ! -f CHANGELOG.md ]]; then
            echo "CHANGELOG.md not found" >&2
            exit 1
          fi
          awk -v tag="$TAG" '
            BEGIN{p=0}
            /^##[[:space:]]+v/ { if(p==1){ exit } }
            $0 ~ "^##[[:space:]]+" tag { p=1 }
            { if(p==1) print }
          ' CHANGELOG.md > RELEASE_NOTES.md || true
          if [[ ! -s RELEASE_NOTES.md ]]; then
            echo "No changelog section found for $TAG" >&2
            exit 1
          fi
          # Require some content beyond just the header line
          LINES=$(wc -l < RELEASE_NOTES.md | xargs)
          if [[ "$LINES" -lt 3 ]]; then
            echo "Changelog section for $TAG appears empty" >&2
            sed -n '1,20p' RELEASE_NOTES.md || true
            exit 1
          fi
          echo "CHANGELOG section found:" && sed -n '1,40p' RELEASE_NOTES.md

  create_release:
    runs-on: ubuntu-latest
    needs: verify_changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build release notes from CHANGELOG
        id: notes
        shell: bash
        run: |
          set -euo pipefail
          TAG="${GITHUB_REF_NAME}"
          echo "Building release notes for tag: $TAG"
          if [[ -f CHANGELOG.md ]]; then
            # Extract section starting at the matching version header until next version header
            awk -v tag="$TAG" '
              BEGIN{p=0}
              /^##[[:space:]]+v/ {
                if(p==1){ exit }
              }
              $0 ~ "^##[[:space:]]+" tag {
                p=1
              }
              { if(p==1) print }
            ' CHANGELOG.md > RELEASE_NOTES.md || true
          fi
          if [[ ! -s RELEASE_NOTES.md ]]; then
            echo "## $TAG" > RELEASE_NOTES.md
            echo >> RELEASE_NOTES.md
            echo "Release notes not found in CHANGELOG.md. Auto-generated release." >> RELEASE_NOTES.md
          fi
          echo "Generated notes:" && sed -n '1,120p' RELEASE_NOTES.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
