{"version":3,"file":"Collaboration-DqA7HPhK.js","sources":["../../src/services/collaborationService.ts","../../src/components/Collaboration/CollaborationDashboard.tsx","../../src/pages/Collaboration.tsx"],"sourcesContent":["import { \n  Team, \n  TeamMember, \n  TumorBoard, \n  TumorBoardCase, \n  ClinicalPathway, \n  CommunicationThread, \n  Message, \n  ConsultationRequest,\n  WorkflowTemplate,\n  ActionItem\n} from '../types/collaboration';\n\nexport class CollaborationService {\n  private readonly TEAMS_KEY = 'oncosaferx_teams';\n  private readonly TUMOR_BOARDS_KEY = 'oncosaferx_tumor_boards';\n  private readonly PATHWAYS_KEY = 'oncosaferx_pathways';\n  private readonly COMMUNICATIONS_KEY = 'oncosaferx_communications';\n  private readonly CONSULTATIONS_KEY = 'oncosaferx_consultations';\n  private readonly WORKFLOWS_KEY = 'oncosaferx_workflows';\n\n  // Team Management\n  public getTeams(): Team[] {\n    try {\n      const stored = localStorage.getItem(this.TEAMS_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Error retrieving teams:', error);\n      return [];\n    }\n  }\n\n  public getTeam(id: string): Team | null {\n    const teams = this.getTeams();\n    return teams.find(t => t.id === id) || null;\n  }\n\n  public saveTeam(team: Team): void {\n    try {\n      const teams = this.getTeams();\n      const existingIndex = teams.findIndex(t => t.id === team.id);\n      \n      if (existingIndex !== -1) {\n        teams[existingIndex] = team;\n      } else {\n        teams.push(team);\n      }\n      \n      localStorage.setItem(this.TEAMS_KEY, JSON.stringify(teams));\n    } catch (error) {\n      console.error('Error saving team:', error);\n      throw new Error('Failed to save team');\n    }\n  }\n\n  public addTeamMember(teamId: string, member: TeamMember): void {\n    const team = this.getTeam(teamId);\n    if (!team) throw new Error('Team not found');\n    \n    team.members.push(member);\n    team.lastActivity = new Date().toISOString();\n    this.saveTeam(team);\n  }\n\n  public removeTeamMember(teamId: string, memberId: string): void {\n    const team = this.getTeam(teamId);\n    if (!team) throw new Error('Team not found');\n    \n    team.members = team.members.filter(m => m.id !== memberId);\n    team.lastActivity = new Date().toISOString();\n    this.saveTeam(team);\n  }\n\n  public updateMemberAvailability(teamId: string, memberId: string, availability: any): void {\n    const team = this.getTeam(teamId);\n    if (!team) throw new Error('Team not found');\n    \n    const member = team.members.find(m => m.id === memberId);\n    if (!member) throw new Error('Member not found');\n    \n    member.availability = availability;\n    member.lastActive = new Date().toISOString();\n    this.saveTeam(team);\n  }\n\n  // Tumor Board Management\n  public getTumorBoards(): TumorBoard[] {\n    try {\n      const stored = localStorage.getItem(this.TUMOR_BOARDS_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Error retrieving tumor boards:', error);\n      return [];\n    }\n  }\n\n  public getTumorBoard(id: string): TumorBoard | null {\n    const boards = this.getTumorBoards();\n    return boards.find(b => b.id === id) || null;\n  }\n\n  public saveTumorBoard(board: TumorBoard): void {\n    try {\n      const boards = this.getTumorBoards();\n      const existingIndex = boards.findIndex(b => b.id === board.id);\n      \n      if (existingIndex !== -1) {\n        boards[existingIndex] = board;\n      } else {\n        boards.push(board);\n      }\n      \n      localStorage.setItem(this.TUMOR_BOARDS_KEY, JSON.stringify(boards));\n    } catch (error) {\n      console.error('Error saving tumor board:', error);\n      throw new Error('Failed to save tumor board');\n    }\n  }\n\n  public addTumorBoardCase(boardId: string, tumorBoardCase: TumorBoardCase): void {\n    const board = this.getTumorBoard(boardId);\n    if (!board) throw new Error('Tumor board not found');\n    \n    board.cases.push(tumorBoardCase);\n    board.lastModified = new Date().toISOString();\n    this.saveTumorBoard(board);\n  }\n\n  public updateTumorBoardCase(boardId: string, caseId: string, updates: Partial<TumorBoardCase>): void {\n    const board = this.getTumorBoard(boardId);\n    if (!board) throw new Error('Tumor board not found');\n    \n    const caseIndex = board.cases.findIndex(c => c.id === caseId);\n    if (caseIndex === -1) throw new Error('Case not found');\n    \n    board.cases[caseIndex] = { ...board.cases[caseIndex], ...updates };\n    board.lastModified = new Date().toISOString();\n    this.saveTumorBoard(board);\n  }\n\n  public addActionItem(boardId: string, actionItem: ActionItem): void {\n    const board = this.getTumorBoard(boardId);\n    if (!board) throw new Error('Tumor board not found');\n    \n    board.actionItems.push(actionItem);\n    board.lastModified = new Date().toISOString();\n    this.saveTumorBoard(board);\n  }\n\n  public updateActionItem(boardId: string, actionItemId: string, updates: Partial<ActionItem>): void {\n    const board = this.getTumorBoard(boardId);\n    if (!board) throw new Error('Tumor board not found');\n    \n    const itemIndex = board.actionItems.findIndex(a => a.id === actionItemId);\n    if (itemIndex === -1) throw new Error('Action item not found');\n    \n    board.actionItems[itemIndex] = { ...board.actionItems[itemIndex], ...updates };\n    board.lastModified = new Date().toISOString();\n    this.saveTumorBoard(board);\n  }\n\n  // Clinical Pathways\n  public getClinicalPathways(): ClinicalPathway[] {\n    try {\n      const stored = localStorage.getItem(this.PATHWAYS_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Error retrieving clinical pathways:', error);\n      return [];\n    }\n  }\n\n  public getClinicalPathway(id: string): ClinicalPathway | null {\n    const pathways = this.getClinicalPathways();\n    return pathways.find(p => p.id === id) || null;\n  }\n\n  public saveClinicalPathway(pathway: ClinicalPathway): void {\n    try {\n      const pathways = this.getClinicalPathways();\n      const existingIndex = pathways.findIndex(p => p.id === pathway.id);\n      \n      if (existingIndex !== -1) {\n        pathways[existingIndex] = pathway;\n      } else {\n        pathways.push(pathway);\n      }\n      \n      localStorage.setItem(this.PATHWAYS_KEY, JSON.stringify(pathways));\n    } catch (error) {\n      console.error('Error saving clinical pathway:', error);\n      throw new Error('Failed to save clinical pathway');\n    }\n  }\n\n  public findPathwaysForCondition(condition: string, stage?: string): ClinicalPathway[] {\n    const pathways = this.getClinicalPathways();\n    return pathways.filter(p => \n      p.condition.toLowerCase().includes(condition.toLowerCase()) &&\n      (!stage || !p.stage || p.stage === stage)\n    );\n  }\n\n  // Communication\n  public getCommunicationThreads(): CommunicationThread[] {\n    try {\n      const stored = localStorage.getItem(this.COMMUNICATIONS_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Error retrieving communications:', error);\n      return [];\n    }\n  }\n\n  public getCommunicationThread(id: string): CommunicationThread | null {\n    const threads = this.getCommunicationThreads();\n    return threads.find(t => t.id === id) || null;\n  }\n\n  public saveCommunicationThread(thread: CommunicationThread): void {\n    try {\n      const threads = this.getCommunicationThreads();\n      const existingIndex = threads.findIndex(t => t.id === thread.id);\n      \n      if (existingIndex !== -1) {\n        threads[existingIndex] = thread;\n      } else {\n        threads.push(thread);\n      }\n      \n      localStorage.setItem(this.COMMUNICATIONS_KEY, JSON.stringify(threads));\n    } catch (error) {\n      console.error('Error saving communication thread:', error);\n      throw new Error('Failed to save communication thread');\n    }\n  }\n\n  public addMessage(threadId: string, message: Message): void {\n    const thread = this.getCommunicationThread(threadId);\n    if (!thread) throw new Error('Communication thread not found');\n    \n    thread.messages.push(message);\n    thread.lastActivity = new Date().toISOString();\n    this.saveCommunicationThread(thread);\n  }\n\n  public getThreadsForUser(userId: string): CommunicationThread[] {\n    const threads = this.getCommunicationThreads();\n    return threads.filter(t => t.participants.includes(userId));\n  }\n\n  public getUnreadMessages(userId: string): Message[] {\n    const threads = this.getThreadsForUser(userId);\n    const unreadMessages: Message[] = [];\n    \n    threads.forEach(thread => {\n      thread.messages.forEach(message => {\n        if (message.senderId !== userId) {\n          const acknowledgment = message.acknowledgments.find(a => a.userId === userId);\n          if (!acknowledgment) {\n            unreadMessages.push(message);\n          }\n        }\n      });\n    });\n    \n    return unreadMessages;\n  }\n\n  // Consultations\n  public getConsultationRequests(): ConsultationRequest[] {\n    try {\n      const stored = localStorage.getItem(this.CONSULTATIONS_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Error retrieving consultation requests:', error);\n      return [];\n    }\n  }\n\n  public getConsultationRequest(id: string): ConsultationRequest | null {\n    const requests = this.getConsultationRequests();\n    return requests.find(r => r.id === id) || null;\n  }\n\n  public saveConsultationRequest(request: ConsultationRequest): void {\n    try {\n      const requests = this.getConsultationRequests();\n      const existingIndex = requests.findIndex(r => r.id === request.id);\n      \n      if (existingIndex !== -1) {\n        requests[existingIndex] = request;\n      } else {\n        requests.push(request);\n      }\n      \n      localStorage.setItem(this.CONSULTATIONS_KEY, JSON.stringify(requests));\n    } catch (error) {\n      console.error('Error saving consultation request:', error);\n      throw new Error('Failed to save consultation request');\n    }\n  }\n\n  public getConsultationRequestsForUser(userId: string): ConsultationRequest[] {\n    const requests = this.getConsultationRequests();\n    return requests.filter(r => \n      r.requesterId === userId || \n      r.assignedTo === userId ||\n      (r.consultantResponse?.responderId === userId)\n    );\n  }\n\n  public getPendingConsultations(specialty?: string): ConsultationRequest[] {\n    const requests = this.getConsultationRequests();\n    return requests.filter(r => \n      r.status === 'pending' &&\n      (!specialty || r.specialtyRequested === specialty)\n    );\n  }\n\n  // Workflows\n  public getWorkflowTemplates(): WorkflowTemplate[] {\n    try {\n      const stored = localStorage.getItem(this.WORKFLOWS_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('Error retrieving workflow templates:', error);\n      return [];\n    }\n  }\n\n  public getWorkflowTemplate(id: string): WorkflowTemplate | null {\n    const templates = this.getWorkflowTemplates();\n    return templates.find(t => t.id === id) || null;\n  }\n\n  public saveWorkflowTemplate(template: WorkflowTemplate): void {\n    try {\n      const templates = this.getWorkflowTemplates();\n      const existingIndex = templates.findIndex(t => t.id === template.id);\n      \n      if (existingIndex !== -1) {\n        templates[existingIndex] = template;\n      } else {\n        templates.push(template);\n      }\n      \n      localStorage.setItem(this.WORKFLOWS_KEY, JSON.stringify(templates));\n    } catch (error) {\n      console.error('Error saving workflow template:', error);\n      throw new Error('Failed to save workflow template');\n    }\n  }\n\n  // Analytics and Reporting\n  public getTeamActivitySummary(teamId: string, days: number = 30): any {\n    const team = this.getTeam(teamId);\n    if (!team) return null;\n\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - days);\n\n    const boards = this.getTumorBoards().filter(b => \n      b.attendees.some(a => team.members.some(m => m.id === a)) &&\n      new Date(b.scheduledDate) >= cutoffDate\n    );\n\n    const threads = this.getCommunicationThreads().filter(t =>\n      t.participants.some(p => team.members.some(m => m.id === p)) &&\n      new Date(t.lastActivity) >= cutoffDate\n    );\n\n    const consultations = this.getConsultationRequests().filter(r =>\n      team.members.some(m => m.id === r.requesterId || m.id === r.assignedTo) &&\n      new Date(r.createdDate) >= cutoffDate\n    );\n\n    return {\n      teamId,\n      period: `${days} days`,\n      tumorBoards: boards.length,\n      casesPresented: boards.reduce((sum, b) => sum + b.cases.length, 0),\n      communicationThreads: threads.length,\n      messages: threads.reduce((sum, t) => sum + t.messages.length, 0),\n      consultations: consultations.length,\n      actionItems: boards.reduce((sum, b) => sum + b.actionItems.length, 0),\n      completedActionItems: boards.reduce((sum, b) => \n        sum + b.actionItems.filter(a => a.status === 'completed').length, 0\n      )\n    };\n  }\n\n  public getTumorBoardMetrics(boardId?: string): any {\n    let boards = this.getTumorBoards();\n    if (boardId) {\n      const board = this.getTumorBoard(boardId);\n      boards = board ? [board] : [];\n    }\n\n    const totalCases = boards.reduce((sum, b) => sum + b.cases.length, 0);\n    const casesWithConsensus = boards.reduce((sum, b) => \n      sum + b.cases.filter(c => c.consensusReached).length, 0\n    );\n    const totalActionItems = boards.reduce((sum, b) => sum + b.actionItems.length, 0);\n    const completedActionItems = boards.reduce((sum, b) => \n      sum + b.actionItems.filter(a => a.status === 'completed').length, 0\n    );\n\n    return {\n      totalBoards: boards.length,\n      totalCases,\n      consensusRate: totalCases > 0 ? (casesWithConsensus / totalCases) * 100 : 0,\n      totalActionItems,\n      actionItemCompletionRate: totalActionItems > 0 ? (completedActionItems / totalActionItems) * 100 : 0,\n      averageCasesPerBoard: boards.length > 0 ? totalCases / boards.length : 0\n    };\n  }\n\n  // Sample data generation\n  // Fetch teams from API\n  public async fetchTeams(specialty?: string): Promise<Team[]> {\n    try {\n      const API_BASE = import.meta.env.VITE_API_URL || '/api';\n      const params = new URLSearchParams();\n      if (specialty) params.append('specialty', specialty);\n      \n      const response = await fetch(`${API_BASE}/collaboration/teams?${params}`);\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      \n      const data = await response.json();\n      return data.teams.map(this.transformApiTeam);\n    } catch (error) {\n      console.warn('Failed to fetch teams from API, using sample data:', error);\n      this.generateSampleData();\n      return this.getTeams();\n    }\n  }\n\n  // Fetch tumor boards from API\n  public async fetchTumorBoards(teamId?: string): Promise<TumorBoard[]> {\n    try {\n      const API_BASE = import.meta.env.VITE_API_URL || '/api';\n      const params = new URLSearchParams();\n      if (teamId) params.append('teamId', teamId);\n      \n      const response = await fetch(`${API_BASE}/collaboration/tumor-boards?${params}`);\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      \n      const data = await response.json();\n      return data.tumorBoards.map(this.transformApiTumorBoard);\n    } catch (error) {\n      console.warn('Failed to fetch tumor boards from API, using sample data:', error);\n      this.generateSampleData();\n      return this.getTumorBoards();\n    }\n  }\n\n  // Fetch clinical pathways from API\n  public async fetchClinicalPathways(cancerType?: string): Promise<ClinicalPathway[]> {\n    try {\n      const API_BASE = import.meta.env.VITE_API_URL || '/api';\n      const params = new URLSearchParams();\n      if (cancerType) params.append('cancerType', cancerType);\n      \n      const response = await fetch(`${API_BASE}/collaboration/pathways?${params}`);\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n      \n      const data = await response.json();\n      return data.pathways.map(this.transformApiPathway);\n    } catch (error) {\n      console.warn('Failed to fetch pathways from API, using sample data:', error);\n      this.generateSampleData();\n      return this.getClinicalPathways();\n    }\n  }\n\n  // Transform API data to frontend models\n  private transformApiTeam(apiTeam: any): Team {\n    return {\n      id: apiTeam.id,\n      name: apiTeam.name,\n      description: apiTeam.description,\n      specialty: apiTeam.specialty.toLowerCase(),\n      members: apiTeam.members.map((member: any) => ({\n        id: member.id,\n        name: member.name,\n        role: member.role.toLowerCase().replace(' ', '_'),\n        title: member.role,\n        email: member.email,\n        phone: member.phone,\n        specialty: member.specialization,\n        credentials: [],\n        availability: { status: 'available', lastSeen: new Date().toISOString() },\n        isLead: member.isLead || false\n      })),\n      settings: {\n        allowGuestAccess: false,\n        requireApproval: true,\n        autoArchive: true\n      },\n      createdBy: 'system',\n      createdAt: apiTeam.createdDate || new Date().toISOString(),\n      lastActivity: new Date().toISOString(),\n      isActive: apiTeam.isActive !== false\n    };\n  }\n\n  private transformApiTumorBoard(apiBoard: any): TumorBoard {\n    return {\n      id: apiBoard.id,\n      name: apiBoard.name,\n      description: apiBoard.description,\n      teamId: apiBoard.teamId,\n      schedule: {\n        frequency: 'weekly',\n        dayOfWeek: apiBoard.schedule.dayOfWeek.toLowerCase(),\n        time: apiBoard.schedule.time,\n        duration: apiBoard.schedule.duration,\n        timezone: 'America/New_York'\n      },\n      meetingLink: apiBoard.schedule.virtualLink || '',\n      cases: apiBoard.cases.map((case_: any) => ({\n        id: case_.id,\n        patientId: case_.patientId,\n        title: case_.title,\n        presenter: case_.presenter,\n        status: case_.status,\n        scheduledDate: case_.dateScheduled,\n        summary: case_.summary,\n        attachments: [],\n        discussion: {\n          points: case_.questions || [],\n          decisions: [],\n          followUpActions: []\n        }\n      })),\n      nextMeeting: apiBoard.nextMeeting,\n      isActive: apiBoard.isActive !== false\n    };\n  }\n\n  private transformApiPathway(apiPathway: any): ClinicalPathway {\n    return {\n      id: apiPathway.id,\n      name: apiPathway.name,\n      description: apiPathway.description,\n      cancerType: apiPathway.cancerType,\n      stage: apiPathway.stage,\n      version: apiPathway.version,\n      steps: apiPathway.steps.map((step: any) => ({\n        id: step.id,\n        order: step.order,\n        title: step.title,\n        description: step.description,\n        estimatedDuration: step.timeframe,\n        requirements: step.requirements || [],\n        responsibleRole: step.responsible,\n        isRequired: true,\n        branchingLogic: []\n      })),\n      outcomes: {\n        primaryEndpoints: apiPathway.outcomes?.primaryEndpoints || [],\n        qualityMetrics: apiPathway.outcomes?.qualityMetrics || []\n      },\n      lastUpdated: apiPathway.lastUpdated,\n      isActive: apiPathway.isActive !== false\n    };\n  }\n\n  public generateSampleData(): void {\n    const existingTeams = this.getTeams();\n    if (existingTeams.length > 0) return;\n\n    // Sample team\n    const sampleTeam: Team = {\n      id: 'team_001',\n      name: 'Thoracic Oncology Team',\n      description: 'Multidisciplinary team focused on lung cancer care',\n      specialty: 'oncology',\n      members: [\n        {\n          id: 'member_001',\n          name: 'Dr. Sarah Johnson',\n          role: 'physician',\n          title: 'Medical Oncologist',\n          email: 'sjohnson@hospital.com',\n          phone: '555-0101',\n          specialty: 'Medical Oncology',\n          credentials: ['MD', 'FACP'],\n          permissions: [\n            {\n              resource: 'patients',\n              actions: ['view', 'create', 'edit', 'approve']\n            }\n          ],\n          availability: {\n            status: 'available',\n            message: 'Available for consultations'\n          },\n          joinedDate: '2024-01-01',\n          lastActive: new Date().toISOString()\n        }\n      ],\n      patients: ['patient_001', 'patient_002'],\n      createdDate: '2024-01-01',\n      lastActivity: new Date().toISOString(),\n      isActive: true\n    };\n\n    this.saveTeam(sampleTeam);\n\n    // Sample tumor board\n    const sampleBoard: TumorBoard = {\n      id: 'board_001',\n      name: 'Weekly Thoracic Tumor Board',\n      type: 'weekly',\n      scheduledDate: new Date().toISOString(),\n      duration: 60,\n      location: 'Conference Room A',\n      chair: 'member_001',\n      presenters: ['member_001'],\n      attendees: ['member_001'],\n      cases: [],\n      agenda: [],\n      notes: '',\n      decisions: [],\n      actionItems: [],\n      status: 'scheduled',\n      createdBy: 'member_001',\n      createdDate: new Date().toISOString(),\n      lastModified: new Date().toISOString()\n    };\n\n    this.saveTumorBoard(sampleBoard);\n\n    // Sample clinical pathway\n    const samplePathway: ClinicalPathway = {\n      id: 'pathway_001',\n      name: 'Stage IV NSCLC Treatment Pathway',\n      version: '1.0',\n      condition: 'Non-small cell lung cancer',\n      stage: 'IV',\n      lineOfTherapy: 'First-line',\n      steps: [],\n      decisionPoints: [],\n      evidenceBasis: 'NCCN Guidelines 2024',\n      lastReviewed: new Date().toISOString(),\n      reviewBy: 'Dr. Johnson',\n      approvedBy: 'Medical Director',\n      effectiveDate: new Date().toISOString(),\n      patientsEnrolled: 0,\n      completionRate: 0,\n      outcomeMetrics: [],\n      varianceReporting: true,\n      qualityIndicators: []\n    };\n\n    this.saveClinicalPathway(samplePathway);\n  }\n}\n\nexport const collaborationService = new CollaborationService();","import React, { useState, useEffect } from 'react';\nimport { \n  Users, \n  Calendar, \n  MessageCircle, \n  CheckSquare, \n  Clock, \n  AlertTriangle,\n  Video,\n  FileText,\n  TrendingUp,\n  Activity,\n  Plus,\n  Filter,\n  Search,\n  Bell,\n  Settings\n} from 'lucide-react';\nimport { \n  Team, \n  TumorBoard, \n  CommunicationThread, \n  ConsultationRequest, \n  ActionItem,\n  TeamMember\n} from '../../types/collaboration';\nimport { collaborationService } from '../../services/collaborationService';\n\ninterface TabInfo {\n  id: string;\n  label: string;\n  icon: React.ComponentType<any>;\n  description: string;\n}\n\nconst CollaborationDashboard: React.FC = () => {\n  const [activeTab, setActiveTab] = useState('overview');\n  const [teams, setTeams] = useState<Team[]>([]);\n  const [tumorBoards, setTumorBoards] = useState<TumorBoard[]>([]);\n  const [communications, setCommunications] = useState<CommunicationThread[]>([]);\n  const [consultations, setConsultations] = useState<ConsultationRequest[]>([]);\n  const [currentUserId] = useState('member_001'); // Mock current user\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    setLoading(true);\n    try {\n      // Generate sample data if none exists\n      collaborationService.generateSampleData();\n      \n      setTeams(collaborationService.getTeams());\n      setTumorBoards(collaborationService.getTumorBoards());\n      setCommunications(collaborationService.getCommunicationThreads());\n      setConsultations(collaborationService.getConsultationRequests());\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const tabs: TabInfo[] = [\n    {\n      id: 'overview',\n      label: 'Overview',\n      icon: Activity,\n      description: 'Dashboard overview and key metrics'\n    },\n    {\n      id: 'teams',\n      label: 'Teams',\n      icon: Users,\n      description: 'Team management and member coordination'\n    },\n    {\n      id: 'tumor-boards',\n      label: 'Tumor Boards',\n      icon: Calendar,\n      description: 'Multidisciplinary case discussions'\n    },\n    {\n      id: 'communications',\n      label: 'Messages',\n      icon: MessageCircle,\n      description: 'Team communications and discussions'\n    },\n    {\n      id: 'consultations',\n      label: 'Consultations',\n      icon: FileText,\n      description: 'Specialty consultation requests'\n    },\n    {\n      id: 'tasks',\n      label: 'Tasks',\n      icon: CheckSquare,\n      description: 'Action items and task management'\n    }\n  ];\n\n  const getUnreadMessageCount = (): number => {\n    const unreadMessages = collaborationService.getUnreadMessages(currentUserId);\n    return unreadMessages.length;\n  };\n\n  const getPendingTaskCount = (): number => {\n    const allActionItems = tumorBoards.flatMap(board => board.actionItems);\n    return allActionItems.filter(item => \n      item.assignedTo === currentUserId && \n      item.status === 'pending'\n    ).length;\n  };\n\n  const getUpcomingBoardsCount = (): number => {\n    const today = new Date();\n    const nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);\n    \n    return tumorBoards.filter(board => {\n      const boardDate = new Date(board.scheduledDate);\n      return boardDate >= today && boardDate <= nextWeek;\n    }).length;\n  };\n\n  const renderOverviewTab = () => {\n    const unreadCount = getUnreadMessageCount();\n    const pendingTasks = getPendingTaskCount();\n    const upcomingBoards = getUpcomingBoardsCount();\n    const pendingConsultations = consultations.filter(c => c.status === 'pending').length;\n\n    return (\n      <div className=\"space-y-6\">\n        {/* Key Metrics */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium text-gray-600\">Unread Messages</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{unreadCount}</p>\n              </div>\n              <MessageCircle className=\"w-8 h-8 text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium text-gray-600\">Pending Tasks</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{pendingTasks}</p>\n              </div>\n              <CheckSquare className=\"w-8 h-8 text-orange-600\" />\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium text-gray-600\">Upcoming Boards</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{upcomingBoards}</p>\n              </div>\n              <Calendar className=\"w-8 h-8 text-green-600\" />\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium text-gray-600\">Consultations</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{pendingConsultations}</p>\n              </div>\n              <FileText className=\"w-8 h-8 text-purple-600\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Activity */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Activity</h3>\n          <div className=\"space-y-4\">\n            {tumorBoards.slice(0, 3).map(board => (\n              <div key={board.id} className=\"flex items-center space-x-3 p-3 hover:bg-gray-50 rounded-lg\">\n                <Calendar className=\"w-5 h-5 text-blue-600\" />\n                <div className=\"flex-1\">\n                  <p className=\"font-medium text-gray-900\">{board.name}</p>\n                  <p className=\"text-sm text-gray-500\">\n                    {new Date(board.scheduledDate).toLocaleDateString()} • {board.cases.length} cases\n                  </p>\n                </div>\n                <span className={`px-2 py-1 text-xs rounded-full ${\n                  board.status === 'scheduled' \n                    ? 'bg-blue-100 text-blue-800'\n                    : board.status === 'completed'\n                    ? 'bg-green-100 text-green-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {board.status}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Quick Actions */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Actions</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <button \n              onClick={() => setActiveTab('tumor-boards')}\n              className=\"flex items-center space-x-2 p-3 border border-gray-200 rounded-lg hover:bg-gray-50\"\n            >\n              <Plus className=\"w-5 h-5 text-blue-600\" />\n              <span className=\"font-medium text-gray-900\">Schedule Board</span>\n            </button>\n            \n            <button \n              onClick={() => setActiveTab('consultations')}\n              className=\"flex items-center space-x-2 p-3 border border-gray-200 rounded-lg hover:bg-gray-50\"\n            >\n              <FileText className=\"w-5 h-5 text-green-600\" />\n              <span className=\"font-medium text-gray-900\">Request Consult</span>\n            </button>\n            \n            <button \n              onClick={() => setActiveTab('communications')}\n              className=\"flex items-center space-x-2 p-3 border border-gray-200 rounded-lg hover:bg-gray-50\"\n            >\n              <MessageCircle className=\"w-5 h-5 text-purple-600\" />\n              <span className=\"font-medium text-gray-900\">Start Discussion</span>\n            </button>\n            \n            <button \n              onClick={() => setActiveTab('teams')}\n              className=\"flex items-center space-x-2 p-3 border border-gray-200 rounded-lg hover:bg-gray-50\"\n            >\n              <Users className=\"w-5 h-5 text-orange-600\" />\n              <span className=\"font-medium text-gray-900\">Manage Team</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderTeamsTab = () => (\n    <div className=\"space-y-6\">\n      {/* Team List */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Teams</h3>\n            <button className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Create Team\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"divide-y divide-gray-200\">\n          {teams.map(team => (\n            <div key={team.id} className=\"p-6 hover:bg-gray-50\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <h4 className=\"text-lg font-medium text-gray-900\">{team.name}</h4>\n                  <p className=\"text-sm text-gray-600 mt-1\">{team.description}</p>\n                  \n                  <div className=\"flex items-center space-x-4 mt-3\">\n                    <div className=\"flex items-center space-x-1\">\n                      <Users className=\"w-4 h-4 text-gray-400\" />\n                      <span className=\"text-sm text-gray-600\">{team.members.length} members</span>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-1\">\n                      <Activity className=\"w-4 h-4 text-gray-400\" />\n                      <span className=\"text-sm text-gray-600\">\n                        {team.patients.length} patients\n                      </span>\n                    </div>\n                    \n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      team.isActive \n                        ? 'bg-green-100 text-green-800'\n                        : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {team.isActive ? 'Active' : 'Inactive'}\n                    </span>\n                  </div>\n                </div>\n                \n                <div className=\"flex -space-x-2\">\n                  {team.members.slice(0, 3).map((member, index) => (\n                    <div \n                      key={member.id}\n                      className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center border-2 border-white\"\n                      title={member.name}\n                    >\n                      <span className=\"text-xs font-medium text-blue-800\">\n                        {member.name.split(' ').map(n => n[0]).join('')}\n                      </span>\n                    </div>\n                  ))}\n                  {team.members.length > 3 && (\n                    <div className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center border-2 border-white\">\n                      <span className=\"text-xs font-medium text-gray-600\">\n                        +{team.members.length - 3}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderTumorBoardsTab = () => (\n    <div className=\"space-y-6\">\n      {/* Upcoming Boards */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Tumor Boards</h3>\n            <button className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Schedule Board\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"divide-y divide-gray-200\">\n          {tumorBoards.map(board => (\n            <div key={board.id} className=\"p-6 hover:bg-gray-50\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3\">\n                    <h4 className=\"text-lg font-medium text-gray-900\">{board.name}</h4>\n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      board.status === 'scheduled' \n                        ? 'bg-blue-100 text-blue-800'\n                        : board.status === 'completed'\n                        ? 'bg-green-100 text-green-800'\n                        : board.status === 'in_progress'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {board.status.replace('_', ' ')}\n                    </span>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-4 mt-2 text-sm text-gray-600\">\n                    <div className=\"flex items-center space-x-1\">\n                      <Calendar className=\"w-4 h-4\" />\n                      <span>{new Date(board.scheduledDate).toLocaleDateString()}</span>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-1\">\n                      <Clock className=\"w-4 h-4\" />\n                      <span>{board.duration} min</span>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-1\">\n                      <Users className=\"w-4 h-4\" />\n                      <span>{board.attendees.length} attendees</span>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-1\">\n                      <FileText className=\"w-4 h-4\" />\n                      <span>{board.cases.length} cases</span>\n                    </div>\n                  </div>\n                  \n                  {board.virtualMeetingUrl && (\n                    <div className=\"mt-3\">\n                      <button className=\"inline-flex items-center px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm hover:bg-blue-200\">\n                        <Video className=\"w-4 h-4 mr-1\" />\n                        Join Meeting\n                      </button>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  {board.actionItems.length > 0 && (\n                    <div className=\"flex items-center space-x-1 text-sm text-orange-600\">\n                      <CheckSquare className=\"w-4 h-4\" />\n                      <span>{board.actionItems.filter(a => a.status === 'pending').length}</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderCommunicationsTab = () => (\n    <div className=\"space-y-6\">\n      {/* Communication Threads */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Messages</h3>\n            <button className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              New Discussion\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"divide-y divide-gray-200\">\n          {communications.map(thread => (\n            <div key={thread.id} className=\"p-6 hover:bg-gray-50 cursor-pointer\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2\">\n                    <h4 className=\"text-lg font-medium text-gray-900\">{thread.subject}</h4>\n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      thread.priority === 'high' \n                        ? 'bg-red-100 text-red-800'\n                        : thread.priority === 'medium'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {thread.priority}\n                    </span>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-4 mt-2 text-sm text-gray-600\">\n                    <span>{thread.participants.length} participants</span>\n                    <span>{thread.messages.length} messages</span>\n                    <span>{new Date(thread.lastActivity).toLocaleDateString()}</span>\n                  </div>\n                  \n                  {thread.messages.length > 0 && (\n                    <p className=\"text-sm text-gray-600 mt-2 line-clamp-2\">\n                      {thread.messages[thread.messages.length - 1].content}\n                    </p>\n                  )}\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  {thread.requiresResponse && (\n                    <AlertTriangle className=\"w-5 h-5 text-orange-500\" />\n                  )}\n                  \n                  <span className={`px-2 py-1 text-xs rounded-full ${\n                    thread.status === 'active' \n                      ? 'bg-green-100 text-green-800'\n                      : thread.status === 'resolved'\n                      ? 'bg-blue-100 text-blue-800'\n                      : 'bg-gray-100 text-gray-800'\n                  }`}>\n                    {thread.status}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n          \n          {communications.length === 0 && (\n            <div className=\"p-12 text-center\">\n              <MessageCircle className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Messages</h3>\n              <p className=\"text-gray-500\">Start a new discussion to collaborate with your team</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderConsultationsTab = () => (\n    <div className=\"space-y-6\">\n      {/* Consultation Requests */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"p-6 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Consultations</h3>\n            <button className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Request Consultation\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"divide-y divide-gray-200\">\n          {consultations.map(consult => (\n            <div key={consult.id} className=\"p-6 hover:bg-gray-50\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2\">\n                    <h4 className=\"text-lg font-medium text-gray-900\">\n                      {consult.specialtyRequested} Consultation\n                    </h4>\n                    <span className={`px-2 py-1 text-xs rounded-full ${\n                      consult.urgency === 'emergent' \n                        ? 'bg-red-100 text-red-800'\n                        : consult.urgency === 'urgent'\n                        ? 'bg-yellow-100 text-yellow-800'\n                        : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {consult.urgency}\n                    </span>\n                  </div>\n                  \n                  <p className=\"text-sm text-gray-600 mt-1\">{consult.clinicalQuestion}</p>\n                  \n                  <div className=\"flex items-center space-x-4 mt-2 text-sm text-gray-600\">\n                    <span>Patient: {consult.patientId}</span>\n                    <span>Requested: {new Date(consult.createdDate).toLocaleDateString()}</span>\n                    {consult.responseDeadline && (\n                      <span>Due: {new Date(consult.responseDeadline).toLocaleDateString()}</span>\n                    )}\n                  </div>\n                </div>\n                \n                <span className={`px-3 py-1 text-sm rounded-full ${\n                  consult.status === 'pending' \n                    ? 'bg-yellow-100 text-yellow-800'\n                    : consult.status === 'in_progress'\n                    ? 'bg-blue-100 text-blue-800'\n                    : consult.status === 'completed'\n                    ? 'bg-green-100 text-green-800'\n                    : 'bg-gray-100 text-gray-800'\n                }`}>\n                  {consult.status.replace('_', ' ')}\n                </span>\n              </div>\n            </div>\n          ))}\n          \n          {consultations.length === 0 && (\n            <div className=\"p-12 text-center\">\n              <FileText className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Consultations</h3>\n              <p className=\"text-gray-500\">Request specialty consultations when needed</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderTasksTab = () => {\n    const allActionItems = tumorBoards.flatMap(board => board.actionItems);\n    const userTasks = allActionItems.filter(item => item.assignedTo === currentUserId);\n\n    return (\n      <div className=\"space-y-6\">\n        {/* Task Summary */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n            <div className=\"text-center\">\n              <p className=\"text-2xl font-bold text-gray-900\">\n                {userTasks.filter(t => t.status === 'pending').length}\n              </p>\n              <p className=\"text-sm text-gray-600\">Pending</p>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n            <div className=\"text-center\">\n              <p className=\"text-2xl font-bold text-blue-600\">\n                {userTasks.filter(t => t.status === 'in_progress').length}\n              </p>\n              <p className=\"text-sm text-gray-600\">In Progress</p>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n            <div className=\"text-center\">\n              <p className=\"text-2xl font-bold text-green-600\">\n                {userTasks.filter(t => t.status === 'completed').length}\n              </p>\n              <p className=\"text-sm text-gray-600\">Completed</p>\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n            <div className=\"text-center\">\n              <p className=\"text-2xl font-bold text-red-600\">\n                {userTasks.filter(t => t.status === 'overdue').length}\n              </p>\n              <p className=\"text-sm text-gray-600\">Overdue</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Task List */}\n        <div className=\"bg-white rounded-lg border border-gray-200\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">My Tasks</h3>\n          </div>\n          \n          <div className=\"divide-y divide-gray-200\">\n            {userTasks.map(task => (\n              <div key={task.id} className=\"p-6 hover:bg-gray-50\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <h4 className=\"text-lg font-medium text-gray-900\">{task.description}</h4>\n                    \n                    <div className=\"flex items-center space-x-4 mt-2 text-sm text-gray-600\">\n                      <span>Due: {new Date(task.dueDate).toLocaleDateString()}</span>\n                      <span className={`px-2 py-1 text-xs rounded-full ${\n                        task.priority === 'high' \n                          ? 'bg-red-100 text-red-800'\n                          : task.priority === 'medium'\n                          ? 'bg-yellow-100 text-yellow-800'\n                          : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {task.priority}\n                      </span>\n                    </div>\n                    \n                    {task.notes && (\n                      <p className=\"text-sm text-gray-600 mt-2\">{task.notes}</p>\n                    )}\n                  </div>\n                  \n                  <span className={`px-3 py-1 text-sm rounded-full ${\n                    task.status === 'pending' \n                      ? 'bg-yellow-100 text-yellow-800'\n                      : task.status === 'in_progress'\n                      ? 'bg-blue-100 text-blue-800'\n                      : task.status === 'completed'\n                      ? 'bg-green-100 text-green-800'\n                      : 'bg-red-100 text-red-800'\n                  }`}>\n                    {task.status.replace('_', ' ')}\n                  </span>\n                </div>\n              </div>\n            ))}\n            \n            {userTasks.length === 0 && (\n              <div className=\"p-12 text-center\">\n                <CheckSquare className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Tasks</h3>\n                <p className=\"text-gray-500\">You have no assigned tasks at this time</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-96\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading collaboration data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Collaboration Dashboard</h1>\n        <p className=\"text-gray-600\">\n          Coordinate multidisciplinary care and manage team communications\n        </p>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8 overflow-x-auto\">\n          {tabs.map(({ id, label, icon: Icon, description }) => (\n            <button\n              key={id}\n              onClick={() => setActiveTab(id)}\n              className={`group inline-flex items-center py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap ${\n                activeTab === id\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <Icon className={`w-5 h-5 mr-2 ${\n                activeTab === id ? 'text-blue-500' : 'text-gray-400 group-hover:text-gray-500'\n              }`} />\n              <div className=\"text-left\">\n                <div>{label}</div>\n                <div className=\"text-xs text-gray-400\">{description}</div>\n              </div>\n              {id === 'communications' && getUnreadMessageCount() > 0 && (\n                <span className=\"ml-2 inline-flex items-center justify-center w-5 h-5 text-xs font-medium text-white bg-red-500 rounded-full\">\n                  {getUnreadMessageCount()}\n                </span>\n              )}\n              {id === 'tasks' && getPendingTaskCount() > 0 && (\n                <span className=\"ml-2 inline-flex items-center justify-center w-5 h-5 text-xs font-medium text-white bg-orange-500 rounded-full\">\n                  {getPendingTaskCount()}\n                </span>\n              )}\n            </button>\n          ))}\n        </nav>\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"min-h-96\">\n        {activeTab === 'overview' && renderOverviewTab()}\n        {activeTab === 'teams' && renderTeamsTab()}\n        {activeTab === 'tumor-boards' && renderTumorBoardsTab()}\n        {activeTab === 'communications' && renderCommunicationsTab()}\n        {activeTab === 'consultations' && renderConsultationsTab()}\n        {activeTab === 'tasks' && renderTasksTab()}\n      </div>\n    </div>\n  );\n};\n\nexport default CollaborationDashboard;","import React from 'react';\nimport CollaborationDashboard from '../components/Collaboration/CollaborationDashboard';\n\nconst Collaboration: React.FC = () => {\n  return <CollaborationDashboard />;\n};\n\nexport default Collaboration;"],"names":["CollaborationService","stored","error","id","t","team","teams","existingIndex","teamId","member","memberId","m","availability","b","board","boards","boardId","tumorBoardCase","caseId","updates","caseIndex","c","actionItem","actionItemId","itemIndex","a","p","pathway","pathways","condition","stage","thread","threads","threadId","message","userId","unreadMessages","r","request","requests","specialty","template","templates","days","cutoffDate","consultations","sum","totalCases","casesWithConsensus","totalActionItems","completedActionItems","API_BASE","params","response","cancerType","apiTeam","apiBoard","case_","apiPathway","step","sampleTeam","sampleBoard","samplePathway","collaborationService","CollaborationDashboard","activeTab","setActiveTab","useState","setTeams","tumorBoards","setTumorBoards","communications","setCommunications","setConsultations","currentUserId","loading","setLoading","useEffect","loadData","tabs","Activity","Users","Calendar","MessageCircle","FileText","CheckSquare","getUnreadMessageCount","getPendingTaskCount","item","getUpcomingBoardsCount","today","nextWeek","boardDate","renderOverviewTab","unreadCount","pendingTasks","upcomingBoards","pendingConsultations","jsxs","jsx","Plus","renderTeamsTab","index","n","renderTumorBoardsTab","Clock","Video","renderCommunicationsTab","AlertTriangle","renderConsultationsTab","consult","renderTasksTab","userTasks","task","label","Icon","description","Collaboration"],"mappings":"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"}