import express from 'express';
import PDFDocument from 'pdfkit';
import REGIMENS from '../data/regimens.js';

const router = express.Router();

// Generate a simple ePA pack (GET for convenience)
// /api/export/epa?regimenId=FOLFOX-6&ANC=1200&platelets=90000&CrCl=25&reason=...&payer=...
router.get('/', (req, res) => {
  const { regimenId, payer, reason } = req.query;
  const labs = {
    ANC: req.query.ANC, platelets: req.query.platelets, CrCl: req.query.CrCl, LVEF: req.query.LVEF
  };
  const reg = REGIMENS.find(r => r.id.toLowerCase() === String(regimenId || '').toLowerCase());
  if (!reg) return res.status(400).json({ error: 'regimenId required or not found' });

  res.setHeader('Content-Type', 'application/pdf');
  res.setHeader('Content-Disposition', `attachment; filename="epa-${reg.id}.pdf"`);

  const doc = new PDFDocument({ margin: 40 });
  doc.pipe(res);
  doc.fontSize(16).text(`ePA Pack: ${reg.name}`, { underline: true });
  doc.moveDown();
  if (payer) doc.fontSize(12).text(`Payer: ${payer}`);
  doc.fontSize(12).text(`Indication: ${reg.indication}`);
  doc.moveDown().fontSize(14).text('Regimen Components');
  (reg.components || []).forEach(c => doc.fontSize(12).text(`• ${c.name}: ${c.dose}`));
  doc.moveDown().fontSize(14).text('Clinical Context (Labs)');
  Object.entries(labs).forEach(([k,v]) => { if (v) doc.fontSize(12).text(`• ${k}: ${v}`); });
  if (reason) { doc.moveDown().fontSize(14).text('Justification'); doc.fontSize(12).text(String(reason)); }
  doc.moveDown().fontSize(10).text('Generated by OncoSafeRx for prior authorization/support.');
  doc.end();
});

export default router;

