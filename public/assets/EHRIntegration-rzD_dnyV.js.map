{"version":3,"file":"EHRIntegration-rzD_dnyV.js","sources":["../../src/services/fhirService.ts","../../src/components/EHR/EHRIntegration.tsx"],"sourcesContent":["import { PatientProfile, PatientDemographics, PatientLabValues, PatientAllergy, PatientMedication, PatientCondition } from '../types';\n\n// FHIR R4 Resource Interfaces\nexport interface FHIRBundle {\n  resourceType: 'Bundle';\n  id?: string;\n  type: 'collection' | 'searchset' | 'history' | 'transaction' | 'document';\n  total?: number;\n  entry?: FHIRBundleEntry[];\n}\n\nexport interface FHIRBundleEntry {\n  fullUrl?: string;\n  resource: FHIRResource;\n  search?: {\n    mode: 'match' | 'include';\n    score?: number;\n  };\n}\n\nexport interface FHIRResource {\n  resourceType: string;\n  id?: string;\n  meta?: {\n    versionId?: string;\n    lastUpdated?: string;\n    profile?: string[];\n  };\n}\n\nexport interface FHIRPatient extends FHIRResource {\n  resourceType: 'Patient';\n  identifier?: Array<{\n    use?: string;\n    type?: FHIRCodeableConcept;\n    system?: string;\n    value?: string;\n  }>;\n  active?: boolean;\n  name?: Array<{\n    use?: 'usual' | 'official' | 'temp' | 'nickname' | 'anonymous' | 'old' | 'maiden';\n    family?: string;\n    given?: string[];\n    prefix?: string[];\n    suffix?: string[];\n  }>;\n  telecom?: Array<{\n    system?: 'phone' | 'fax' | 'email' | 'pager' | 'url' | 'sms' | 'other';\n    value?: string;\n    use?: 'home' | 'work' | 'temp' | 'old' | 'mobile';\n  }>;\n  gender?: 'male' | 'female' | 'other' | 'unknown';\n  birthDate?: string;\n  address?: Array<{\n    use?: 'home' | 'work' | 'temp' | 'old' | 'billing';\n    type?: 'postal' | 'physical' | 'both';\n    text?: string;\n    line?: string[];\n    city?: string;\n    district?: string;\n    state?: string;\n    postalCode?: string;\n    country?: string;\n  }>;\n}\n\nexport interface FHIRObservation extends FHIRResource {\n  resourceType: 'Observation';\n  status: 'registered' | 'preliminary' | 'final' | 'amended' | 'corrected' | 'cancelled' | 'entered-in-error' | 'unknown';\n  category?: FHIRCodeableConcept[];\n  code: FHIRCodeableConcept;\n  subject?: FHIRReference;\n  effectiveDateTime?: string;\n  effectivePeriod?: {\n    start?: string;\n    end?: string;\n  };\n  valueQuantity?: {\n    value?: number;\n    unit?: string;\n    system?: string;\n    code?: string;\n  };\n  valueString?: string;\n  valueBoolean?: boolean;\n  interpretation?: FHIRCodeableConcept[];\n  referenceRange?: Array<{\n    low?: { value?: number; unit?: string };\n    high?: { value?: number; unit?: string };\n    text?: string;\n  }>;\n}\n\nexport interface FHIRMedicationRequest extends FHIRResource {\n  resourceType: 'MedicationRequest';\n  status: 'active' | 'on-hold' | 'cancelled' | 'completed' | 'entered-in-error' | 'stopped' | 'draft' | 'unknown';\n  intent: 'proposal' | 'plan' | 'order' | 'original-order' | 'reflex-order' | 'filler-order' | 'instance-order' | 'option';\n  medicationCodeableConcept?: FHIRCodeableConcept;\n  medicationReference?: FHIRReference;\n  subject: FHIRReference;\n  authoredOn?: string;\n  dosageInstruction?: Array<{\n    text?: string;\n    timing?: any;\n    route?: FHIRCodeableConcept;\n    doseAndRate?: Array<{\n      doseQuantity?: {\n        value?: number;\n        unit?: string;\n        system?: string;\n        code?: string;\n      };\n    }>;\n  }>;\n}\n\nexport interface FHIRAllergyIntolerance extends FHIRResource {\n  resourceType: 'AllergyIntolerance';\n  clinicalStatus?: FHIRCodeableConcept;\n  verificationStatus?: FHIRCodeableConcept;\n  type?: 'allergy' | 'intolerance';\n  category?: Array<'food' | 'medication' | 'environment' | 'biologic'>;\n  criticality?: 'low' | 'high' | 'unable-to-assess';\n  code?: FHIRCodeableConcept;\n  patient: FHIRReference;\n  recordedDate?: string;\n  reaction?: Array<{\n    substance?: FHIRCodeableConcept;\n    manifestation: FHIRCodeableConcept[];\n    severity?: 'mild' | 'moderate' | 'severe';\n  }>;\n}\n\nexport interface FHIRCondition extends FHIRResource {\n  resourceType: 'Condition';\n  clinicalStatus?: FHIRCodeableConcept;\n  verificationStatus?: FHIRCodeableConcept;\n  category?: FHIRCodeableConcept[];\n  severity?: FHIRCodeableConcept;\n  code?: FHIRCodeableConcept;\n  subject: FHIRReference;\n  onsetDateTime?: string;\n  onsetPeriod?: {\n    start?: string;\n    end?: string;\n  };\n  abatementDateTime?: string;\n}\n\nexport interface FHIRCodeableConcept {\n  coding?: Array<{\n    system?: string;\n    version?: string;\n    code?: string;\n    display?: string;\n  }>;\n  text?: string;\n}\n\nexport interface FHIRReference {\n  reference?: string;\n  type?: string;\n  identifier?: {\n    system?: string;\n    value?: string;\n  };\n  display?: string;\n}\n\nclass FHIRService {\n  private static instance: FHIRService;\n  private baseUrl: string;\n  private headers: Record<string, string>;\n\n  private constructor() {\n    this.baseUrl = process.env.REACT_APP_FHIR_BASE_URL || 'https://hapi.fhir.org/baseR4';\n    this.headers = {\n      'Content-Type': 'application/fhir+json',\n      'Accept': 'application/fhir+json',\n    };\n\n    // Add authentication if available\n    const authToken = process.env.REACT_APP_FHIR_AUTH_TOKEN;\n    if (authToken) {\n      this.headers['Authorization'] = `Bearer ${authToken}`;\n    }\n  }\n\n  public static getInstance(): FHIRService {\n    if (!FHIRService.instance) {\n      FHIRService.instance = new FHIRService();\n    }\n    return FHIRService.instance;\n  }\n\n  /**\n   * Search for patients by various criteria\n   */\n  public async searchPatients(criteria: {\n    name?: string;\n    identifier?: string;\n    birthdate?: string;\n    gender?: string;\n    limit?: number;\n  }): Promise<FHIRBundle> {\n    const params = new URLSearchParams();\n    \n    if (criteria.name) params.append('name', criteria.name);\n    if (criteria.identifier) params.append('identifier', criteria.identifier);\n    if (criteria.birthdate) params.append('birthdate', criteria.birthdate);\n    if (criteria.gender) params.append('gender', criteria.gender);\n    params.append('_count', (criteria.limit || 10).toString());\n\n    const response = await fetch(`${this.baseUrl}/Patient?${params}`, {\n      headers: this.headers,\n    });\n\n    if (!response.ok) {\n      throw new Error(`FHIR Patient search failed: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get patient by ID with related resources\n   */\n  public async getPatientWithResources(patientId: string): Promise<{\n    patient: FHIRPatient;\n    observations: FHIRObservation[];\n    medications: FHIRMedicationRequest[];\n    allergies: FHIRAllergyIntolerance[];\n    conditions: FHIRCondition[];\n  }> {\n    try {\n      // Fetch patient\n      const patientResponse = await fetch(`${this.baseUrl}/Patient/${patientId}`, {\n        headers: this.headers,\n      });\n      \n      if (!patientResponse.ok) {\n        throw new Error(`Failed to fetch patient: ${patientResponse.statusText}`);\n      }\n      \n      const patient: FHIRPatient = await patientResponse.json();\n\n      // Fetch related resources in parallel\n      const [\n        observationsBundle,\n        medicationsBundle,\n        allergiesBundle,\n        conditionsBundle\n      ] = await Promise.all([\n        this.getObservations(patientId),\n        this.getMedicationRequests(patientId),\n        this.getAllergyIntolerances(patientId),\n        this.getConditions(patientId)\n      ]);\n\n      return {\n        patient,\n        observations: observationsBundle.entry?.map(e => e.resource as FHIRObservation) || [],\n        medications: medicationsBundle.entry?.map(e => e.resource as FHIRMedicationRequest) || [],\n        allergies: allergiesBundle.entry?.map(e => e.resource as FHIRAllergyIntolerance) || [],\n        conditions: conditionsBundle.entry?.map(e => e.resource as FHIRCondition) || []\n      };\n    } catch (error) {\n      console.error('Failed to fetch patient with resources:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get lab results (observations) for a patient\n   */\n  public async getObservations(patientId: string, category?: string): Promise<FHIRBundle> {\n    const params = new URLSearchParams({\n      patient: patientId,\n      _sort: '-date',\n      _count: '100'\n    });\n\n    if (category) {\n      params.append('category', category);\n    }\n\n    const response = await fetch(`${this.baseUrl}/Observation?${params}`, {\n      headers: this.headers,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch observations: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get medication requests for a patient\n   */\n  public async getMedicationRequests(patientId: string): Promise<FHIRBundle> {\n    const params = new URLSearchParams({\n      patient: patientId,\n      status: 'active',\n      _sort: '-authoredon',\n      _count: '50'\n    });\n\n    const response = await fetch(`${this.baseUrl}/MedicationRequest?${params}`, {\n      headers: this.headers,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch medication requests: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get allergy intolerances for a patient\n   */\n  public async getAllergyIntolerances(patientId: string): Promise<FHIRBundle> {\n    const params = new URLSearchParams({\n      patient: patientId,\n      _count: '50'\n    });\n\n    const response = await fetch(`${this.baseUrl}/AllergyIntolerance?${params}`, {\n      headers: this.headers,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch allergies: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Get conditions for a patient\n   */\n  public async getConditions(patientId: string): Promise<FHIRBundle> {\n    const params = new URLSearchParams({\n      patient: patientId,\n      _count: '50'\n    });\n\n    const response = await fetch(`${this.baseUrl}/Condition?${params}`, {\n      headers: this.headers,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch conditions: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Convert FHIR Patient to OncoSafeRx PatientProfile\n   */\n  public convertFHIRPatientToProfile(\n    patient: FHIRPatient,\n    observations: FHIRObservation[] = [],\n    medications: FHIRMedicationRequest[] = [],\n    allergies: FHIRAllergyIntolerance[] = [],\n    conditions: FHIRCondition[] = []\n  ): PatientProfile {\n    const name = patient.name?.[0];\n    const telecom = patient.telecom || [];\n    const address = patient.address?.[0];\n\n    const demographics: PatientDemographics = {\n      firstName: name?.given?.[0] || '',\n      lastName: name?.family || '',\n      dateOfBirth: patient.birthDate || '',\n      sex: patient.gender === 'male' ? 'male' : patient.gender === 'female' ? 'female' : 'other',\n      mrn: patient.identifier?.find(id => id.type?.coding?.[0]?.code === 'MR')?.value,\n      contact: {\n        phone: telecom.find(t => t.system === 'phone')?.value,\n        email: telecom.find(t => t.system === 'email')?.value,\n        address: address?.text || [address?.line?.join(' '), address?.city, address?.state].filter(Boolean).join(', ')\n      }\n    };\n\n    const labValues: PatientLabValues[] = observations\n      .filter(obs => obs.valueQuantity?.value !== undefined)\n      .map(obs => ({\n        timestamp: obs.effectiveDateTime || new Date().toISOString(),\n        labType: obs.code.text || obs.code.coding?.[0]?.display || 'Unknown',\n        value: obs.valueQuantity!.value!,\n        unit: obs.valueQuantity!.unit || '',\n        referenceRange: obs.referenceRange?.[0] ? \n          `${obs.referenceRange[0].low?.value || ''}-${obs.referenceRange[0].high?.value || ''}` : undefined,\n        isAbnormal: obs.interpretation?.some(interp => \n          interp.coding?.some(coding => ['H', 'L', 'A'].includes(coding.code || ''))\n        ),\n        criticalFlag: obs.interpretation?.some(interp => \n          interp.coding?.some(coding => ['HH', 'LL', 'AA'].includes(coding.code || ''))\n        )\n      }));\n\n    const patientMedications: PatientMedication[] = medications.map((med, index) => ({\n      id: med.id || `med-${index}`,\n      drug: {\n        rxcui: 'unknown',\n        name: med.medicationCodeableConcept?.text || med.medicationCodeableConcept?.coding?.[0]?.display || 'Unknown medication',\n        generic_name: med.medicationCodeableConcept?.coding?.[0]?.display\n      },\n      dosage: med.dosageInstruction?.[0]?.doseAndRate?.[0]?.doseQuantity?.value?.toString() || 'Unknown',\n      frequency: med.dosageInstruction?.[0]?.text || 'Unknown',\n      route: med.dosageInstruction?.[0]?.route?.text || 'Unknown',\n      startDate: med.authoredOn || new Date().toISOString(),\n      indication: 'From EHR',\n      isActive: med.status === 'active'\n    }));\n\n    const patientAllergies: PatientAllergy[] = allergies.map((allergy, index) => ({\n      id: allergy.id || `allergy-${index}`,\n      allergen: allergy.code?.text || allergy.code?.coding?.[0]?.display || 'Unknown allergen',\n      allergenType: allergy.category?.[0] === 'medication' ? 'drug' : \n                   allergy.category?.[0] === 'food' ? 'food' : \n                   allergy.category?.[0] === 'environment' ? 'environmental' : 'other',\n      reaction: allergy.reaction?.[0]?.manifestation?.[0]?.text || \n               allergy.reaction?.[0]?.manifestation?.[0]?.coding?.[0]?.display || 'Unknown reaction',\n      severity: allergy.reaction?.[0]?.severity === 'severe' ? 'severe' :\n               allergy.reaction?.[0]?.severity === 'moderate' ? 'moderate' : 'mild',\n      dateReported: allergy.recordedDate || new Date().toISOString(),\n      verified: allergy.verificationStatus?.coding?.[0]?.code === 'confirmed'\n    }));\n\n    const patientConditions: PatientCondition[] = conditions.map((condition, index) => ({\n      id: condition.id || `condition-${index}`,\n      condition: condition.code?.text || condition.code?.coding?.[0]?.display || 'Unknown condition',\n      icd10Code: condition.code?.coding?.find(c => c.system?.includes('icd-10'))?.code,\n      status: condition.clinicalStatus?.coding?.[0]?.code === 'active' ? 'active' : \n             condition.clinicalStatus?.coding?.[0]?.code === 'resolved' ? 'resolved' : 'inactive',\n      dateOfOnset: condition.onsetDateTime || condition.onsetPeriod?.start || new Date().toISOString(),\n      dateResolved: condition.abatementDateTime\n    }));\n\n    return {\n      id: patient.id || `fhir-patient-${Date.now()}`,\n      demographics,\n      allergies: patientAllergies,\n      medications: patientMedications,\n      conditions: patientConditions,\n      labValues,\n      genetics: [], // Would need separate genomics FHIR resources\n      vitals: [], // Would parse vital signs from observations\n      treatmentHistory: [],\n      notes: [{\n        id: 'fhir-import',\n        timestamp: new Date().toISOString(),\n        author: 'FHIR Import',\n        type: 'clinical',\n        content: `Patient data imported from FHIR server: ${patient.identifier?.length || 0} identifiers, ${observations.length} observations, ${medications.length} medications, ${allergies.length} allergies, ${conditions.length} conditions`\n      }],\n      preferences: {},\n      lastUpdated: new Date().toISOString(),\n      createdBy: 'FHIR Import Service',\n      isActive: patient.active !== false\n    };\n  }\n\n  /**\n   * Create or update patient in FHIR server\n   */\n  public async createPatient(patientProfile: PatientProfile): Promise<FHIRPatient> {\n    const fhirPatient: FHIRPatient = this.convertProfileToFHIRPatient(patientProfile);\n\n    const response = await fetch(`${this.baseUrl}/Patient`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify(fhirPatient)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to create FHIR patient: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  private convertProfileToFHIRPatient(profile: PatientProfile): FHIRPatient {\n    return {\n      resourceType: 'Patient',\n      identifier: profile.demographics.mrn ? [{\n        use: 'usual',\n        type: {\n          coding: [{\n            system: 'http://terminology.hl7.org/CodeSystem/v2-0203',\n            code: 'MR',\n            display: 'Medical Record Number'\n          }]\n        },\n        value: profile.demographics.mrn\n      }] : undefined,\n      active: profile.isActive,\n      name: [{\n        use: 'official',\n        family: profile.demographics.lastName,\n        given: [profile.demographics.firstName]\n      }],\n      telecom: [\n        profile.demographics.contact?.phone ? {\n          system: 'phone',\n          value: profile.demographics.contact.phone,\n          use: 'home'\n        } : null,\n        profile.demographics.contact?.email ? {\n          system: 'email',\n          value: profile.demographics.contact.email\n        } : null\n      ].filter(Boolean) as any[],\n      gender: profile.demographics.sex === 'male' ? 'male' : \n             profile.demographics.sex === 'female' ? 'female' : 'other',\n      birthDate: profile.demographics.dateOfBirth\n    };\n  }\n\n  /**\n   * Validate FHIR connection\n   */\n  public async validateConnection(): Promise<{ connected: boolean; version?: string; error?: string }> {\n    try {\n      const response = await fetch(`${this.baseUrl}/metadata`, {\n        headers: { 'Accept': 'application/fhir+json' }\n      });\n\n      if (response.ok) {\n        const capability = await response.json();\n        return {\n          connected: true,\n          version: capability.fhirVersion || 'Unknown'\n        };\n      } else {\n        return {\n          connected: false,\n          error: `HTTP ${response.status}: ${response.statusText}`\n        };\n      }\n    } catch (error) {\n      return {\n        connected: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n}\n\nexport const fhirService = FHIRService.getInstance();","import React, { useState, useEffect } from 'react';\nimport { usePatient } from '../../context/PatientContext';\nimport { fhirService, FHIRBundle, FHIRPatient } from '../../services/fhirService';\nimport Card from '../UI/Card';\nimport Alert from '../UI/Alert';\nimport Tooltip from '../UI/Tooltip';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport {\n  Database,\n  Search,\n  Download,\n  Upload,\n  CheckCircle,\n  XCircle,\n  AlertTriangle,\n  Info,\n  Users,\n  Activity,\n  Wifi,\n  WifiOff,\n  RefreshCw,\n  FileText,\n  Clock,\n  Link as LinkIcon\n} from 'lucide-react';\n\nconst EHRIntegration: React.FC = () => {\n  const { state, actions } = usePatient();\n  const [isConnected, setIsConnected] = useState<boolean | null>(null);\n  const [connectionInfo, setConnectionInfo] = useState<{ version?: string; error?: string }>({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState<FHIRPatient[]>([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [isImporting, setIsImporting] = useState(false);\n  const [searchError, setSearchError] = useState<string | null>(null);\n  const [importStatus, setImportStatus] = useState<{ success: boolean; message: string } | null>(null);\n  const [activeTab, setActiveTab] = useState<'search' | 'import' | 'export' | 'settings'>('search');\n\n  useEffect(() => {\n    checkConnection();\n  }, []);\n\n  const checkConnection = async () => {\n    try {\n      const result = await fhirService.validateConnection();\n      setIsConnected(result.connected);\n      setConnectionInfo(result);\n    } catch (error) {\n      setIsConnected(false);\n      setConnectionInfo({ error: 'Failed to check connection' });\n    }\n  };\n\n  const handleSearch = async () => {\n    if (!searchQuery.trim()) return;\n\n    setIsSearching(true);\n    setSearchError(null);\n    \n    try {\n      const bundle = await fhirService.searchPatients({\n        name: searchQuery,\n        limit: 10\n      });\n\n      const patients = bundle.entry?.map(entry => entry.resource as FHIRPatient) || [];\n      setSearchResults(patients);\n      \n      if (patients.length === 0) {\n        setSearchError(`No patients found matching \"${searchQuery}\"`);\n      }\n    } catch (error) {\n      setSearchError(error instanceof Error ? error.message : 'Search failed');\n      setSearchResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const handleImport = async (fhirPatient: FHIRPatient) => {\n    if (!fhirPatient.id) {\n      setImportStatus({ success: false, message: 'Invalid patient ID' });\n      return;\n    }\n\n    setIsImporting(true);\n    setImportStatus(null);\n\n    try {\n      const patientData = await fhirService.getPatientWithResources(fhirPatient.id);\n      \n      const patientProfile = fhirService.convertFHIRPatientToProfile(\n        patientData.patient,\n        patientData.observations,\n        patientData.medications,\n        patientData.allergies,\n        patientData.conditions\n      );\n\n      actions.setCurrentPatient(patientProfile);\n      setImportStatus({\n        success: true,\n        message: `Successfully imported patient: ${patientProfile.demographics.firstName} ${patientProfile.demographics.lastName}`\n      });\n\n      // Auto-hide success message\n      setTimeout(() => setImportStatus(null), 5000);\n    } catch (error) {\n      setImportStatus({\n        success: false,\n        message: error instanceof Error ? error.message : 'Import failed'\n      });\n    } finally {\n      setIsImporting(false);\n    }\n  };\n\n  const handleExport = async () => {\n    if (!state.currentPatient) {\n      setImportStatus({ success: false, message: 'No patient selected for export' });\n      return;\n    }\n\n    setIsImporting(true);\n    setImportStatus(null);\n\n    try {\n      const fhirPatient = await fhirService.createPatient(state.currentPatient);\n      setImportStatus({\n        success: true,\n        message: `Patient exported to EHR system with ID: ${fhirPatient.id}`\n      });\n    } catch (error) {\n      setImportStatus({\n        success: false,\n        message: error instanceof Error ? error.message : 'Export failed'\n      });\n    } finally {\n      setIsImporting(false);\n    }\n  };\n\n  const formatPatientName = (patient: FHIRPatient): string => {\n    const name = patient.name?.[0];\n    if (name) {\n      return `${name.given?.join(' ') || ''} ${name.family || ''}`.trim();\n    }\n    return 'Unknown Name';\n  };\n\n  const getPatientIdentifier = (patient: FHIRPatient): string => {\n    const mrn = patient.identifier?.find(id => id.type?.coding?.[0]?.code === 'MR');\n    return mrn?.value || patient.id || 'No ID';\n  };\n\n  const tabs = [\n    { id: 'search', label: 'Search Patients', icon: Search },\n    { id: 'import', label: 'Import Data', icon: Download },\n    { id: 'export', label: 'Export Data', icon: Upload },\n    { id: 'settings', label: 'Connection', icon: Database },\n  ] as const;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"text-center\">\n        <div className=\"flex items-center justify-center space-x-2 mb-4\">\n          <Database className=\"w-8 h-8 text-primary-600\" />\n          <h1 className=\"text-3xl font-bold text-gray-900\">EHR Integration</h1>\n          <Tooltip content=\"Connect to Electronic Health Record systems using FHIR R4 standard for seamless patient data exchange\">\n            <Info className=\"w-5 h-5 text-gray-400\" />\n          </Tooltip>\n        </div>\n        <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n          Import patient data from Electronic Health Record systems, export OncoSafeRx data, and maintain seamless clinical workflows.\n        </p>\n      </div>\n\n      {/* Connection Status */}\n      <Card>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            {isConnected === null ? (\n              <Activity className=\"w-6 h-6 text-gray-400 animate-pulse\" />\n            ) : isConnected ? (\n              <Wifi className=\"w-6 h-6 text-green-600\" />\n            ) : (\n              <WifiOff className=\"w-6 h-6 text-red-600\" />\n            )}\n            \n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                FHIR Server Connection\n              </h3>\n              <p className=\"text-sm text-gray-600\">\n                {isConnected === null ? 'Checking connection...' :\n                 isConnected ? `Connected • FHIR ${connectionInfo.version || 'R4'}` :\n                 `Disconnected • ${connectionInfo.error}`}\n              </p>\n            </div>\n          </div>\n          \n          <button\n            onClick={checkConnection}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors\"\n          >\n            <RefreshCw className=\"w-4 h-4\" />\n            <span>Refresh</span>\n          </button>\n        </div>\n      </Card>\n\n      {/* Status Messages */}\n      {importStatus && (\n        <Alert \n          type={importStatus.success ? 'success' : 'error'} \n          title={importStatus.success ? 'Success' : 'Error'}\n        >\n          {importStatus.message}\n        </Alert>\n      )}\n\n      {/* Tab Navigation */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n            {tabs.map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`group inline-flex items-center space-x-2 py-4 px-6 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-primary-500 text-primary-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span>{tab.label}</span>\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        <div className=\"p-6\">\n          {/* Search Tab */}\n          {activeTab === 'search' && (\n            <div className=\"space-y-6\">\n              <div>\n                <div className=\"flex items-center space-x-2 mb-4\">\n                  <Search className=\"w-5 h-5 text-gray-400\" />\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Search EHR Patients</h3>\n                  <Tooltip content=\"Search for patients in the connected EHR system by name or identifier\">\n                    <Info className=\"w-4 h-4 text-gray-400\" />\n                  </Tooltip>\n                </div>\n                \n                <div className=\"flex space-x-3\">\n                  <input\n                    type=\"text\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\n                    placeholder=\"Enter patient name...\"\n                    disabled={!isConnected}\n                    className=\"flex-1 border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500 disabled:bg-gray-100\"\n                  />\n                  <button\n                    onClick={handleSearch}\n                    disabled={!isConnected || isSearching || !searchQuery.trim()}\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white text-sm font-medium rounded-md hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isSearching ? (\n                      <>\n                        <LoadingSpinner size=\"sm\" />\n                        <span>Searching...</span>\n                      </>\n                    ) : (\n                      <>\n                        <Search className=\"w-4 h-4\" />\n                        <span>Search</span>\n                      </>\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              {/* Search Error */}\n              {searchError && (\n                <Alert type=\"error\" title=\"Search Error\">\n                  {searchError}\n                </Alert>\n              )}\n\n              {/* Search Results */}\n              {searchResults.length > 0 && (\n                <div>\n                  <h4 className=\"text-md font-medium text-gray-900 mb-3\">\n                    Search Results ({searchResults.length})\n                  </h4>\n                  <div className=\"space-y-3\">\n                    {searchResults.map((patient, index) => (\n                      <div\n                        key={patient.id || index}\n                        className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\"\n                      >\n                        <div className=\"flex items-center space-x-3\">\n                          <Users className=\"w-5 h-5 text-gray-400\" />\n                          <div>\n                            <div className=\"font-medium text-gray-900\">\n                              {formatPatientName(patient)}\n                            </div>\n                            <div className=\"text-sm text-gray-600\">\n                              ID: {getPatientIdentifier(patient)} • \n                              DOB: {patient.birthDate || 'Unknown'} • \n                              Gender: {patient.gender || 'Unknown'}\n                            </div>\n                          </div>\n                        </div>\n                        <button\n                          onClick={() => handleImport(patient)}\n                          disabled={isImporting}\n                          className=\"flex items-center space-x-2 px-3 py-2 bg-green-600 text-white text-sm font-medium rounded-md hover:bg-green-700 disabled:opacity-50\"\n                        >\n                          {isImporting ? (\n                            <LoadingSpinner size=\"sm\" />\n                          ) : (\n                            <Download className=\"w-4 h-4\" />\n                          )}\n                          <span>Import</span>\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Import Tab */}\n          {activeTab === 'import' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center space-x-2 mb-4\">\n                <Download className=\"w-5 h-5 text-gray-400\" />\n                <h3 className=\"text-lg font-semibold text-gray-900\">Import Patient Data</h3>\n                <Tooltip content=\"Import comprehensive patient data including demographics, medications, allergies, conditions, and lab results\">\n                  <Info className=\"w-4 h-4 text-gray-400\" />\n                </Tooltip>\n              </div>\n\n              <div className=\"grid md:grid-cols-3 gap-6\">\n                <Card>\n                  <div className=\"text-center py-6\">\n                    <Users className=\"w-12 h-12 mx-auto mb-4 text-blue-600\" />\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Demographics</h4>\n                    <p className=\"text-sm text-gray-600\">Basic patient information, contact details, and identifiers</p>\n                  </div>\n                </Card>\n\n                <Card>\n                  <div className=\"text-center py-6\">\n                    <FileText className=\"w-12 h-12 mx-auto mb-4 text-green-600\" />\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Clinical Data</h4>\n                    <p className=\"text-sm text-gray-600\">Medications, allergies, conditions, and treatment history</p>\n                  </div>\n                </Card>\n\n                <Card>\n                  <div className=\"text-center py-6\">\n                    <Activity className=\"w-12 h-12 mx-auto mb-4 text-purple-600\" />\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Lab Results</h4>\n                    <p className=\"text-sm text-gray-600\">Laboratory values, vital signs, and diagnostic results</p>\n                  </div>\n                </Card>\n              </div>\n\n              <Alert type=\"info\" title=\"Data Import Process\">\n                <ul className=\"list-disc list-inside space-y-1 text-sm\">\n                  <li>Search for patients using the Search tab</li>\n                  <li>Select a patient to import their complete clinical record</li>\n                  <li>Data is automatically converted to OncoSafeRx format</li>\n                  <li>Safety alerts are generated based on imported data</li>\n                </ul>\n              </Alert>\n            </div>\n          )}\n\n          {/* Export Tab */}\n          {activeTab === 'export' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center space-x-2 mb-4\">\n                <Upload className=\"w-5 h-5 text-gray-400\" />\n                <h3 className=\"text-lg font-semibold text-gray-900\">Export Patient Data</h3>\n                <Tooltip content=\"Export OncoSafeRx patient data to EHR systems in FHIR format\">\n                  <Info className=\"w-4 h-4 text-gray-400\" />\n                </Tooltip>\n              </div>\n\n              {state.currentPatient ? (\n                <div className=\"space-y-4\">\n                  <Card>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Users className=\"w-6 h-6 text-primary-600\" />\n                        <div>\n                          <h4 className=\"font-medium text-gray-900\">\n                            {state.currentPatient.demographics.firstName} {state.currentPatient.demographics.lastName}\n                          </h4>\n                          <p className=\"text-sm text-gray-600\">\n                            MRN: {state.currentPatient.demographics.mrn || 'Not assigned'} • \n                            Last updated: {new Date(state.currentPatient.lastUpdated).toLocaleDateString()}\n                          </p>\n                        </div>\n                      </div>\n                      <button\n                        onClick={handleExport}\n                        disabled={!isConnected || isImporting}\n                        className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 disabled:opacity-50\"\n                      >\n                        {isImporting ? (\n                          <LoadingSpinner size=\"sm\" />\n                        ) : (\n                          <Upload className=\"w-4 h-4\" />\n                        )}\n                        <span>Export to EHR</span>\n                      </button>\n                    </div>\n                  </Card>\n\n                  <div className=\"grid md:grid-cols-4 gap-4 text-sm\">\n                    <div className=\"text-center p-3 bg-gray-50 rounded\">\n                      <div className=\"font-medium text-gray-900\">{state.currentPatient.allergies.length}</div>\n                      <div className=\"text-gray-600\">Allergies</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-gray-50 rounded\">\n                      <div className=\"font-medium text-gray-900\">{state.currentPatient.medications.filter(m => m.isActive).length}</div>\n                      <div className=\"text-gray-600\">Active Medications</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-gray-50 rounded\">\n                      <div className=\"font-medium text-gray-900\">{state.currentPatient.conditions.length}</div>\n                      <div className=\"text-gray-600\">Conditions</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-gray-50 rounded\">\n                      <div className=\"font-medium text-gray-900\">{state.currentPatient.labValues.length}</div>\n                      <div className=\"text-gray-600\">Lab Values</div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <Alert type=\"info\" title=\"No Patient Selected\">\n                  Select a patient from the Patients tab to export their data to the EHR system.\n                </Alert>\n              )}\n            </div>\n          )}\n\n          {/* Settings Tab */}\n          {activeTab === 'settings' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center space-x-2 mb-4\">\n                <Database className=\"w-5 h-5 text-gray-400\" />\n                <h3 className=\"text-lg font-semibold text-gray-900\">Connection Settings</h3>\n                <Tooltip content=\"Configure FHIR server connection and authentication settings\">\n                  <Info className=\"w-4 h-4 text-gray-400\" />\n                </Tooltip>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <Card>\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Server Information</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Endpoint:</span>\n                      <span className=\"font-mono\">{process.env.REACT_APP_FHIR_BASE_URL || 'https://hapi.fhir.org/baseR4'}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Version:</span>\n                      <span>{connectionInfo.version || 'Unknown'}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Status:</span>\n                      <span className={`inline-flex items-center space-x-1 ${isConnected ? 'text-green-600' : 'text-red-600'}`}>\n                        {isConnected ? <CheckCircle className=\"w-3 h-3\" /> : <XCircle className=\"w-3 h-3\" />}\n                        <span>{isConnected ? 'Connected' : 'Disconnected'}</span>\n                      </span>\n                    </div>\n                  </div>\n                </Card>\n\n                <Card>\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Security</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center space-x-2 text-sm\">\n                      <LinkIcon className=\"w-4 h-4 text-green-600\" />\n                      <span className=\"text-gray-600\">HTTPS Encryption: Enabled</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2 text-sm\">\n                      <CheckCircle className=\"w-4 h-4 text-green-600\" />\n                      <span className=\"text-gray-600\">FHIR R4 Compliance: Yes</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2 text-sm\">\n                      <Clock className=\"w-4 h-4 text-yellow-600\" />\n                      <span className=\"text-gray-600\">Token Auth: {process.env.REACT_APP_FHIR_AUTH_TOKEN ? 'Configured' : 'Not configured'}</span>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n\n              <Alert type=\"warning\" title=\"Configuration Note\">\n                EHR integration requires proper FHIR server configuration and authentication. Contact your system administrator to configure connection settings via environment variables.\n              </Alert>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EHRIntegration;"],"names":["FHIRService","define_process_env_default","authToken","criteria","params","response","patientId","patientResponse","patient","observationsBundle","medicationsBundle","allergiesBundle","conditionsBundle","e","error","category","observations","medications","allergies","conditions","name","telecom","address","demographics","id","t","labValues","obs","interp","coding","patientMedications","med","index","patientAllergies","allergy","patientConditions","condition","c","patientProfile","fhirPatient","profile","fhirService","EHRIntegration","state","actions","usePatient","isConnected","setIsConnected","useState","connectionInfo","setConnectionInfo","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearching","setIsSearching","isImporting","setIsImporting","searchError","setSearchError","importStatus","setImportStatus","activeTab","setActiveTab","useEffect","checkConnection","result","handleSearch","patients","entry","handleImport","patientData","handleExport","formatPatientName","getPatientIdentifier","tabs","Search","Download","Upload","Database","jsxs","jsx","Tooltip","Info","Card","Activity","Wifi","WifiOff","RefreshCw","Alert","tab","Icon","Fragment","LoadingSpinner","Users","FileText","m","CheckCircle","XCircle","LinkIcon","Clock"],"mappings":"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"}