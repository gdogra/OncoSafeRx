worker_processes auto;
events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;
  keepalive_timeout  65;
  types_hash_max_size 4096;

  # Gzip
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

  # Upstream API
  upstream api_backend {
    server oncosaferx-api:3000;
    keepalive 32;
  }

  server {
    listen 80 default_server;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # ACME challenge for Let's Encrypt (shared webroot)
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
      default_type "text/plain";
      try_files $uri =404;
    }

    # Redirect HTTP to HTTPS if certs exist (optional)
    # return 301 https://$host$request_uri;

    location /api/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $request_id;
      proxy_pass http://api_backend;
      proxy_read_timeout 60s;
    }

    # Serve static assets directly
    location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico)$ {
      expires 30d;
      add_header Cache-Control "public, max-age=2592000, immutable";
      try_files $uri =404;
    }

    # SPA fallback to index.html
    location / {
      try_files $uri /index.html;
    }

    # Health check
    location = /nginx-health {
      access_log off;
      return 200 'ok';
    }
  }
}
