{"version":3,"file":"FeedbackAdmin-CauKDcSZ.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-check.js","../../node_modules/lucide-react/dist/esm/icons/git-branch.js","../../node_modules/lucide-react/dist/esm/icons/github.js","../../node_modules/lucide-react/dist/esm/icons/key.js","../../src/components/Feedback/FeedbackDashboard.tsx","../../src/components/Feedback/GitHubSetupGuide.tsx","../../src/components/Feedback/GitHubIntegration.tsx","../../src/components/Feedback/FeedbackList.tsx","../../src/components/Admin/DeployStatusPanel.tsx","../../src/pages/FeedbackAdmin.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m9 12 2 2 4-4\", key: \"dzmm74\" }]\n];\nconst CircleCheck = createLucideIcon(\"circle-check\", __iconNode);\n\nexport { __iconNode, CircleCheck as default };\n//# sourceMappingURL=circle-check.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"line\", { x1: \"6\", x2: \"6\", y1: \"3\", y2: \"15\", key: \"17qcm7\" }],\n  [\"circle\", { cx: \"18\", cy: \"6\", r: \"3\", key: \"1h7g24\" }],\n  [\"circle\", { cx: \"6\", cy: \"18\", r: \"3\", key: \"fqmcym\" }],\n  [\"path\", { d: \"M18 9a9 9 0 0 1-9 9\", key: \"n2h4wq\" }]\n];\nconst GitBranch = createLucideIcon(\"git-branch\", __iconNode);\n\nexport { __iconNode, GitBranch as default };\n//# sourceMappingURL=git-branch.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4\",\n      key: \"tonef\"\n    }\n  ],\n  [\"path\", { d: \"M9 18c-4.51 2-5-2-7-2\", key: \"9comsn\" }]\n];\nconst Github = createLucideIcon(\"github\", __iconNode);\n\nexport { __iconNode, Github as default };\n//# sourceMappingURL=github.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4\", key: \"g0fldk\" }],\n  [\"path\", { d: \"m21 2-9.6 9.6\", key: \"1j0ho8\" }],\n  [\"circle\", { cx: \"7.5\", cy: \"15.5\", r: \"5.5\", key: \"yqb3hr\" }]\n];\nconst Key = createLucideIcon(\"key\", __iconNode);\n\nexport { __iconNode, Key as default };\n//# sourceMappingURL=key.js.map\n","import React, { useState, useEffect } from 'react';\nimport { \n  BarChart3, \n  Calendar, \n  Clock, \n  Tag, \n  AlertTriangle, \n  CheckCircle, \n  Download,\n  RefreshCw,\n  TrendingUp,\n  Users,\n  Target\n} from 'lucide-react';\nimport Modal from '../UI/Modal';\nimport Card from '../UI/Card';\nimport { feedbackService } from '../../services/feedbackService';\n\ninterface FeedbackDashboardProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst FeedbackDashboard: React.FC<FeedbackDashboardProps> = ({ isOpen, onClose }) => {\n  const [analytics, setAnalytics] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (isOpen) {\n      loadAnalytics();\n    }\n  }, [isOpen]);\n\n  const loadAnalytics = () => {\n    setLoading(true);\n    try {\n      const data = feedbackService.getFeedbackAnalytics();\n      setAnalytics(data);\n    } catch (error) {\n      console.error('Error loading feedback analytics:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const exportData = () => {\n    try {\n      const data = feedbackService.exportFeedbackData();\n      const blob = new Blob([data], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `oncosaferx-feedback-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error exporting data:', error);\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    const colors = {\n      critical: 'bg-red-100 text-red-800',\n      high: 'bg-orange-100 text-orange-800',\n      medium: 'bg-yellow-100 text-yellow-800',\n      low: 'bg-green-100 text-green-800'\n    };\n    return colors[priority as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getTypeIcon = (type: string) => {\n    const icons = {\n      bug: '🐛',\n      feature_request: '💡',\n      improvement: '⚡',\n      question: '❓',\n      complaint: '😠',\n      compliment: '👍',\n      security_concern: '🔒',\n      performance_issue: '🚀',\n      usability_issue: '🎯',\n      data_issue: '📊',\n      integration_issue: '🔗'\n    };\n    return icons[type as keyof typeof icons] || '📝';\n  };\n\n  if (loading) {\n    return (\n      <Modal isOpen={isOpen} onClose={onClose} title=\"Feedback Dashboard\" size=\"xl\">\n        <div className=\"flex items-center justify-center py-8\">\n          <RefreshCw className=\"w-8 h-8 animate-spin text-primary-600\" />\n          <span className=\"ml-2 text-gray-600\">Loading analytics...</span>\n        </div>\n      </Modal>\n    );\n  }\n\n  if (!analytics) {\n    return (\n      <Modal isOpen={isOpen} onClose={onClose} title=\"Feedback Dashboard\" size=\"xl\">\n        <div className=\"text-center py-8\">\n          <p className=\"text-gray-600\">No feedback data available.</p>\n        </div>\n      </Modal>\n    );\n  }\n\n  const { totalFeedback, totalTickets, byType, byCategory, byPriority, recentFeedback, sprintPlan } = analytics;\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title=\"Feedback Dashboard\" size=\"full\">\n      <div className=\"space-y-6\">\n        {/* Header Actions */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={loadAnalytics}\n              className=\"flex items-center space-x-2 px-3 py-2 text-sm bg-gray-100 rounded-md hover:bg-gray-200\"\n            >\n              <RefreshCw className=\"w-4 h-4\" />\n              <span>Refresh</span>\n            </button>\n            <button\n              onClick={exportData}\n              className=\"flex items-center space-x-2 px-3 py-2 text-sm bg-primary-100 text-primary-700 rounded-md hover:bg-primary-200\"\n            >\n              <Download className=\"w-4 h-4\" />\n              <span>Export Data</span>\n            </button>\n          </div>\n          <div className=\"text-sm text-gray-500\">\n            Last updated: {new Date().toLocaleString()}\n          </div>\n        </div>\n\n        {/* Overview Stats */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <Card className=\"text-center\">\n            <div className=\"text-2xl font-bold text-primary-600\">{totalFeedback}</div>\n            <div className=\"text-sm text-gray-600\">Total Feedback</div>\n          </Card>\n          <Card className=\"text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">{totalTickets}</div>\n            <div className=\"text-sm text-gray-600\">Active Tickets</div>\n          </Card>\n          <Card className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">{sprintPlan.currentSprint.length}</div>\n            <div className=\"text-sm text-gray-600\">Current Sprint</div>\n          </Card>\n          <Card className=\"text-center\">\n            <div className=\"text-2xl font-bold text-purple-600\">{sprintPlan.nextSprint.length}</div>\n            <div className=\"text-sm text-gray-600\">Next Sprint</div>\n          </Card>\n        </div>\n\n        <div className=\"grid lg:grid-cols-2 gap-6\">\n          {/* Feedback by Type */}\n          <Card>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <BarChart3 className=\"w-5 h-5 mr-2\" />\n              Feedback by Type\n            </h3>\n            <div className=\"space-y-3\">\n              {Object.entries(byType).map(([type, count]) => (\n                <div key={type} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-lg\">{getTypeIcon(type)}</span>\n                    <span className=\"text-sm font-medium\">{type.replace('_', ' ')}</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-primary-600 h-2 rounded-full\" \n                        style={{ width: `${(count as number / totalFeedback) * 100}%` }}\n                      />\n                    </div>\n                    <span className=\"text-sm font-semibold w-8 text-right\">{count}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n\n          {/* Feedback by Priority */}\n          <Card>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <AlertTriangle className=\"w-5 h-5 mr-2\" />\n              Priority Distribution\n            </h3>\n            <div className=\"space-y-3\">\n              {Object.entries(byPriority).map(([priority, count]) => (\n                <div key={priority} className=\"flex items-center justify-between\">\n                  <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getPriorityColor(priority)}`}>\n                    {priority}\n                  </span>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-orange-500 h-2 rounded-full\" \n                        style={{ width: `${(count as number / totalFeedback) * 100}%` }}\n                      />\n                    </div>\n                    <span className=\"text-sm font-semibold w-8 text-right\">{count}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n        </div>\n\n        {/* Sprint Planning */}\n        <Card>\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Target className=\"w-5 h-5 mr-2\" />\n            Sprint Planning\n          </h3>\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            {/* Current Sprint */}\n            <div>\n              <h4 className=\"font-medium text-green-900 mb-3 flex items-center\">\n                <Calendar className=\"w-4 h-4 mr-1\" />\n                Current Sprint ({sprintPlan.currentSprint.length} items)\n              </h4>\n              <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n                {sprintPlan.currentSprint.map((item: any, index: number) => (\n                  <div key={index} className=\"p-2 bg-green-50 rounded border border-green-200\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getPriorityColor(item.priority)}`}>\n                        {item.priority}\n                      </span>\n                      <span className=\"text-xs text-gray-500\">{item.effort}</span>\n                    </div>\n                    <div className=\"text-xs font-medium mt-1\">{getTypeIcon(item.type)} {item.type}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Next Sprint */}\n            <div>\n              <h4 className=\"font-medium text-blue-900 mb-3 flex items-center\">\n                <Clock className=\"w-4 h-4 mr-1\" />\n                Next Sprint ({sprintPlan.nextSprint.length} items)\n              </h4>\n              <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n                {sprintPlan.nextSprint.map((item: any, index: number) => (\n                  <div key={index} className=\"p-2 bg-blue-50 rounded border border-blue-200\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getPriorityColor(item.priority)}`}>\n                        {item.priority}\n                      </span>\n                      <span className=\"text-xs text-gray-500\">{item.effort}</span>\n                    </div>\n                    <div className=\"text-xs font-medium mt-1\">{getTypeIcon(item.type)} {item.type}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Backlog */}\n            <div>\n              <h4 className=\"font-medium text-gray-900 mb-3 flex items-center\">\n                <TrendingUp className=\"w-4 h-4 mr-1\" />\n                Backlog ({sprintPlan.backlog.length} items)\n              </h4>\n              <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n                {sprintPlan.backlog.slice(0, 10).map((item: any, index: number) => (\n                  <div key={index} className=\"p-2 bg-gray-50 rounded border border-gray-200\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getPriorityColor(item.priority)}`}>\n                        {item.priority}\n                      </span>\n                      <span className=\"text-xs text-gray-500\">{item.effort}</span>\n                    </div>\n                    <div className=\"text-xs font-medium mt-1\">{getTypeIcon(item.type)} {item.type}</div>\n                  </div>\n                ))}\n                {sprintPlan.backlog.length > 10 && (\n                  <div className=\"text-xs text-gray-500 text-center\">\n                    +{sprintPlan.backlog.length - 10} more items...\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Recent Feedback */}\n        <Card>\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Users className=\"w-5 h-5 mr-2\" />\n            Recent Feedback\n          </h3>\n          <div className=\"space-y-4\">\n            {recentFeedback.slice(0, 5).map((feedback: any, index: number) => (\n              <div key={index} className=\"p-4 border border-gray-200 rounded-lg\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <span className=\"text-lg\">{getTypeIcon(feedback.type)}</span>\n                      <span className=\"font-medium text-gray-900\">{feedback.title}</span>\n                      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getPriorityColor(feedback.priority)}`}>\n                        {feedback.priority}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mb-2\">{feedback.description.substring(0, 150)}...</p>\n                    <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n                      <span>📍 {feedback.page}</span>\n                      <span>🕒 {new Date(feedback.timestamp).toLocaleDateString()}</span>\n                      <span>🏷️ {feedback.category}</span>\n                      {feedback.metadata?.githubIssue && (\n                        <a\n                          href={feedback.metadata.githubIssue.url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"inline-flex items-center space-x-1 text-blue-600 hover:text-blue-800\"\n                        >\n                          <span>🔗 GitHub #{feedback.metadata.githubIssue.number}</span>\n                        </a>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </Card>\n      </div>\n    </Modal>\n  );\n};\n\nexport default FeedbackDashboard;","import React, { useState } from 'react';\nimport { \n  BookOpen, \n  Github, \n  Key, \n  Settings, \n  ExternalLink, \n  Copy, \n  Check,\n  ChevronRight,\n  AlertTriangle\n} from 'lucide-react';\nimport Modal from '../UI/Modal';\n\ninterface GitHubSetupGuideProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst GitHubSetupGuide: React.FC<GitHubSetupGuideProps> = ({ isOpen, onClose }) => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [copiedText, setCopiedText] = useState<string | null>(null);\n\n  const copyToClipboard = async (text: string, label: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopiedText(label);\n      setTimeout(() => setCopiedText(null), 2000);\n    } catch (err) {\n      console.error('Failed to copy:', err);\n    }\n  };\n\n  const steps = [\n    {\n      title: 'Create or Choose Repository',\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-700\">\n            First, you'll need a GitHub repository where the issues will be created. This can be:\n          </p>\n          <ul className=\"list-disc list-inside space-y-2 text-gray-700\">\n            <li>Your main OncoSafeRx repository (if you have one)</li>\n            <li>A dedicated feedback/issues repository</li>\n            <li>Any repository where you want to track feedback</li>\n          </ul>\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <h4 className=\"font-medium text-blue-900 mb-2\">Repository Requirements:</h4>\n            <ul className=\"text-sm text-blue-800 space-y-1\">\n              <li>• Must have Issues enabled (default for most repositories)</li>\n              <li>• You must have write access to create issues</li>\n              <li>• Can be public or private</li>\n            </ul>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Create Personal Access Token',\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-700\">\n            Create a Personal Access Token (PAT) to authenticate with GitHub's API.\n          </p>\n          \n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n              <span className=\"text-sm font-medium\">1. Go to GitHub Settings</span>\n              <a\n                href=\"https://github.com/settings/tokens\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center space-x-1 text-blue-600 hover:text-blue-800\"\n              >\n                <span className=\"text-sm\">Open</span>\n                <ExternalLink className=\"w-3 h-3\" />\n              </a>\n            </div>\n            \n            <div className=\"p-3 bg-gray-50 rounded-lg\">\n              <span className=\"text-sm font-medium\">2. Click \"Generate new token\" → \"Generate new token (classic)\"</span>\n            </div>\n            \n            <div className=\"p-3 bg-gray-50 rounded-lg\">\n              <div className=\"text-sm font-medium mb-2\">3. Configure the token:</div>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• <strong>Note:</strong> \"OncoSafeRx Feedback Integration\"</li>\n                <li>• <strong>Expiration:</strong> Choose appropriate duration</li>\n                <li>• <strong>Scopes:</strong> Select \"repo\" (or \"public_repo\" for public repositories only)</li>\n              </ul>\n            </div>\n            \n            <div className=\"p-3 bg-gray-50 rounded-lg\">\n              <span className=\"text-sm font-medium\">4. Click \"Generate token\" and copy the token immediately</span>\n            </div>\n          </div>\n\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n            <div className=\"flex items-start space-x-2\">\n              <AlertTriangle className=\"w-4 h-4 text-yellow-600 flex-shrink-0 mt-0.5\" />\n              <div className=\"text-sm text-yellow-800\">\n                <strong>Important:</strong> Copy the token immediately after creation. GitHub will only show it once for security reasons.\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Set Up Repository Labels',\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-700\">\n            OncoSafeRx automatically creates labels for better issue organization. You can create these labels in advance:\n          </p>\n          \n          <div className=\"space-y-3\">\n            <div>\n              <h4 className=\"font-medium text-gray-900 mb-2\">Priority Labels:</h4>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {[\n                  { name: 'priority:critical', color: '#d73a49', desc: 'Critical issues' },\n                  { name: 'priority:high', color: '#f66a0a', desc: 'High priority' },\n                  { name: 'priority:medium', color: '#fbca04', desc: 'Medium priority' },\n                  { name: 'priority:low', color: '#28a745', desc: 'Low priority' }\n                ].map((label) => (\n                  <div key={label.name} className=\"flex items-center justify-between p-2 border rounded\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div \n                        className=\"w-3 h-3 rounded\"\n                        style={{ backgroundColor: label.color }}\n                      />\n                      <span className=\"text-sm font-mono\">{label.name}</span>\n                    </div>\n                    <button\n                      onClick={() => copyToClipboard(label.name, label.name)}\n                      className=\"text-gray-400 hover:text-gray-600\"\n                    >\n                      {copiedText === label.name ? <Check className=\"w-3 h-3\" /> : <Copy className=\"w-3 h-3\" />}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"font-medium text-gray-900 mb-2\">Type Labels:</h4>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {[\n                  { name: 'bug', color: '#d73a49' },\n                  { name: 'enhancement', color: '#a2eeef' },\n                  { name: 'question', color: '#d876e3' },\n                  { name: 'security', color: '#0052cc' }\n                ].map((label) => (\n                  <div key={label.name} className=\"flex items-center justify-between p-2 border rounded\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div \n                        className=\"w-3 h-3 rounded\"\n                        style={{ backgroundColor: label.color }}\n                      />\n                      <span className=\"text-sm font-mono\">{label.name}</span>\n                    </div>\n                    <button\n                      onClick={() => copyToClipboard(label.name, label.name)}\n                      className=\"text-gray-400 hover:text-gray-600\"\n                    >\n                      {copiedText === label.name ? <Check className=\"w-3 h-3\" /> : <Copy className=\"w-3 h-3\" />}\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <h4 className=\"font-medium text-blue-900 mb-2\">Auto-Creation</h4>\n            <p className=\"text-sm text-blue-800\">\n              Don't worry if you skip this step! GitHub will automatically create labels when OncoSafeRx tries to use them.\n              Creating them in advance just ensures consistent colors and descriptions.\n            </p>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Configure OncoSafeRx',\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-700\">\n            Now configure the GitHub integration in OncoSafeRx:\n          </p>\n          \n          <div className=\"space-y-3\">\n            <div className=\"p-3 bg-gray-50 rounded-lg\">\n              <div className=\"text-sm font-medium mb-2\">1. Repository Information:</div>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• <strong>Owner:</strong> Your GitHub username or organization name</li>\n                <li>• <strong>Repository:</strong> The repository name (not the full URL)</li>\n              </ul>\n            </div>\n            \n            <div className=\"p-3 bg-gray-50 rounded-lg\">\n              <div className=\"text-sm font-medium mb-2\">2. Authentication:</div>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• Paste the Personal Access Token you created</li>\n                <li>• Leave API URL empty (uses GitHub.com by default)</li>\n              </ul>\n            </div>\n            \n            <div className=\"p-3 bg-gray-50 rounded-lg\">\n              <div className=\"text-sm font-medium mb-2\">3. Test & Enable:</div>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• Click \"Test Connection\" to verify setup</li>\n                <li>• Enable the integration if test succeeds</li>\n                <li>• Save the configuration</li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"bg-green-50 p-4 rounded-lg\">\n            <h4 className=\"font-medium text-green-900 mb-2\">Example Configuration:</h4>\n            <div className=\"text-sm font-mono text-green-800 space-y-1\">\n              <div>Owner: <span className=\"bg-white px-1 rounded\">your-username</span></div>\n              <div>Repository: <span className=\"bg-white px-1 rounded\">oncosaferx-feedback</span></div>\n              <div>Token: <span className=\"bg-white px-1 rounded\">ghp_xxxxxxxxxxxxxxxxxxxxx</span></div>\n            </div>\n          </div>\n        </div>\n      )\n    },\n    {\n      title: 'Test the Integration',\n      content: (\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-700\">\n            Once configured, test the integration to ensure everything works correctly:\n          </p>\n          \n          <div className=\"space-y-3\">\n            <div className=\"p-3 bg-gray-50 rounded-lg\">\n              <div className=\"text-sm font-medium mb-2\">1. Submit Test Feedback:</div>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• Use the feedback button to submit a test report</li>\n                <li>• Try different feedback types (bug, feature request, etc.)</li>\n                <li>• Include detailed information for testing</li>\n              </ul>\n            </div>\n            \n            <div className=\"p-3 bg-gray-50 rounded-lg\">\n              <div className=\"text-sm font-medium mb-2\">2. Verify GitHub Issues:</div>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• Check your GitHub repository for new issues</li>\n                <li>• Verify labels are applied correctly</li>\n                <li>• Confirm issue content includes all feedback details</li>\n              </ul>\n            </div>\n            \n            <div className=\"p-3 bg-gray-50 rounded-lg\">\n              <div className=\"text-sm font-medium mb-2\">3. Check Feedback Dashboard:</div>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• View the feedback admin dashboard</li>\n                <li>• Look for GitHub issue links in recent feedback</li>\n                <li>• Verify the integration status</li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <h4 className=\"font-medium text-blue-900 mb-2\">What Gets Created:</h4>\n            <ul className=\"text-sm text-blue-800 space-y-1\">\n              <li>• GitHub issue with formatted title and description</li>\n              <li>• Automatic labels based on feedback type and priority</li>\n              <li>• Browser and environment information</li>\n              <li>• Direct link back to the OncoSafeRx page</li>\n              <li>• Reproduction steps for bug reports</li>\n            </ul>\n          </div>\n        </div>\n      )\n    }\n  ];\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title=\"GitHub Integration Setup Guide\" size=\"lg\">\n      <div className=\"space-y-6\">\n        {/* Progress Indicator */}\n        <div className=\"flex items-center space-x-2\">\n          {steps.map((_, index) => (\n            <React.Fragment key={index}>\n              <button\n                onClick={() => setActiveStep(index)}\n                className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\n                  index === activeStep\n                    ? 'bg-primary-600 text-white'\n                    : index < activeStep\n                    ? 'bg-green-500 text-white'\n                    : 'bg-gray-200 text-gray-600'\n                }`}\n              >\n                {index < activeStep ? <Check className=\"w-4 h-4\" /> : index + 1}\n              </button>\n              {index < steps.length - 1 && (\n                <div className={`w-8 h-0.5 ${index < activeStep ? 'bg-green-500' : 'bg-gray-200'}`} />\n              )}\n            </React.Fragment>\n          ))}\n        </div>\n\n        {/* Step Content */}\n        <div className=\"min-h-[400px]\">\n          <div className=\"flex items-center space-x-3 mb-6\">\n            <div className=\"w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center\">\n              {activeStep === 0 && <Github className=\"w-5 h-5 text-primary-600\" />}\n              {activeStep === 1 && <Key className=\"w-5 h-5 text-primary-600\" />}\n              {activeStep === 2 && <Settings className=\"w-5 h-5 text-primary-600\" />}\n              {activeStep === 3 && <BookOpen className=\"w-5 h-5 text-primary-600\" />}\n              {activeStep === 4 && <Check className=\"w-5 h-5 text-primary-600\" />}\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">{steps[activeStep].title}</h3>\n              <p className=\"text-sm text-gray-600\">Step {activeStep + 1} of {steps.length}</p>\n            </div>\n          </div>\n\n          <div className=\"prose prose-sm max-w-none\">\n            {steps[activeStep].content}\n          </div>\n        </div>\n\n        {/* Navigation */}\n        <div className=\"flex items-center justify-between pt-4 border-t border-gray-200\">\n          <button\n            onClick={() => setActiveStep(Math.max(0, activeStep - 1))}\n            disabled={activeStep === 0}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            Previous\n          </button>\n\n          <span className=\"text-sm text-gray-500\">\n            {activeStep + 1} of {steps.length}\n          </span>\n\n          {activeStep < steps.length - 1 ? (\n            <button\n              onClick={() => setActiveStep(activeStep + 1)}\n              className=\"flex items-center space-x-2 px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700\"\n            >\n              <span>Next</span>\n              <ChevronRight className=\"w-4 h-4\" />\n            </button>\n          ) : (\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-green-600 rounded-md hover:bg-green-700\"\n            >\n              Get Started\n            </button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default GitHubSetupGuide;","import React, { useState, useEffect } from 'react';\nimport { \n  Github, \n  Settings, \n  Check, \n  X, \n  AlertTriangle, \n  ExternalLink,\n  TestTube,\n  Save,\n  Eye,\n  EyeOff,\n  BookOpen\n} from 'lucide-react';\nimport Card from '../UI/Card';\nimport GitHubSetupGuide from './GitHubSetupGuide';\nimport { GitHubConfig, githubService } from '../../services/githubService';\n\ninterface GitHubIntegrationProps {\n  onConfigChange?: (enabled: boolean) => void;\n}\n\nconst GitHubIntegration: React.FC<GitHubIntegrationProps> = ({ onConfigChange }) => {\n  const [config, setConfig] = useState<GitHubConfig>({\n    owner: '',\n    repo: '',\n    token: '',\n    enabled: false\n  });\n  \n  const [showToken, setShowToken] = useState(false);\n  const [testing, setTesting] = useState(false);\n  const [testResult, setTestResult] = useState<{ success: boolean; message: string } | null>(null);\n  const [saving, setSaving] = useState(false);\n  const [errors, setErrors] = useState<string[]>([]);\n  const [showGuide, setShowGuide] = useState(false);\n\n  useEffect(() => {\n    // Load existing configuration\n    const existingConfig = githubService.getConfig();\n    if (existingConfig) {\n      setConfig(existingConfig);\n    }\n  }, []);\n\n  const handleInputChange = (field: keyof GitHubConfig, value: string | boolean) => {\n    setConfig(prev => ({ ...prev, [field]: value }));\n    setTestResult(null);\n    setErrors([]);\n  };\n\n  const handleTest = async () => {\n    setTesting(true);\n    setTestResult(null);\n\n    // Validate first\n    const validation = githubService.validateConfig(config);\n    if (!validation.valid) {\n      setErrors(validation.errors);\n      setTesting(false);\n      return;\n    }\n\n    // Save temporarily for testing\n    const originalConfig = githubService.getConfig();\n    githubService.saveConfig({ ...config, enabled: true });\n\n    try {\n      const result = await githubService.testConnection();\n      setTestResult(result);\n    } catch (error) {\n      setTestResult({\n        success: false,\n        message: error instanceof Error ? error.message : 'Test failed'\n      });\n    } finally {\n      // Restore original config\n      if (originalConfig) {\n        githubService.saveConfig(originalConfig);\n      }\n      setTesting(false);\n    }\n  };\n\n  const handleSave = async () => {\n    setSaving(true);\n    setErrors([]);\n\n    try {\n      // Validate configuration\n      const validation = githubService.validateConfig(config);\n      if (!validation.valid) {\n        setErrors(validation.errors);\n        setSaving(false);\n        return;\n      }\n\n      // Save configuration\n      githubService.saveConfig(config);\n      onConfigChange?.(config.enabled);\n      \n      // Show success message\n      setTestResult({\n        success: true,\n        message: 'Configuration saved successfully'\n      });\n    } catch (error) {\n      setErrors([error instanceof Error ? error.message : 'Failed to save configuration']);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleClear = () => {\n    if (confirm('Are you sure you want to clear the GitHub configuration?')) {\n      githubService.clearConfig();\n      setConfig({\n        owner: '',\n        repo: '',\n        token: '',\n        enabled: false\n      });\n      setTestResult(null);\n      setErrors([]);\n      onConfigChange?.(false);\n    }\n  };\n\n  return (\n    <Card>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gray-900 rounded-lg flex items-center justify-center\">\n              <Github className=\"w-6 h-6 text-white\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">GitHub Issues Integration</h3>\n              <p className=\"text-sm text-gray-600\">\n                Automatically create GitHub issues from user feedback\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            {config.enabled && (\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                <Check className=\"w-3 h-3 mr-1\" />\n                Enabled\n              </span>\n            )}\n          </div>\n        </div>\n\n        {/* Configuration Form */}\n        <div className=\"space-y-4\">\n          {/* Enable/Disable Toggle */}\n          <div className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n            <div>\n              <h4 className=\"font-medium text-gray-900\">Enable GitHub Integration</h4>\n              <p className=\"text-sm text-gray-600\">\n                When enabled, feedback will automatically create GitHub issues\n              </p>\n            </div>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={config.enabled}\n                onChange={(e) => handleInputChange('enabled', e.target.checked)}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600\"></div>\n            </label>\n          </div>\n\n          {/* Repository Configuration */}\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <div>\n              <label htmlFor=\"owner\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Repository Owner <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                id=\"owner\"\n                value={config.owner}\n                onChange={(e) => handleInputChange('owner', e.target.value)}\n                placeholder=\"username or organization\"\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                GitHub username or organization name\n              </p>\n            </div>\n\n            <div>\n              <label htmlFor=\"repo\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Repository Name <span className=\"text-red-500\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                id=\"repo\"\n                value={config.repo}\n                onChange={(e) => handleInputChange('repo', e.target.value)}\n                placeholder=\"repository-name\"\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Repository name (e.g., \"my-project\")\n              </p>\n            </div>\n          </div>\n\n          {/* GitHub Token */}\n          <div>\n            <label htmlFor=\"token\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Personal Access Token <span className=\"text-red-500\">*</span>\n            </label>\n            <div className=\"relative\">\n              <input\n                type={showToken ? \"text\" : \"password\"}\n                id=\"token\"\n                value={config.token}\n                onChange={(e) => handleInputChange('token', e.target.value)}\n                placeholder=\"ghp_xxxxxxxxxxxxxxxxxxxx\"\n                className=\"w-full border border-gray-300 rounded-md px-3 py-2 pr-10 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowToken(!showToken)}\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n              >\n                {showToken ? (\n                  <EyeOff className=\"w-4 h-4 text-gray-400\" />\n                ) : (\n                  <Eye className=\"w-4 h-4 text-gray-400\" />\n                )}\n              </button>\n            </div>\n            <div className=\"text-xs text-gray-500 mt-1 space-y-1\">\n              <p>Required permissions: <code>repo</code> (or <code>public_repo</code> for public repositories)</p>\n              <a \n                href=\"https://github.com/settings/tokens/new?scopes=repo&description=OncoSafeRx%20Feedback%20Integration\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"inline-flex items-center text-primary-600 hover:text-primary-700\"\n              >\n                Create token on GitHub <ExternalLink className=\"w-3 h-3 ml-1\" />\n              </a>\n            </div>\n          </div>\n\n          {/* API URL (Optional) */}\n          <div>\n            <label htmlFor=\"apiUrl\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              API URL (Optional)\n            </label>\n            <input\n              type=\"url\"\n              id=\"apiUrl\"\n              value={config.apiUrl || ''}\n              onChange={(e) => handleInputChange('apiUrl', e.target.value)}\n              placeholder=\"https://api.github.com (default)\"\n              className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">\n              Leave empty to use GitHub.com. Use for GitHub Enterprise Server.\n            </p>\n          </div>\n        </div>\n\n        {/* Error Display */}\n        {errors.length > 0 && (\n          <div className=\"p-3 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-start space-x-2\">\n              <AlertTriangle className=\"w-4 h-4 text-red-500 flex-shrink-0 mt-0.5\" />\n              <div className=\"flex-1\">\n                <h4 className=\"text-sm font-medium text-red-800\">Configuration Errors</h4>\n                <ul className=\"text-sm text-red-700 mt-1 list-disc list-inside\">\n                  {errors.map((error, index) => (\n                    <li key={index}>{error}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Test Result */}\n        {testResult && (\n          <div className={`p-3 border rounded-lg ${\n            testResult.success \n              ? 'bg-green-50 border-green-200' \n              : 'bg-red-50 border-red-200'\n          }`}>\n            <div className=\"flex items-start space-x-2\">\n              {testResult.success ? (\n                <Check className=\"w-4 h-4 text-green-500 flex-shrink-0 mt-0.5\" />\n              ) : (\n                <X className=\"w-4 h-4 text-red-500 flex-shrink-0 mt-0.5\" />\n              )}\n              <div className=\"flex-1\">\n                <h4 className={`text-sm font-medium ${\n                  testResult.success ? 'text-green-800' : 'text-red-800'\n                }`}>\n                  {testResult.success ? 'Connection Successful' : 'Connection Failed'}\n                </h4>\n                <p className={`text-sm mt-1 ${\n                  testResult.success ? 'text-green-700' : 'text-red-700'\n                }`}>\n                  {testResult.message}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex items-center justify-between pt-4 border-t border-gray-200\">\n          <div className=\"flex space-x-3\">\n            <button\n              onClick={handleClear}\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n            >\n              Clear Configuration\n            </button>\n            \n            <button\n              onClick={() => setShowGuide(true)}\n              className=\"flex items-center space-x-2 px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n            >\n              <BookOpen className=\"w-4 h-4\" />\n              <span>Setup Guide</span>\n            </button>\n          </div>\n          \n          <div className=\"flex space-x-3\">\n            <button\n              onClick={handleTest}\n              disabled={testing || !config.owner || !config.repo || !config.token}\n              className=\"flex items-center space-x-2 px-4 py-2 text-sm font-medium text-blue-700 bg-blue-100 rounded-md hover:bg-blue-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <TestTube className=\"w-4 h-4\" />\n              <span>{testing ? 'Testing...' : 'Test Connection'}</span>\n            </button>\n            \n            <button\n              onClick={handleSave}\n              disabled={saving}\n              className=\"flex items-center space-x-2 px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <Save className=\"w-4 h-4\" />\n              <span>{saving ? 'Saving...' : 'Save Configuration'}</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Information */}\n        <div className=\"bg-blue-50 p-4 rounded-lg\">\n          <h4 className=\"text-sm font-medium text-blue-900 mb-2\">How it works</h4>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• User feedback is automatically converted to GitHub issues</li>\n            <li>• Issues include detailed metadata, labels, and context</li>\n            <li>• Priority and effort estimation are added as labels</li>\n            <li>• Bug reports include reproduction steps and browser info</li>\n            <li>• Issues are automatically labeled for organization</li>\n          </ul>\n        </div>\n\n        {/* Setup Guide Modal */}\n        <GitHubSetupGuide isOpen={showGuide} onClose={() => setShowGuide(false)} />\n      </div>\n    </Card>\n  );\n};\n\nexport default GitHubIntegration;","import React, { useEffect, useMemo, useState } from 'react';\nimport { AlertTriangle, Check, GitBranch, RefreshCw, Search, Settings } from 'lucide-react';\nimport Card from '../UI/Card';\nimport { feedbackService } from '../../services/feedbackService';\n\ntype Filters = {\n  status?: string;\n  priority?: string;\n  type?: string;\n};\n\nconst statuses = ['new','triaged','in_backlog','in_sprint','in_progress','in_review','done','closed','duplicate','wont_fix'];\nconst priorities = ['critical','high','medium','low'];\nconst types = ['bug','feature_request','improvement','question','complaint','compliment','security_concern','performance_issue','usability_issue','data_issue','integration_issue'];\n\nconst priorityColor = (p?: string) => (\n  p === 'critical' ? 'bg-red-100 text-red-800' :\n  p === 'high' ? 'bg-orange-100 text-orange-800' :\n  p === 'medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'\n);\n\nconst FeedbackList: React.FC = () => {\n  const [items, setItems] = useState<any[]>([]);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [limit, setLimit] = useState(25);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState<Filters>({});\n  const [query, setQuery] = useState('');\n  const [creatingIssue, setCreatingIssue] = useState<string | null>(null);\n  const [updatingStatus, setUpdatingStatus] = useState<string | null>(null);\n\n  const load = async () => {\n    setLoading(true);\n    try {\n      const data = await feedbackService.getAllFeedback(page, limit, filters);\n      setItems(data.feedback || []);\n      setTotal(data.total || 0);\n    } catch (e) {\n      console.error('Failed to load feedback list:', e);\n      setItems([]);\n      setTotal(0);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => { load(); }, [page, limit, filters]);\n\n  const filtered = useMemo(() => {\n    if (!query.trim()) return items;\n    const q = query.toLowerCase();\n    return items.filter(i => `${i.title} ${i.description}`.toLowerCase().includes(q));\n  }, [items, query]);\n\n  const updateStatus = async (id: string, status: string) => {\n    try {\n      setUpdatingStatus(id);\n      await feedbackService.updateFeedbackStatus(id, status);\n      await load();\n    } catch (e) {\n      console.error('Update status failed:', e);\n      alert('Failed to update status');\n    } finally {\n      setUpdatingStatus(null);\n    }\n  };\n\n  const createIssue = async (id: string) => {\n    try {\n      setCreatingIssue(id);\n      const res = await feedbackService.createGitHubIssue(id);\n      if (res?.issueUrl) {\n        window.open(res.issueUrl, '_blank');\n      }\n      await load();\n    } catch (e) {\n      console.error('Create issue failed:', e);\n      alert('Failed to create GitHub issue');\n    } finally {\n      setCreatingIssue(null);\n    }\n  };\n\n  return (\n    <Card>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n          <Settings className=\"w-5 h-5 mr-2\" />\n          Feedback List & Triage\n        </h3>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={load}\n            className=\"px-3 py-2 text-sm bg-gray-100 rounded hover:bg-gray-200\"\n          >\n            <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\n          </button>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"grid md:grid-cols-4 gap-3 mb-4\">\n        <div className=\"relative\">\n          <Search className=\"w-4 h-4 absolute left-2 top-2.5 text-gray-400\" />\n          <input\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Search title/description\"\n            className=\"w-full pl-7 pr-2 py-2 border border-gray-300 rounded text-sm\"\n          />\n        </div>\n        <select\n          value={filters.status || ''}\n          onChange={(e) => { setPage(1); setFilters(f => ({ ...f, status: e.target.value || undefined })); }}\n          className=\"border border-gray-300 rounded px-2 py-2 text-sm\"\n        >\n          <option value=\"\">All Statuses</option>\n          {statuses.map(s => <option key={s} value={s}>{s}</option>)}\n        </select>\n        <select\n          value={filters.priority || ''}\n          onChange={(e) => { setPage(1); setFilters(f => ({ ...f, priority: e.target.value || undefined })); }}\n          className=\"border border-gray-300 rounded px-2 py-2 text-sm\"\n        >\n          <option value=\"\">All Priorities</option>\n          {priorities.map(p => <option key={p} value={p}>{p}</option>)}\n        </select>\n        <select\n          value={filters.type || ''}\n          onChange={(e) => { setPage(1); setFilters(f => ({ ...f, type: e.target.value || undefined })); }}\n          className=\"border border-gray-300 rounded px-2 py-2 text-sm\"\n        >\n          <option value=\"\">All Types</option>\n          {types.map(t => <option key={t} value={t}>{t.replace('_',' ')}</option>)}\n        </select>\n      </div>\n\n      {/* Table */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full text-sm\">\n          <thead>\n            <tr className=\"text-left bg-gray-50\">\n              <th className=\"px-3 py-2\">Title</th>\n              <th className=\"px-3 py-2\">Type</th>\n              <th className=\"px-3 py-2\">Priority</th>\n              <th className=\"px-3 py-2\">Status</th>\n              <th className=\"px-3 py-2\">When</th>\n              <th className=\"px-3 py-2\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {loading && (\n              <tr>\n                <td colSpan={6} className=\"px-3 py-6 text-center text-gray-500\">\n                  <RefreshCw className=\"w-5 h-5 inline mr-2 animate-spin\" /> Loading...\n                </td>\n              </tr>\n            )}\n            {!loading && filtered.length === 0 && (\n              <tr>\n                <td colSpan={6} className=\"px-3 py-6 text-center text-gray-500\">\n                  <AlertTriangle className=\"w-5 h-5 inline mr-2\" /> No feedback found\n                </td>\n              </tr>\n            )}\n            {!loading && filtered.map((fb) => (\n              <tr key={fb.id} className=\"border-t\">\n                <td className=\"px-3 py-2 align-top\">\n                  <div className=\"font-medium text-gray-900\">{fb.title}</div>\n                  <div className=\"text-gray-600 line-clamp-2\">{fb.description}</div>\n                  <div className=\"text-xs text-gray-500 mt-1\">{fb.page || 'unknown'} • {fb.category}</div>\n                </td>\n                <td className=\"px-3 py-2 align-top\">{fb.type}</td>\n                <td className=\"px-3 py-2 align-top\">\n                  <span className={`px-2 py-0.5 rounded-full ${priorityColor(fb.priority)}`}>{fb.priority}</span>\n                </td>\n                <td className=\"px-3 py-2 align-top\">\n                  <select\n                    value={fb.status}\n                    onChange={(e) => updateStatus(fb.id, e.target.value)}\n                    className=\"border border-gray-300 rounded px-2 py-1 text-xs\"\n                    disabled={updatingStatus === fb.id}\n                  >\n                    {statuses.map(s => <option key={s} value={s}>{s}</option>)}\n                  </select>\n                </td>\n                <td className=\"px-3 py-2 align-top text-xs text-gray-500\">{new Date(fb.timestamp).toLocaleString()}</td>\n                <td className=\"px-3 py-2 align-top\">\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => createIssue(fb.id)}\n                      className=\"px-2 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700\"\n                      disabled={creatingIssue === fb.id}\n                      title=\"Create GitHub Issue\"\n                    >\n                      <GitBranch className=\"w-3 h-3 inline mr-1\" /> {creatingIssue === fb.id ? 'Creating...' : 'Issue'}\n                    </button>\n                    {fb.metadata?.githubIssue?.url && (\n                      <a\n                        href={fb.metadata.githubIssue.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"px-2 py-1 text-xs bg-gray-100 rounded hover:bg-gray-200\"\n                      >\n                        <Check className=\"w-3 h-3 inline mr-1 text-green-600\" /> View\n                      </a>\n                    )}\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Pagination */}\n      <div className=\"flex items-center justify-between mt-4 text-sm\">\n        <div className=\"text-gray-600\">Total: {total}</div>\n        <div className=\"flex items-center space-x-2\">\n          <button disabled={page <= 1} onClick={() => setPage(p => Math.max(1, p - 1))} className=\"px-3 py-1 bg-gray-100 rounded disabled:opacity-50\">Prev</button>\n          <span>Page {page}</span>\n          <button disabled={(page * limit) >= total} onClick={() => setPage(p => p + 1)} className=\"px-3 py-1 bg-gray-100 rounded disabled:opacity-50\">Next</button>\n          <select value={limit} onChange={(e) => { setPage(1); setLimit(parseInt(e.target.value)); }} className=\"border border-gray-300 rounded px-2 py-1\">\n            {[10,25,50,100].map(n => <option key={n} value={n}>{n}/page</option>)}\n          </select>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default FeedbackList;\n\n","import React, { useEffect, useState } from 'react';\n\ntype DeployState = {\n  netlify: any;\n  render: any;\n  warnings: string[];\n};\n\nconst DeployStatusPanel: React.FC = () => {\n  const [data, setData] = useState<DeployState | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    let cancelled = false;\n    (async () => {\n      try {\n        const token = getAccessToken();\n        const resp = await fetch('/api/admin/deploy/status', {\n          headers: token ? { Authorization: `Bearer ${token}` } : {}\n        });\n        if (!resp.ok) throw new Error(`HTTP ${resp.status}`);\n        const json = await resp.json();\n        if (!cancelled) setData(json);\n      } catch (e: any) {\n        if (!cancelled) setError(e?.message || 'Failed to load deploy status');\n      } finally {\n        if (!cancelled) setLoading(false);\n      }\n    })();\n    return () => { cancelled = true; };\n  }, []);\n\n  const getAccessToken = (): string | null => {\n    try { const raw = localStorage.getItem('osrx_auth_tokens'); return raw ? JSON.parse(raw).access_token : null; } catch { return null; }\n  };\n\n  return (\n    <div className=\"border rounded-md p-4\">\n      <div className=\"flex items-center justify-between mb-3\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Deploy Status</h3>\n        <button\n          onClick={() => window.location.reload()}\n          className=\"px-3 py-1 text-sm bg-gray-100 rounded hover:bg-gray-200\"\n        >\n          Refresh\n        </button>\n      </div>\n      {loading && <div className=\"text-sm text-gray-600\">Loading...</div>}\n      {error && <div className=\"text-sm text-red-700\">{error}</div>}\n      {!loading && !error && (\n        <div className=\"grid md:grid-cols-2 gap-4 text-sm\">\n          {/* Netlify */}\n          <div className=\"border rounded p-3\">\n            <div className=\"font-medium text-gray-800 mb-2\">Netlify</div>\n            {data?.warnings?.includes('netlify_not_configured') ? (\n              <div className=\"text-gray-600\">Not configured (set NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID on the server)</div>\n            ) : data?.netlify ? (\n              <div className=\"space-y-1\">\n                <div>Status: <span className=\"font-mono\">{data.netlify.state}</span></div>\n                <div>Commit: <span className=\"font-mono\">{data.netlify.commit_ref?.slice(0,7) || 'n/a'}</span></div>\n                <div>Updated: {new Date(data.netlify.updated_at).toLocaleString()}</div>\n                {data.netlify.deploy_ssl_url && (\n                  <a className=\"text-blue-600 hover:underline\" href={data.netlify.deploy_ssl_url} target=\"_blank\" rel=\"noreferrer\">View deploy</a>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-gray-600\">Status unavailable</div>\n            )}\n          </div>\n          {/* Render */}\n          <div className=\"border rounded p-3\">\n            <div className=\"font-medium text-gray-800 mb-2\">Render</div>\n            {data?.warnings?.includes('render_not_configured') ? (\n              <div className=\"text-gray-600\">Not configured (set RENDER_API_KEY and RENDER_SERVICE_ID on the server)</div>\n            ) : data?.render ? (\n              <div className=\"space-y-1\">\n                <div>Status: <span className=\"font-mono\">{data.render.status || data.render.deploy?.status || 'unknown'}</span></div>\n                <div>Commit: <span className=\"font-mono\">{(data.render.commit || data.render.gitCommit)?.slice(0,7) || 'n/a'}</span></div>\n                <div>Updated: {new Date(data.render.updatedAt || data.render.createdAt || Date.now()).toLocaleString()}</div>\n                {data.render.url && (\n                  <a className=\"text-blue-600 hover:underline\" href={data.render.url} target=\"_blank\" rel=\"noreferrer\">View deploy</a>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-gray-600\">Status unavailable</div>\n            )}\n          </div>\n        </div>\n      )}\n      {!!data?.warnings?.length && (\n        <div className=\"mt-3 text-xs text-gray-500\">Warnings: {data.warnings.join(', ')}</div>\n      )}\n    </div>\n  );\n};\n\nexport default DeployStatusPanel;\n\n","import React, { useState } from 'react';\nimport { Settings, MessageSquare, BarChart3, Calendar, Download, Database, CheckCircle2, AlertTriangle } from 'lucide-react';\nimport Card from '../components/UI/Card';\nimport FeedbackDashboard from '../components/Feedback/FeedbackDashboard';\nimport GitHubIntegration from '../components/Feedback/GitHubIntegration';\nimport FeedbackList from '../components/Feedback/FeedbackList';\nimport HealthBanner from '../components/System/HealthBanner';\nimport DeployStatusPanel from '../components/Admin/DeployStatusPanel';\nimport { useToast } from '../components/UI/Toast';\nimport { feedbackService } from '../services/feedbackService';\n\nconst FeedbackAdmin: React.FC = () => {\n  const [isDashboardOpen, setIsDashboardOpen] = useState(false);\n  const [analytics, setAnalytics] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n\n  const exportData = () => {\n    try {\n      const data = feedbackService.exportFeedbackData();\n      const blob = new Blob([data], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `oncosaferx-feedback-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error exporting data:', error);\n    }\n  };\n\n  const clearData = () => {\n    if (confirm('Are you sure you want to clear all feedback data? This action cannot be undone.')) {\n      feedbackService.clearFeedbackData();\n      loadAnalytics();\n      alert('Feedback data cleared successfully.');\n    }\n  };\n\n  const loadAnalytics = async () => {\n    setLoading(true);\n    try {\n      const data = await feedbackService.getFeedbackAnalytics();\n      setAnalytics(data);\n    } catch (error) {\n      console.error('Error loading analytics:', error);\n      // Fallback to empty data\n      setAnalytics({\n        totalFeedback: 0,\n        totalTickets: 0,\n        recentFeedback: [],\n        sprintPlan: { currentSprint: [], nextSprint: [], backlog: [] }\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  React.useEffect(() => {\n    loadAnalytics();\n    refreshMigrationStatus();\n    refreshSeedStatus();\n  }, []);\n\n  const { showToast } = useToast();\n\n  const refreshMigrationStatus = async () => {\n    try {\n      const token = getAccessToken();\n      const resp = await fetch('/api/feedback/admin/migration-status', {\n        headers: token ? { Authorization: `Bearer ${token}` } : {}\n      });\n      if (resp.ok) {\n        const json = await resp.json();\n        setMigration(json);\n      }\n    } catch (e) {\n      // ignore\n    }\n  };\n\n  const refreshSeedStatus = async () => {\n    try {\n      const token = getAccessToken();\n      const resp = await fetch('/api/admin/rbac/seed-status', {\n        headers: token ? { Authorization: `Bearer ${token}` } : {}\n      });\n      if (resp.ok) {\n        const json = await resp.json();\n        setSeedStatus(json);\n      }\n    } catch (e) {\n      // ignore\n    }\n  };\n\n  const runMigration = async () => {\n    try {\n      const token = getAccessToken();\n      const resp = await fetch('/api/feedback/admin/migrate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', ...(token ? { Authorization: `Bearer ${token}` } : {}) },\n        body: JSON.stringify({ force: true })\n      });\n      if (resp.ok) {\n        const json = await resp.json();\n        await refreshMigrationStatus();\n        showToast('success', `Migration complete: inserted ${json.inserted || 0} item(s).`, 4000);\n      } else {\n        showToast('error', 'Migration failed.', 4000);\n      }\n    } catch (e) {\n      showToast('error', 'Migration error.', 4000);\n    }\n  };\n\n  const [migration, setMigration] = useState<{ ran: boolean; inserted: number; supabaseEnabled: boolean } | null>(null);\n  const [seedStatus, setSeedStatus] = useState<{\n    tenantId: string | null;\n    idsAssigned: string[];\n    emailsResolved: string[];\n    emailsUnresolved: string[];\n    totalAssigned: number;\n    totalResolved: number;\n    totalUnresolved: number;\n  } | null>(null);\n  const getAccessToken = (): string | null => {\n    try { const raw = localStorage.getItem('osrx_auth_tokens'); return raw ? JSON.parse(raw).access_token : null; } catch { return null; }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* System health banner */}\n      <HealthBanner />\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n            <Settings className=\"w-6 h-6 mr-2\" />\n            Feedback Administration\n          </h1>\n          <p className=\"text-gray-600 mt-1\">\n            Manage user feedback, view analytics, and plan sprints based on automated ticket categorization.\n          </p>\n        </div>\n        <div className=\"flex space-x-3 items-center\">\n          {/* Migration/Supabase status badge */}\n          <div className=\"hidden sm:flex items-center space-x-2 px-3 py-1 rounded-full border text-xs\"\n               title=\"Feedback storage status\">\n            <Database className=\"w-3.5 h-3.5\" />\n            {migration?.supabaseEnabled ? (\n              <span className=\"text-green-700\">Supabase on</span>\n            ) : (\n              <span className=\"text-gray-700\">Supabase off</span>\n            )}\n            {migration?.ran && (\n              <span className=\"ml-2 inline-flex items-center\">\n                <CheckCircle2 className=\"w-3.5 h-3.5 text-green-600 mr-1\" />\n                migrated {migration.inserted}\n              </span>\n            )}\n            {!migration?.ran && migration?.supabaseEnabled && (\n              <span className=\"ml-2 inline-flex items-center\">\n                <AlertTriangle className=\"w-3.5 h-3.5 text-yellow-600 mr-1\" />\n                migration pending\n              </span>\n            )}\n          </div>\n          {migration?.supabaseEnabled && (\n            <button\n              onClick={runMigration}\n              className=\"hidden sm:inline-flex items-center space-x-1 px-3 py-1 text-xs bg-gray-100 rounded hover:bg-gray-200\"\n              title=\"Run in-memory → Supabase migration\"\n            >\n              <Database className=\"w-3.5 h-3.5\" />\n              <span>Migrate</span>\n            </button>\n          )}\n          <button\n            onClick={exportData}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            <Download className=\"w-4 h-4\" />\n            <span>Export Data</span>\n          </button>\n          <button\n            onClick={() => setIsDashboardOpen(true)}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700\"\n          >\n            <BarChart3 className=\"w-4 h-4\" />\n            <span>View Dashboard</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n        <Card className=\"text-center\">\n          <div className=\"text-3xl font-bold text-primary-600\">\n            {loading ? '...' : (analytics?.totalFeedback || 0)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Total Feedback</div>\n        </Card>\n        <Card className=\"text-center\">\n          <div className=\"text-3xl font-bold text-blue-600\">\n            {loading ? '...' : (analytics?.totalTickets || 0)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Active Tickets</div>\n        </Card>\n        <Card className=\"text-center\">\n          <div className=\"text-3xl font-bold text-green-600\">\n            {loading ? '...' : (analytics?.sprintPlan?.currentSprint?.length || 0)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Current Sprint</div>\n        </Card>\n        <Card className=\"text-center\">\n          <div className=\"text-3xl font-bold text-purple-600\">\n            {loading ? '...' : (analytics?.sprintPlan?.nextSprint?.length || 0)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Next Sprint</div>\n        </Card>\n      </div>\n\n      {/* System Overview */}\n      <div className=\"grid lg:grid-cols-2 gap-6\">\n        {/* Feedback Classification */}\n        <Card>\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Automated Classification System</h2>\n          <div className=\"space-y-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <h3 className=\"font-medium text-blue-900 mb-2\">Classification Features</h3>\n              <ul className=\"text-sm text-blue-800 space-y-1\">\n                <li>• Automatic type detection (bug, feature, improvement, etc.)</li>\n                <li>• Priority assignment based on keywords and context</li>\n                <li>• Effort estimation for sprint planning</li>\n                <li>• Category mapping to product areas</li>\n                <li>• Label generation for better organization</li>\n              </ul>\n            </div>\n            \n            <div className=\"bg-green-50 p-4 rounded-lg\">\n              <h3 className=\"font-medium text-green-900 mb-2\">Sprint Integration</h3>\n              <ul className=\"text-sm text-green-800 space-y-1\">\n                <li>• Automatic sprint capacity calculation</li>\n                <li>• Priority-based ticket sorting</li>\n                <li>• Effort point distribution (XS: 1pt → XXL: 21pts)</li>\n                <li>• Backlog management with overflow handling</li>\n              </ul>\n            </div>\n          </div>\n        </Card>\n\n        {/* Recent Activity */}\n        <Card>\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Feedback Activity</h2>\n          <div className=\"space-y-3\">\n            {!loading && analytics?.recentFeedback?.slice(0, 5).map((feedback: any, index: number) => (\n              <div key={index} className=\"p-3 border border-gray-200 rounded-lg\">\n                <div className=\"flex items-center justify-between mb-1\">\n                  <span className=\"font-medium text-sm\">{feedback.title}</span>\n                  <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                    feedback.priority === 'critical' ? 'bg-red-100 text-red-800' :\n                    feedback.priority === 'high' ? 'bg-orange-100 text-orange-800' :\n                    feedback.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-green-100 text-green-800'\n                  }`}>\n                    {feedback.priority}\n                  </span>\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  {feedback.type} • {feedback.category} • {new Date(feedback.timestamp).toLocaleDateString()}\n                </div>\n              </div>\n            ))}\n            {loading && (\n              <div className=\"text-center text-gray-500 py-8\">\n                <div className=\"animate-pulse\">Loading recent feedback...</div>\n              </div>\n            )}\n            {!loading && (!analytics?.recentFeedback || analytics.recentFeedback.length === 0) && (\n              <div className=\"text-center text-gray-500 py-8\">\n                <MessageSquare className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\n                <p>No feedback submitted yet</p>\n              </div>\n            )}\n          </div>\n        </Card>\n      </div>\n\n      {/* Feedback List & Triage */}\n      <FeedbackList />\n\n      {/* GitHub Integration */}\n      <GitHubIntegration onConfigChange={loadAnalytics} />\n\n      {/* Deploy Status */}\n      <DeployStatusPanel />\n\n      {/* RBAC Seed Status */}\n      <Card>\n        <div className=\"flex items-center justify-between mb-3\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">RBAC Seeding Status</h2>\n          <button\n            onClick={refreshSeedStatus}\n            className=\"px-3 py-1 text-sm bg-gray-100 rounded hover:bg-gray-200\"\n          >\n            Refresh\n          </button>\n        </div>\n        <div className=\"grid md:grid-cols-3 gap-4 text-sm\">\n          <div>\n            <div className=\"font-medium text-gray-800 mb-1\">Tenant</div>\n            <div className=\"text-gray-600\">{seedStatus?.tenantId || 'unknown'}</div>\n          </div>\n          <div>\n            <div className=\"font-medium text-gray-800 mb-1\">IDs Assigned</div>\n            <div className=\"text-gray-600\">{seedStatus?.totalAssigned ?? 0}</div>\n          </div>\n          <div>\n            <div className=\"font-medium text-gray-800 mb-1\">Emails Resolved/Unresolved</div>\n            <div className=\"text-gray-600\">{seedStatus ? `${seedStatus.totalResolved}/${seedStatus.totalUnresolved}` : '0/0'}</div>\n          </div>\n        </div>\n\n        <div className=\"grid md:grid-cols-3 gap-6 mt-4\">\n          <div>\n            <div className=\"font-medium text-gray-800 mb-2\">Assigned User IDs</div>\n            <ul className=\"text-xs text-gray-600 space-y-1 max-h-36 overflow-auto border rounded p-2\">\n              {(seedStatus?.idsAssigned || []).map((id, i) => (\n                <li key={i} className=\"font-mono\">{id}</li>\n              ))}\n              {(!seedStatus?.idsAssigned || seedStatus.idsAssigned.length === 0) && (\n                <li className=\"text-gray-400\">None</li>\n              )}\n            </ul>\n          </div>\n          <div>\n            <div className=\"font-medium text-gray-800 mb-2\">Resolved Emails</div>\n            <ul className=\"text-xs text-gray-600 space-y-1 max-h-36 overflow-auto border rounded p-2\">\n              {(seedStatus?.emailsResolved || []).map((e, i) => (\n                <li key={i}>{e}</li>\n              ))}\n              {(!seedStatus?.emailsResolved || seedStatus.emailsResolved.length === 0) && (\n                <li className=\"text-gray-400\">None</li>\n              )}\n            </ul>\n          </div>\n          <div>\n            <div className=\"font-medium text-gray-800 mb-2\">Unresolved Emails</div>\n            <ul className=\"text-xs text-gray-600 space-y-1 max-h-36 overflow-auto border rounded p-2\">\n              {(seedStatus?.emailsUnresolved || []).map((e, i) => (\n                <li key={i}>{e}</li>\n              ))}\n              {(!seedStatus?.emailsUnresolved || seedStatus.emailsUnresolved.length === 0) && (\n                <li className=\"text-gray-400\">None</li>\n              )}\n            </ul>\n          </div>\n        </div>\n      </Card>\n\n      {/* Data Management */}\n      <Card>\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Data Management</h2>\n        <div className=\"space-y-4\">\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n            <h3 className=\"font-medium text-yellow-900 mb-2\">⚠️ Important Notes</h3>\n            <ul className=\"text-sm text-yellow-800 space-y-1\">\n              <li>• Feedback data is currently stored locally in browser localStorage</li>\n              <li>• In production, this should be connected to a backend API</li>\n              <li>• Data may be lost if browser storage is cleared</li>\n              <li>• Export data regularly for backup purposes</li>\n            </ul>\n          </div>\n          \n          <div className=\"flex space-x-4\">\n            <button\n              onClick={exportData}\n              className=\"px-4 py-2 bg-blue-100 text-blue-700 rounded-md hover:bg-blue-200\"\n            >\n              Export All Data\n            </button>\n            <button\n              onClick={loadAnalytics}\n              className=\"px-4 py-2 bg-green-100 text-green-700 rounded-md hover:bg-green-200\"\n              disabled={loading}\n            >\n              {loading ? 'Refreshing...' : 'Refresh Analytics'}\n            </button>\n            <button\n              onClick={clearData}\n              className=\"px-4 py-2 bg-red-100 text-red-700 rounded-md hover:bg-red-200\"\n            >\n              Clear All Data\n            </button>\n          </div>\n        </div>\n      </Card>\n\n      {/* Sprint Planning Workflow */}\n      <Card>\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <Calendar className=\"w-5 h-5 mr-2\" />\n          Sprint Planning Workflow\n        </h2>\n        <div className=\"grid md:grid-cols-3 gap-6\">\n          <div className=\"space-y-3\">\n            <h3 className=\"font-medium text-green-900\">1. Collection</h3>\n            <div className=\"text-sm text-gray-600\">\n              <p>Users submit feedback through the floating feedback button throughout the application.</p>\n              <div className=\"mt-2 p-2 bg-green-50 rounded\">\n                <strong>Automated:</strong> Type detection, priority assignment, effort estimation\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"space-y-3\">\n            <h3 className=\"font-medium text-blue-900\">2. Classification</h3>\n            <div className=\"text-sm text-gray-600\">\n              <p>ML-style classification assigns tickets to appropriate categories and estimates work required.</p>\n              <div className=\"mt-2 p-2 bg-blue-50 rounded\">\n                <strong>Output:</strong> Categorized tickets with priority, effort, and labels\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"space-y-3\">\n            <h3 className=\"font-medium text-purple-900\">3. Sprint Planning</h3>\n            <div className=\"text-sm text-gray-600\">\n              <p>Automated sprint capacity calculation distributes tickets across current and future sprints.</p>\n              <div className=\"mt-2 p-2 bg-purple-50 rounded\">\n                <strong>Result:</strong> Ready-to-implement sprint backlog\n              </div>\n            </div>\n          </div>\n        </div>\n      </Card>\n\n      {/* Feedback Dashboard Modal */}\n      <FeedbackDashboard\n        isOpen={isDashboardOpen}\n        onClose={() => setIsDashboardOpen(false)}\n      />\n    </div>\n  );\n};\n\nexport default FeedbackAdmin;\n"],"names":["__iconNode","CircleCheck","createLucideIcon","GitBranch","Github","Key","FeedbackDashboard","isOpen","onClose","analytics","setAnalytics","useState","loading","setLoading","useEffect","loadAnalytics","data","feedbackService","error","exportData","blob","url","a","getPriorityColor","priority","getTypeIcon","type","jsx","Modal","jsxs","RefreshCw","totalFeedback","totalTickets","byType","byCategory","byPriority","recentFeedback","sprintPlan","Download","Card","BarChart3","count","AlertTriangle","Target","Calendar","item","index","Clock","TrendingUp","Users","feedback","GitHubSetupGuide","activeStep","setActiveStep","copiedText","setCopiedText","copyToClipboard","text","label","err","steps","ExternalLink","Check","Copy","_","React","Settings","BookOpen","ChevronRight","GitHubIntegration","onConfigChange","config","setConfig","showToken","setShowToken","testing","setTesting","testResult","setTestResult","saving","setSaving","errors","setErrors","showGuide","setShowGuide","existingConfig","githubService","handleInputChange","field","value","prev","handleTest","validation","originalConfig","result","handleSave","handleClear","e","EyeOff","Eye","X","TestTube","Save","statuses","priorities","types","priorityColor","p","FeedbackList","items","setItems","total","setTotal","page","setPage","limit","setLimit","filters","setFilters","query","setQuery","creatingIssue","setCreatingIssue","updatingStatus","setUpdatingStatus","load","filtered","useMemo","q","i","updateStatus","id","status","createIssue","res","Search","f","s","fb","n","DeployStatusPanel","setData","setError","cancelled","token","getAccessToken","resp","json","raw","FeedbackAdmin","isDashboardOpen","setIsDashboardOpen","clearData","refreshMigrationStatus","refreshSeedStatus","showToast","useToast","setMigration","setSeedStatus","runMigration","migration","seedStatus","HealthBanner","Database","CheckCircle2","MessageSquare"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}