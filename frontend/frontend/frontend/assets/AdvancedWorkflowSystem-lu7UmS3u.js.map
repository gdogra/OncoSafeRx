{"version":3,"file":"AdvancedWorkflowSystem-lu7UmS3u.js","sources":["../../node_modules/lucide-react/dist/esm/icons/flag.js","../../src/components/Workflow/AdvancedWorkflowSystem.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M4 22V4a1 1 0 0 1 .4-.8A6 6 0 0 1 8 2c3 0 5 2 7.333 2q2 0 3.067-.8A1 1 0 0 1 20 4v10a1 1 0 0 1-.4.8A6 6 0 0 1 16 16c-3 0-5-2-8-2a6 6 0 0 0-4 1.528\",\n      key: \"1jaruq\"\n    }\n  ]\n];\nconst Flag = createLucideIcon(\"flag\", __iconNode);\n\nexport { __iconNode, Flag as default };\n//# sourceMappingURL=flag.js.map\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport Alert from '../UI/Alert';\nimport { useToast } from '../UI/Toast';\nimport { \n  Workflow, \n  Play, \n  Pause, \n  CheckCircle, \n  Clock, \n  AlertCircle, \n  Users, \n  Calendar,\n  FileText,\n  MessageSquare,\n  Smartphone,\n  Tablet,\n  Monitor,\n  Settings,\n  Plus,\n  ArrowRight,\n  BarChart3,\n  Zap,\n  Target,\n  Layers,\n  GitBranch,\n  Timer,\n  Bell,\n  Archive,\n  Search,\n  Filter,\n  Download,\n  Upload,\n  RefreshCw,\n  Edit,\n  Trash2,\n  Copy,\n  Share,\n  Star,\n  Flag,\n  TrendingUp,\n  Shield,\n  AlertTriangle\n} from 'lucide-react';\n\ninterface WorkflowTemplate {\n  id: string;\n  name: string;\n  description: string;\n  category: 'patient-care' | 'medication-review' | 'treatment-planning' | 'quality-assurance' | 'research';\n  steps: WorkflowStep[];\n  estimatedDuration: number; // minutes\n  difficulty: 'easy' | 'moderate' | 'complex';\n  specialties: string[];\n  tags: string[];\n  usageCount: number;\n  rating: number;\n  createdBy: string;\n  lastModified: string;\n  isPublic: boolean;\n  mobileOptimized: boolean;\n}\n\ninterface WorkflowStep {\n  id: string;\n  title: string;\n  description: string;\n  type: 'task' | 'decision' | 'review' | 'approval' | 'notification';\n  estimatedTime: number; // minutes\n  dependencies: string[];\n  assignedRole: string[];\n  requiredData: string[];\n  checklist: ChecklistItem[];\n  automationRules?: AutomationRule[];\n}\n\ninterface ChecklistItem {\n  id: string;\n  text: string;\n  required: boolean;\n  completed: boolean;\n  notes?: string;\n}\n\ninterface AutomationRule {\n  id: string;\n  trigger: string;\n  condition: string;\n  action: string;\n  enabled: boolean;\n}\n\ninterface WorkflowInstance {\n  id: string;\n  templateId: string;\n  templateName: string;\n  patientId?: string;\n  patientName?: string;\n  status: 'active' | 'completed' | 'paused' | 'cancelled';\n  currentStep: number;\n  startedDate: string;\n  completedDate?: string;\n  assignedTo: string[];\n  progress: number;\n  stepStatuses: StepStatus[];\n  notes: WorkflowNote[];\n}\n\ninterface StepStatus {\n  stepId: string;\n  status: 'pending' | 'in-progress' | 'completed' | 'skipped';\n  startedDate?: string;\n  completedDate?: string;\n  assignedTo?: string;\n  timeSpent?: number;\n  notes?: string;\n}\n\ninterface WorkflowNote {\n  id: string;\n  stepId?: string;\n  author: string;\n  content: string;\n  timestamp: string;\n  type: 'comment' | 'decision' | 'issue' | 'approval';\n}\n\ninterface MobileOptimization {\n  deviceType: 'phone' | 'tablet' | 'desktop';\n  screenSize: string;\n  touchOptimized: boolean;\n  offlineCapable: boolean;\n  quickActions: QuickAction[];\n}\n\ninterface QuickAction {\n  id: string;\n  label: string;\n  icon: string;\n  action: string;\n  shortcut?: string;\n}\n\nconst AdvancedWorkflowSystem: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'templates' | 'instances' | 'mobile' | 'analytics'>('dashboard');\n  const [workflowTemplates, setWorkflowTemplates] = useState<WorkflowTemplate[]>([]);\n  const [workflowInstances, setWorkflowInstances] = useState<WorkflowInstance[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [deviceType, setDeviceType] = useState<'phone' | 'tablet' | 'desktop'>('desktop');\n  const [selectedTemplate, setSelectedTemplate] = useState<WorkflowTemplate | null>(null);\n  const { showToast } = useToast();\n  const searchInputRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    initializeWorkflowData();\n    detectDeviceType();\n  }, []);\n\n  const detectDeviceType = () => {\n    const width = window.innerWidth;\n    if (width < 768) {\n      setDeviceType('phone');\n    } else if (width < 1024) {\n      setDeviceType('tablet');\n    } else {\n      setDeviceType('desktop');\n    }\n  };\n\n  const initializeWorkflowData = () => {\n    setLoading(true);\n    \n    setTimeout(() => {\n      setWorkflowTemplates([\n        {\n          id: 'template-001',\n          name: 'New Patient Oncology Workup',\n          description: 'Comprehensive workflow for new cancer patient evaluation and treatment planning',\n          category: 'patient-care',\n          estimatedDuration: 120,\n          difficulty: 'complex',\n          specialties: ['Oncology', 'Nursing'],\n          tags: ['assessment', 'staging', 'multidisciplinary'],\n          usageCount: 1247,\n          rating: 4.8,\n          createdBy: 'Dr. Sarah Chen',\n          lastModified: '2024-01-15T10:00:00Z',\n          isPublic: true,\n          mobileOptimized: true,\n          steps: [\n            {\n              id: 'step-001',\n              title: 'Initial Assessment',\n              description: 'Complete initial patient history and physical examination',\n              type: 'task',\n              estimatedTime: 30,\n              dependencies: [],\n              assignedRole: ['oncologist', 'nurse'],\n              requiredData: ['medical-history', 'physical-exam', 'vital-signs'],\n              checklist: [\n                { id: 'check-001', text: 'Obtain complete medical history', required: true, completed: false },\n                { id: 'check-002', text: 'Perform physical examination', required: true, completed: false },\n                { id: 'check-003', text: 'Document performance status', required: true, completed: false },\n                { id: 'check-004', text: 'Review prior imaging', required: false, completed: false }\n              ]\n            },\n            {\n              id: 'step-002',\n              title: 'Diagnostic Workup',\n              description: 'Order and review necessary diagnostic tests',\n              type: 'task',\n              estimatedTime: 45,\n              dependencies: ['step-001'],\n              assignedRole: ['oncologist'],\n              requiredData: ['lab-orders', 'imaging-orders'],\n              checklist: [\n                { id: 'check-005', text: 'Order staging imaging', required: true, completed: false },\n                { id: 'check-006', text: 'Order tumor markers', required: true, completed: false },\n                { id: 'check-007', text: 'Order genetic testing if indicated', required: false, completed: false }\n              ]\n            },\n            {\n              id: 'step-003',\n              title: 'Multidisciplinary Review',\n              description: 'Present case at tumor board for treatment planning',\n              type: 'review',\n              estimatedTime: 30,\n              dependencies: ['step-002'],\n              assignedRole: ['oncologist', 'surgeon', 'radiation-oncologist'],\n              requiredData: ['staging-results', 'pathology', 'imaging'],\n              checklist: [\n                { id: 'check-008', text: 'Prepare case presentation', required: true, completed: false },\n                { id: 'check-009', text: 'Present at tumor board', required: true, completed: false },\n                { id: 'check-010', text: 'Document recommendations', required: true, completed: false }\n              ]\n            },\n            {\n              id: 'step-004',\n              title: 'Treatment Planning',\n              description: 'Develop comprehensive treatment plan based on recommendations',\n              type: 'task',\n              estimatedTime: 15,\n              dependencies: ['step-003'],\n              assignedRole: ['oncologist'],\n              requiredData: ['tumor-board-notes', 'patient-preferences'],\n              checklist: [\n                { id: 'check-011', text: 'Create treatment plan', required: true, completed: false },\n                { id: 'check-012', text: 'Discuss with patient', required: true, completed: false },\n                { id: 'check-013', text: 'Schedule follow-up', required: true, completed: false }\n              ]\n            }\n          ]\n        },\n        {\n          id: 'template-002',\n          name: 'Chemotherapy Safety Check',\n          description: 'Pre-chemotherapy safety verification and administration workflow',\n          category: 'medication-review',\n          estimatedDuration: 45,\n          difficulty: 'moderate',\n          specialties: ['Nursing', 'Pharmacy'],\n          tags: ['safety', 'verification', 'administration'],\n          usageCount: 3156,\n          rating: 4.9,\n          createdBy: 'Lisa Rodriguez, PharmD',\n          lastModified: '2024-01-18T14:30:00Z',\n          isPublic: true,\n          mobileOptimized: true,\n          steps: [\n            {\n              id: 'step-005',\n              title: 'Patient Identification',\n              description: 'Verify patient identity using two identifiers',\n              type: 'task',\n              estimatedTime: 5,\n              dependencies: [],\n              assignedRole: ['nurse'],\n              requiredData: ['patient-id', 'patient-verification'],\n              checklist: [\n                { id: 'check-014', text: 'Verify patient name', required: true, completed: false },\n                { id: 'check-015', text: 'Verify date of birth', required: true, completed: false },\n                { id: 'check-016', text: 'Check patient wristband', required: true, completed: false }\n              ]\n            },\n            {\n              id: 'step-006',\n              title: 'Pre-medication Assessment',\n              description: 'Assess patient readiness for chemotherapy',\n              type: 'task',\n              estimatedTime: 15,\n              dependencies: ['step-005'],\n              assignedRole: ['nurse'],\n              requiredData: ['vital-signs', 'lab-results', 'symptoms'],\n              checklist: [\n                { id: 'check-017', text: 'Check vital signs', required: true, completed: false },\n                { id: 'check-018', text: 'Review recent lab results', required: true, completed: false },\n                { id: 'check-019', text: 'Assess symptoms/toxicities', required: true, completed: false },\n                { id: 'check-020', text: 'Verify allergies', required: true, completed: false }\n              ]\n            },\n            {\n              id: 'step-007',\n              title: 'Medication Verification',\n              description: 'Double-check medication orders and preparation',\n              type: 'review',\n              estimatedTime: 20,\n              dependencies: ['step-006'],\n              assignedRole: ['pharmacist', 'nurse'],\n              requiredData: ['medication-orders', 'preparation-checklist'],\n              checklist: [\n                { id: 'check-021', text: 'Verify medication name and dose', required: true, completed: false },\n                { id: 'check-022', text: 'Check expiration dates', required: true, completed: false },\n                { id: 'check-023', text: 'Confirm route of administration', required: true, completed: false },\n                { id: 'check-024', text: 'Two-person verification', required: true, completed: false }\n              ]\n            },\n            {\n              id: 'step-008',\n              title: 'Administration',\n              description: 'Safe administration of chemotherapy',\n              type: 'task',\n              estimatedTime: 5,\n              dependencies: ['step-007'],\n              assignedRole: ['nurse'],\n              requiredData: ['verified-medications', 'administration-schedule'],\n              checklist: [\n                { id: 'check-025', text: 'Final patient verification', required: true, completed: false },\n                { id: 'check-026', text: 'Document administration', required: true, completed: false },\n                { id: 'check-027', text: 'Monitor for immediate reactions', required: true, completed: false }\n              ]\n            }\n          ]\n        },\n        {\n          id: 'template-003',\n          name: 'Treatment Response Evaluation',\n          description: 'Systematic evaluation of treatment response and next steps',\n          category: 'quality-assurance',\n          estimatedDuration: 60,\n          difficulty: 'moderate',\n          specialties: ['Oncology', 'Radiology'],\n          tags: ['response', 'imaging', 'assessment'],\n          usageCount: 892,\n          rating: 4.6,\n          createdBy: 'Dr. Michael Park',\n          lastModified: '2024-01-12T09:15:00Z',\n          isPublic: true,\n          mobileOptimized: false,\n          steps: [\n            {\n              id: 'step-009',\n              title: 'Imaging Review',\n              description: 'Review follow-up imaging studies',\n              type: 'review',\n              estimatedTime: 30,\n              dependencies: [],\n              assignedRole: ['radiologist', 'oncologist'],\n              requiredData: ['current-imaging', 'baseline-imaging'],\n              checklist: [\n                { id: 'check-028', text: 'Compare to baseline imaging', required: true, completed: false },\n                { id: 'check-029', text: 'Measure target lesions', required: true, completed: false },\n                { id: 'check-030', text: 'Assess new lesions', required: true, completed: false },\n                { id: 'check-031', text: 'Apply RECIST criteria', required: true, completed: false }\n              ]\n            },\n            {\n              id: 'step-010',\n              title: 'Clinical Assessment',\n              description: 'Evaluate clinical response and patient status',\n              type: 'task',\n              estimatedTime: 20,\n              dependencies: ['step-009'],\n              assignedRole: ['oncologist'],\n              requiredData: ['imaging-results', 'lab-results', 'patient-symptoms'],\n              checklist: [\n                { id: 'check-032', text: 'Review tumor markers', required: true, completed: false },\n                { id: 'check-033', text: 'Assess symptom improvement', required: true, completed: false },\n                { id: 'check-034', text: 'Evaluate performance status', required: true, completed: false }\n              ]\n            },\n            {\n              id: 'step-011',\n              title: 'Treatment Planning',\n              description: 'Determine next treatment steps',\n              type: 'decision',\n              estimatedTime: 10,\n              dependencies: ['step-010'],\n              assignedRole: ['oncologist'],\n              requiredData: ['response-assessment', 'patient-preferences'],\n              checklist: [\n                { id: 'check-035', text: 'Determine response category', required: true, completed: false },\n                { id: 'check-036', text: 'Plan next steps', required: true, completed: false },\n                { id: 'check-037', text: 'Schedule follow-up', required: true, completed: false }\n              ]\n            }\n          ]\n        }\n      ]);\n\n      setWorkflowInstances([\n        {\n          id: 'instance-001',\n          templateId: 'template-001',\n          templateName: 'New Patient Oncology Workup',\n          patientId: 'patient-123',\n          patientName: 'Sarah Chen',\n          status: 'active',\n          currentStep: 2,\n          startedDate: '2024-01-20T08:00:00Z',\n          assignedTo: ['Dr. Michael Park', 'Nurse Johnson'],\n          progress: 50,\n          stepStatuses: [\n            { stepId: 'step-001', status: 'completed', startedDate: '2024-01-20T08:00:00Z', completedDate: '2024-01-20T08:30:00Z', assignedTo: 'Dr. Michael Park', timeSpent: 30 },\n            { stepId: 'step-002', status: 'in-progress', startedDate: '2024-01-20T08:30:00Z', assignedTo: 'Dr. Michael Park' },\n            { stepId: 'step-003', status: 'pending' },\n            { stepId: 'step-004', status: 'pending' }\n          ],\n          notes: [\n            { id: 'note-001', stepId: 'step-001', author: 'Dr. Michael Park', content: 'Patient has good performance status. No significant comorbidities.', timestamp: '2024-01-20T08:25:00Z', type: 'comment' }\n          ]\n        },\n        {\n          id: 'instance-002',\n          templateId: 'template-002',\n          templateName: 'Chemotherapy Safety Check',\n          patientId: 'patient-456',\n          patientName: 'James Wilson',\n          status: 'completed',\n          currentStep: 4,\n          startedDate: '2024-01-20T10:00:00Z',\n          completedDate: '2024-01-20T10:45:00Z',\n          assignedTo: ['Nurse Smith', 'PharmD Rodriguez'],\n          progress: 100,\n          stepStatuses: [\n            { stepId: 'step-005', status: 'completed', startedDate: '2024-01-20T10:00:00Z', completedDate: '2024-01-20T10:05:00Z', timeSpent: 5 },\n            { stepId: 'step-006', status: 'completed', startedDate: '2024-01-20T10:05:00Z', completedDate: '2024-01-20T10:20:00Z', timeSpent: 15 },\n            { stepId: 'step-007', status: 'completed', startedDate: '2024-01-20T10:20:00Z', completedDate: '2024-01-20T10:40:00Z', timeSpent: 20 },\n            { stepId: 'step-008', status: 'completed', startedDate: '2024-01-20T10:40:00Z', completedDate: '2024-01-20T10:45:00Z', timeSpent: 5 }\n          ],\n          notes: []\n        }\n      ]);\n\n      setLoading(false);\n    }, 1000);\n  };\n\n  // Derived: filtered templates\n  const filteredTemplates = useMemo(() => {\n    const q = searchTerm.trim().toLowerCase();\n    return workflowTemplates.filter(t => {\n      const matchesCategory = selectedCategory === 'all' || t.category === (selectedCategory as any);\n      const matchesQuery = !q || t.name.toLowerCase().includes(q) || t.description.toLowerCase().includes(q) || t.tags.join(' ').toLowerCase().includes(q);\n      return matchesCategory && matchesQuery;\n    });\n  }, [workflowTemplates, searchTerm, selectedCategory]);\n\n  const notify = (type: 'success'|'info'|'warning'|'error', message: string) => {\n    showToast(type, message);\n  };\n\n  const startWorkflow = (template: WorkflowTemplate) => {\n    const now = new Date().toISOString();\n    const stepStatuses: StepStatus[] = template.steps.map((s, idx) => ({\n      stepId: s.id,\n      status: idx === 0 ? 'in-progress' : 'pending',\n      startedDate: idx === 0 ? now : undefined\n    }));\n    const instance: WorkflowInstance = {\n      id: `instance-${Date.now()}`,\n      templateId: template.id,\n      templateName: template.name,\n      patientId: 'patient-demo',\n      patientName: 'Demo Patient',\n      status: 'active',\n      currentStep: 1,\n      startedDate: now,\n      assignedTo: ['You'],\n      progress: 0,\n      stepStatuses,\n      notes: []\n    };\n    setWorkflowInstances(prev => [instance, ...prev]);\n    setActiveTab('instances');\n    notify('success', `Started workflow: ${template.name}`);\n  };\n\n  const continueWorkflow = (instance: WorkflowInstance) => {\n    setActiveTab('instances');\n    notify('info', `Continuing workflow for ${instance.patientName}`);\n  };\n\n  const handleQuickAction = (action: string) => {\n    switch (action) {\n      case 'start-new-workflow': {\n        const template = workflowTemplates[0] || filteredTemplates[0];\n        if (template) startWorkflow(template);\n        else notify('warning', 'No templates available to start.');\n        break;\n      }\n      case 'search-patient': {\n        setActiveTab('templates');\n        setTimeout(() => searchInputRef.current?.focus(), 0);\n        notify('info', 'Search ready — type to filter templates.');\n        break;\n      }\n      case 'quick-safety-check': {\n        notify('info', 'Launching quick safety check (demo).');\n        break;\n      }\n      case 'emergency-workflow': {\n        const emergency: WorkflowTemplate = {\n          id: 'template-emergency',\n          name: 'Emergency Response Protocol',\n          description: 'Rapid response sequence for clinical emergencies',\n          category: 'patient-care',\n          estimatedDuration: 15,\n          difficulty: 'complex',\n          specialties: ['ER', 'Nursing'],\n          tags: ['emergency','rapid'],\n          usageCount: 0,\n          rating: 5,\n          createdBy: 'System',\n          lastModified: new Date().toISOString(),\n          isPublic: false,\n          mobileOptimized: true,\n          steps: [\n            { id: 'e1', title: 'Assess ABCs', description: 'Airway, Breathing, Circulation', type: 'task', estimatedTime: 1, dependencies: [], assignedRole: ['nurse','physician'], requiredData: [], checklist: [] },\n            { id: 'e2', title: 'Call Code', description: 'Alert code team', type: 'notification', estimatedTime: 1, dependencies: ['e1'], assignedRole: ['nurse'], requiredData: [], checklist: [] },\n            { id: 'e3', title: 'Stabilize', description: 'Immediate stabilization measures', type: 'task', estimatedTime: 10, dependencies: ['e2'], assignedRole: ['team'], requiredData: [], checklist: [] }\n          ]\n        };\n        startWorkflow(emergency);\n        break;\n      }\n      default:\n        notify('warning', 'Action not implemented.');\n    }\n  };\n\n  const quickActions: QuickAction[] = [\n    { id: 'start-workflow', label: 'Start Workflow', icon: 'Play', action: 'start-new-workflow' },\n    { id: 'patient-search', label: 'Find Patient', icon: 'Search', action: 'search-patient' },\n    { id: 'safety-check', label: 'Safety Check', icon: 'Shield', action: 'quick-safety-check' },\n    { id: 'emergency', label: 'Emergency', icon: 'AlertTriangle', action: 'emergency-workflow' }\n  ];\n\n  const iconMap: Record<string, React.ComponentType<any>> = {\n    Play,\n    Search,\n    Shield,\n    AlertTriangle\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'easy': return 'bg-green-100 text-green-800';\n      case 'moderate': return 'bg-yellow-100 text-yellow-800';\n      case 'complex': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-blue-100 text-blue-800';\n      case 'completed': return 'bg-green-100 text-green-800';\n      case 'paused': return 'bg-yellow-100 text-yellow-800';\n      case 'cancelled': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const renderMobileView = () => (\n    <div className=\"space-y-4\">\n      {/* Mobile Header */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg p-4 text-white\">\n        <h2 className=\"text-lg font-semibold mb-2\">Workflow Mobile</h2>\n        <p className=\"text-sm text-blue-100\">Optimized for {deviceType} • Touch-friendly interface</p>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <h3 className=\"text-sm font-semibold text-gray-900 mb-3\">Quick Actions</h3>\n        <div className=\"grid grid-cols-2 gap-3\">\n          {quickActions.map(action => (\n            <button\n              key={action.id}\n              onClick={() => handleQuickAction(action.action)}\n              className=\"flex flex-col items-center justify-center p-4 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors\"\n            >\n              {(() => { const Icon = iconMap[action.icon] || Play; return <Icon className=\"w-6 h-6 text-blue-600 mb-2\" />; })()}\n              <span className=\"text-sm font-medium text-blue-900\">{action.label}</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Active Workflows */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <h3 className=\"text-sm font-semibold text-gray-900 mb-3\">Active Workflows</h3>\n        <div className=\"space-y-3\">\n          {workflowInstances.filter(instance => instance.status === 'active').map(instance => (\n            <div key={instance.id} className=\"border border-gray-200 rounded-lg p-3\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <h4 className=\"text-sm font-medium text-gray-900\">{instance.patientName}</h4>\n                <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(instance.status)}`}>\n                  {instance.status}\n                </span>\n              </div>\n              <p className=\"text-xs text-gray-600 mb-2\">{instance.templateName}</p>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"w-full bg-gray-200 rounded-full h-2 mr-3\">\n                  <div \n                    className=\"bg-blue-600 h-2 rounded-full\" \n                    style={{ width: `${instance.progress}%` }}\n                  ></div>\n                </div>\n                <span className=\"text-xs text-gray-500\">{instance.progress}%</span>\n              </div>\n              <button onClick={() => continueWorkflow(instance)} className=\"mt-2 w-full px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition-colors\">\n                Continue Workflow\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Device Optimization Status */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <h3 className=\"text-sm font-semibold text-gray-900 mb-3\">Mobile Optimization</h3>\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-gray-600\">Device Type</span>\n            <span className=\"text-sm font-medium text-gray-900 capitalize\">{deviceType}</span>\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-gray-600\">Touch Optimized</span>\n            <CheckCircle className=\"w-4 h-4 text-green-500\" />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-gray-600\">Offline Capable</span>\n            <CheckCircle className=\"w-4 h-4 text-green-500\" />\n          </div>\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-gray-600\">Voice Commands</span>\n            <CheckCircle className=\"w-4 h-4 text-green-500\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderDashboard = () => (\n    <div className=\"space-y-6\">\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Active Workflows</p>\n              <p className=\"text-2xl font-bold text-blue-600\">{workflowInstances.filter(i => i.status === 'active').length}</p>\n            </div>\n            <Workflow className=\"w-8 h-8 text-blue-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Completed Today</p>\n              <p className=\"text-2xl font-bold text-green-600\">{workflowInstances.filter(i => i.status === 'completed').length}</p>\n            </div>\n            <CheckCircle className=\"w-8 h-8 text-green-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Templates Available</p>\n              <p className=\"text-2xl font-bold text-purple-600\">{workflowTemplates.length}</p>\n            </div>\n            <Layers className=\"w-8 h-8 text-purple-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg p-4 border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Avg. Completion Time</p>\n              <p className=\"text-2xl font-bold text-orange-600\">47m</p>\n            </div>\n            <Timer className=\"w-8 h-8 text-orange-600\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Active Workflows */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Active Workflows</h3>\n        </div>\n        <div className=\"p-6\">\n          {workflowInstances.filter(instance => instance.status === 'active').map(instance => (\n            <div key={instance.id} className=\"border border-gray-200 rounded-lg p-4 mb-4 last:mb-0\">\n              <div className=\"flex items-start justify-between mb-3\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3 mb-2\">\n                    <h4 className=\"text-base font-medium text-gray-900\">{instance.patientName}</h4>\n                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(instance.status)}`}>\n                      {instance.status}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-2\">{instance.templateName}</p>\n                  <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n                    <span>Step {instance.currentStep} of {instance.stepStatuses.length}</span>\n                    <span>Started: {new Date(instance.startedDate).toLocaleString()}</span>\n                    <span>Assigned: {instance.assignedTo.join(', ')}</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mb-3\">\n                <div className=\"flex items-center justify-between mb-1\">\n                  <span className=\"text-sm text-gray-600\">Progress</span>\n                  <span className=\"text-sm font-medium text-gray-900\">{instance.progress}%</span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div \n                    className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\" \n                    style={{ width: `${instance.progress}%` }}\n                  ></div>\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  {instance.stepStatuses.map((step, index) => (\n                    <div key={step.stepId} className={`w-3 h-3 rounded-full ${\n                      step.status === 'completed' ? 'bg-green-500' :\n                      step.status === 'in-progress' ? 'bg-blue-500' :\n                      'bg-gray-300'\n                    }`} title={`Step ${index + 1}: ${step.status}`} />\n                  ))}\n                </div>\n                <button onClick={() => continueWorkflow(instance)} className=\"px-4 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition-colors\">\n                  Continue Workflow\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Popular Templates */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Popular Workflow Templates</h3>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {workflowTemplates.slice(0, 3).map(template => (\n              <div key={template.id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\n                <div className=\"flex items-start justify-between mb-3\">\n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-900 mb-1\">{template.name}</h4>\n                    <p className=\"text-xs text-gray-600\">{template.description}</p>\n                  </div>\n                  {template.mobileOptimized && (\n                    <Smartphone className=\"w-4 h-4 text-green-500\" title=\"Mobile Optimized\" />\n                  )}\n                </div>\n                \n                <div className=\"flex items-center justify-between mb-3\">\n                  <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getDifficultyColor(template.difficulty)}`}>\n                    {template.difficulty}\n                  </span>\n                  <div className=\"flex items-center space-x-1\">\n                    <Star className=\"w-3 h-3 text-yellow-500\" />\n                    <span className=\"text-xs text-gray-600\">{template.rating}</span>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                  <span>{template.usageCount} uses</span>\n                  <span>{template.estimatedDuration}m</span>\n                </div>\n                \n                <button onClick={() => startWorkflow(template)} className=\"mt-3 w-full px-3 py-2 bg-blue-50 text-blue-700 text-sm rounded-lg hover:bg-blue-100 transition-colors\">\n                  Start Workflow\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderTemplates = () => (\n    <div className=\"space-y-6\">\n      {/* Search and Filters */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-wrap gap-4\">\n          <div className=\"flex-1 min-w-64\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search workflow templates...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                ref={searchInputRef}\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n          \n          <select\n            value={selectedCategory}\n            onChange={(e) => setSelectedCategory(e.target.value)}\n            className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"all\">All Categories</option>\n            <option value=\"patient-care\">Patient Care</option>\n            <option value=\"medication-review\">Medication Review</option>\n            <option value=\"treatment-planning\">Treatment Planning</option>\n            <option value=\"quality-assurance\">Quality Assurance</option>\n            <option value=\"research\">Research</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Template Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {filteredTemplates.map(template => (\n          <div key={template.id} className=\"bg-white rounded-lg border border-gray-200 p-6 hover:shadow-lg transition-shadow\">\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">{template.name}</h3>\n                  {template.mobileOptimized && (\n                    <Smartphone className=\"w-4 h-4 text-green-500\" title=\"Mobile Optimized\" />\n                  )}\n                  {template.isPublic && (\n                    <Flag className=\"w-4 h-4 text-blue-500\" title=\"Public Template\" />\n                  )}\n                </div>\n                <p className=\"text-sm text-gray-600 mb-3\">{template.description}</p>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div>\n                <span className=\"text-xs text-gray-500\">Duration</span>\n                <p className=\"text-sm font-medium text-gray-900\">{template.estimatedDuration} minutes</p>\n              </div>\n              <div>\n                <span className=\"text-xs text-gray-500\">Difficulty</span>\n                <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getDifficultyColor(template.difficulty)}`}>\n                  {template.difficulty}\n                </span>\n              </div>\n              <div>\n                <span className=\"text-xs text-gray-500\">Usage</span>\n                <p className=\"text-sm font-medium text-gray-900\">{template.usageCount} times</p>\n              </div>\n              <div>\n                <span className=\"text-xs text-gray-500\">Rating</span>\n                <div className=\"flex items-center space-x-1\">\n                  <Star className=\"w-3 h-3 text-yellow-500\" />\n                  <span className=\"text-sm font-medium text-gray-900\">{template.rating}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <span className=\"text-xs text-gray-500 mb-1 block\">Specialties</span>\n              <div className=\"flex flex-wrap gap-1\">\n                {template.specialties.map(specialty => (\n                  <span key={specialty} className=\"inline-flex px-2 py-1 text-xs bg-purple-100 text-purple-800 rounded\">\n                    {specialty}\n                  </span>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <span className=\"text-xs text-gray-500 mb-1 block\">Steps ({template.steps.length})</span>\n              <div className=\"space-y-1\">\n                {template.steps.slice(0, 3).map((step, index) => (\n                  <div key={step.id} className=\"flex items-center space-x-2 text-xs\">\n                    <span className=\"w-4 h-4 rounded-full bg-gray-200 flex items-center justify-center text-gray-600 text-xs\">\n                      {index + 1}\n                    </span>\n                    <span className=\"text-gray-600\">{step.title}</span>\n                    <span className=\"text-gray-400\">({step.estimatedTime}m)</span>\n                  </div>\n                ))}\n                {template.steps.length > 3 && (\n                  <div className=\"text-xs text-gray-500\">+{template.steps.length - 3} more steps</div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n              <div className=\"text-xs text-gray-500\">\n                By {template.createdBy} • {new Date(template.lastModified).toLocaleDateString()}\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <button \n                  onClick={() => setSelectedTemplate(template)}\n                  className=\"px-3 py-1 text-xs text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\"\n                >\n                  View Details\n                </button>\n                <button onClick={() => startWorkflow(template)} className=\"px-3 py-1 bg-blue-600 text-white text-xs rounded-lg hover:bg-blue-700 transition-colors\">\n                  Start Workflow\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"flex items-center space-x-2\">\n          <RefreshCw className=\"w-6 h-6 animate-spin text-blue-600\" />\n          <span className=\"text-gray-600\">Loading workflow system...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center space-x-3 mb-4\">\n          <div className=\"p-2 bg-purple-100 rounded-lg\">\n            <Workflow className=\"w-6 h-6 text-purple-600\" />\n          </div>\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">Advanced Workflow & Mobile System</h1>\n            <p className=\"text-gray-600\">Streamlined clinical workflows with mobile optimization for point-of-care efficiency</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Toasts rendered globally by ToastProvider */}\n\n      {/* Mobile-First Quick Access (visible on smaller screens) */}\n      {deviceType !== 'desktop' && (\n        <div className=\"mb-6 lg:hidden\">\n          {renderMobileView()}\n        </div>\n      )}\n\n      {/* Desktop Tabs */}\n      <div className=\"hidden lg:block\">\n        <div className=\"border-b border-gray-200 mb-6\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {[\n              { id: 'dashboard', label: 'Dashboard', icon: BarChart3 },\n              { id: 'templates', label: 'Templates', icon: Layers },\n              { id: 'instances', label: 'Active Workflows', icon: Workflow },\n              { id: 'mobile', label: 'Mobile Optimization', icon: Smartphone },\n              { id: 'analytics', label: 'Analytics', icon: TrendingUp }\n            ].map(tab => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id as any)}\n                  className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-purple-500 text-purple-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span>{tab.label}</span>\n                  {tab.id === 'instances' && workflowInstances.filter(i => i.status === 'active').length > 0 && (\n                    <span className=\"inline-flex items-center justify-center w-4 h-4 text-xs font-bold text-white bg-blue-500 rounded-full\">\n                      {workflowInstances.filter(i => i.status === 'active').length}\n                    </span>\n                  )}\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        {activeTab === 'dashboard' && renderDashboard()}\n        {activeTab === 'templates' && renderTemplates()}\n        {activeTab === 'instances' && (\n          <div className=\"space-y-4\">\n            {workflowInstances.length === 0 && (\n              <div className=\"text-center py-12\">\n                <Workflow className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No workflow instances yet</h3>\n                <p className=\"text-gray-600\">Start one from Dashboard or Templates.</p>\n              </div>\n            )}\n            {workflowInstances.map(instance => (\n              <div key={instance.id} className=\"border border-gray-200 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div>\n                    <div className=\"flex items-center space-x-2\">\n                      <h4 className=\"font-medium text-gray-900\">{instance.patientName}</h4>\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(instance.status)}`}>{instance.status}</span>\n                    </div>\n                    <div className=\"text-sm text-gray-600\">{instance.templateName}</div>\n                  </div>\n                  <button onClick={() => continueWorkflow(instance)} className=\"px-3 py-1 bg-blue-600 text-white text-xs rounded-lg hover:bg-blue-700 transition-colors\">Open</button>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div className=\"bg-blue-600 h-2 rounded-full\" style={{ width: `${instance.progress}%` }} />\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n        {activeTab === 'mobile' && renderMobileView()}\n        {activeTab === 'analytics' && (\n          <div className=\"text-center py-12\">\n            <TrendingUp className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Workflow Analytics</h3>\n            <p className=\"text-gray-600\">Performance metrics and usage analytics will be shown here.</p>\n          </div>\n        )}\n      </div>\n\n      {/* Template Details Modal */}\n      {selectedTemplate && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/40\">\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-2xl p-6\">\n            <div className=\"flex items-start justify-between mb-4\">\n              <div>\n                <h3 className=\"text-xl font-semibold text-gray-900\">{selectedTemplate.name}</h3>\n                <p className=\"text-sm text-gray-600\">{selectedTemplate.description}</p>\n              </div>\n              <button onClick={() => setSelectedTemplate(null)} className=\"text-gray-500 hover:text-gray-700\">✕</button>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4 mb-4 text-sm\">\n              <div>\n                <span className=\"text-gray-500\">Category</span>\n                <div className=\"font-medium capitalize\">{selectedTemplate.category.replace('-', ' ')}</div>\n              </div>\n              <div>\n                <span className=\"text-gray-500\">Duration</span>\n                <div className=\"font-medium\">{selectedTemplate.estimatedDuration} minutes</div>\n              </div>\n              <div>\n                <span className=\"text-gray-500\">Difficulty</span>\n                <div className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getDifficultyColor(selectedTemplate.difficulty)}`}>{selectedTemplate.difficulty}</div>\n              </div>\n              <div>\n                <span className=\"text-gray-500\">Specialties</span>\n                <div className=\"font-medium\">{selectedTemplate.specialties.join(', ')}</div>\n              </div>\n            </div>\n            <div>\n              <span className=\"text-xs text-gray-500\">Steps</span>\n              <ol className=\"mt-2 space-y-2\">\n                {selectedTemplate.steps.map((s, i) => (\n                  <li key={s.id} className=\"flex items-start space-x-2 text-sm\">\n                    <span className=\"mt-0.5 inline-flex items-center justify-center w-5 h-5 rounded-full bg-gray-200 text-gray-700 text-xs\">{i + 1}</span>\n                    <div>\n                      <div className=\"font-medium text-gray-900\">{s.title}</div>\n                      <div className=\"text-gray-600\">{s.description}</div>\n                    </div>\n                  </li>\n                ))}\n              </ol>\n            </div>\n            <div className=\"mt-6 flex items-center justify-end space-x-2\">\n              <button onClick={() => setSelectedTemplate(null)} className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-lg\">Close</button>\n              <button onClick={() => { startWorkflow(selectedTemplate); setSelectedTemplate(null); }} className=\"px-4 py-2 text-sm bg-blue-600 text-white rounded-lg hover:bg-blue-700\">Start Workflow</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvancedWorkflowSystem;\n"],"names":["__iconNode","Flag","createLucideIcon","AdvancedWorkflowSystem","activeTab","setActiveTab","useState","workflowTemplates","setWorkflowTemplates","workflowInstances","setWorkflowInstances","loading","setLoading","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","deviceType","setDeviceType","selectedTemplate","setSelectedTemplate","showToast","useToast","searchInputRef","useRef","useEffect","initializeWorkflowData","detectDeviceType","width","filteredTemplates","useMemo","q","t","matchesCategory","matchesQuery","notify","type","message","startWorkflow","template","now","stepStatuses","s","idx","instance","prev","continueWorkflow","handleQuickAction","action","emergency","quickActions","iconMap","Play","Search","Shield","AlertTriangle","getDifficultyColor","difficulty","getStatusColor","status","renderMobileView","jsxs","jsx","Icon","CheckCircle","renderDashboard","i","Workflow","Layers","Timer","step","index","Smartphone","Star","renderTemplates","e","specialty","RefreshCw","BarChart3","TrendingUp","tab"],"mappings":"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","x_google_ignoreList":[0]}