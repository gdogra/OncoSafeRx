{"version":3,"file":"VisitorAnalyticsDashboard-BUogXTqi.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle.js","../../node_modules/lucide-react/dist/esm/icons/tablet.js","../../src/components/Analytics/RealTimeTracker.tsx","../../src/utils/trackingHelpers.ts","../../src/components/Analytics/TrackingExample.tsx","../../src/components/Analytics/VisitorAnalyticsDashboard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }]];\nconst Circle = createLucideIcon(\"circle\", __iconNode);\n\nexport { __iconNode, Circle as default };\n//# sourceMappingURL=circle.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"rect\", { width: \"16\", height: \"20\", x: \"4\", y: \"2\", rx: \"2\", ry: \"2\", key: \"76otgf\" }],\n  [\"line\", { x1: \"12\", x2: \"12.01\", y1: \"18\", y2: \"18\", key: \"1dp563\" }]\n];\nconst Tablet = createLucideIcon(\"tablet\", __iconNode);\n\nexport { __iconNode, Tablet as default };\n//# sourceMappingURL=tablet.js.map\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Activity,\n  Users,\n  Eye,\n  Clock,\n  MousePointer,\n  TrendingUp,\n  Wifi,\n  Circle,\n  MapPin,\n  Smartphone,\n  Monitor,\n  Tablet,\n  RefreshCw\n} from 'lucide-react';\n\ninterface LiveMetrics {\n  activeUsers: number;\n  currentPageViews: number;\n  recentActivities: LiveActivity[];\n  deviceBreakdown: { [key: string]: number };\n  topPages: { url: string; activeUsers: number }[];\n  averageSessionTime: number;\n  bounceRate: number;\n}\n\ninterface LiveActivity {\n  id: string;\n  type: 'page_view' | 'interaction' | 'session_start' | 'session_end';\n  timestamp: string;\n  userRole?: string;\n  deviceType: string;\n  location?: string;\n  pageUrl?: string;\n  details?: string;\n}\n\nconst RealTimeTracker: React.FC = () => {\n  const [liveMetrics, setLiveMetrics] = useState<LiveMetrics>({\n    activeUsers: 0,\n    currentPageViews: 0,\n    recentActivities: [],\n    deviceBreakdown: {},\n    topPages: [],\n    averageSessionTime: 0,\n    bounceRate: 0\n  });\n  const [isConnected, setIsConnected] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n  const websocketRef = useRef<WebSocket | null>(null);\n  const reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    connectWebSocket();\n    \n    return () => {\n      if (websocketRef.current) {\n        websocketRef.current.close();\n      }\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const connectWebSocket = () => {\n    try {\n      // In a real implementation, this would connect to your analytics WebSocket\n      // For now, we'll simulate real-time data\n      simulateRealTimeData();\n      setIsConnected(true);\n    } catch (error) {\n      console.error('WebSocket connection failed:', error);\n      setIsConnected(false);\n      \n      // Retry connection after 5 seconds\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectWebSocket();\n      }, 5000);\n    }\n  };\n\n  const simulateRealTimeData = () => {\n    const interval = setInterval(() => {\n      const mockActivity: LiveActivity = {\n        id: `activity-${Date.now()}`,\n        type: ['page_view', 'interaction', 'session_start'][Math.floor(Math.random() * 3)] as any,\n        timestamp: new Date().toISOString(),\n        userRole: ['oncologist', 'pharmacist', 'nurse'][Math.floor(Math.random() * 3)],\n        deviceType: ['desktop', 'mobile', 'tablet'][Math.floor(Math.random() * 3)],\n        location: ['United States', 'Canada', 'United Kingdom'][Math.floor(Math.random() * 3)],\n        pageUrl: ['/dashboard', '/search', '/interactions', '/protocols'][Math.floor(Math.random() * 4)],\n        details: 'User activity detected'\n      };\n\n      setLiveMetrics(prev => ({\n        activeUsers: Math.max(1, prev.activeUsers + (Math.random() > 0.7 ? (Math.random() > 0.5 ? 1 : -1) : 0)),\n        currentPageViews: prev.currentPageViews + (mockActivity.type === 'page_view' ? 1 : 0),\n        recentActivities: [mockActivity, ...prev.recentActivities.slice(0, 19)],\n        deviceBreakdown: {\n          desktop: (prev.deviceBreakdown.desktop || 0) + (mockActivity.deviceType === 'desktop' ? 1 : 0),\n          mobile: (prev.deviceBreakdown.mobile || 0) + (mockActivity.deviceType === 'mobile' ? 1 : 0),\n          tablet: (prev.deviceBreakdown.tablet || 0) + (mockActivity.deviceType === 'tablet' ? 1 : 0)\n        },\n        topPages: [\n          { url: '/dashboard', activeUsers: Math.floor(Math.random() * 15) + 5 },\n          { url: '/search', activeUsers: Math.floor(Math.random() * 12) + 3 },\n          { url: '/interactions', activeUsers: Math.floor(Math.random() * 8) + 2 },\n          { url: '/protocols', activeUsers: Math.floor(Math.random() * 6) + 1 }\n        ],\n        averageSessionTime: 180 + Math.floor(Math.random() * 120),\n        bounceRate: 0.2 + Math.random() * 0.3\n      }));\n\n      setLastUpdate(new Date());\n    }, 2000 + Math.random() * 3000); // Random interval between 2-5 seconds\n\n    // Clean up interval after 10 minutes to prevent memory leaks\n    setTimeout(() => {\n      clearInterval(interval);\n    }, 600000);\n\n    return interval;\n  };\n\n  const getActivityIcon = (type: string) => {\n    switch (type) {\n      case 'page_view': return <Eye className=\"w-3 h-3\" />;\n      case 'interaction': return <MousePointer className=\"w-3 h-3\" />;\n      case 'session_start': return <Users className=\"w-3 h-3\" />;\n      case 'session_end': return <Users className=\"w-3 h-3\" />;\n      default: return <Activity className=\"w-3 h-3\" />;\n    }\n  };\n\n  const getActivityColor = (type: string) => {\n    switch (type) {\n      case 'page_view': return 'text-blue-600 bg-blue-100';\n      case 'interaction': return 'text-green-600 bg-green-100';\n      case 'session_start': return 'text-purple-600 bg-purple-100';\n      case 'session_end': return 'text-orange-600 bg-orange-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getDeviceIcon = (deviceType: string) => {\n    switch (deviceType) {\n      case 'desktop': return <Monitor className=\"w-4 h-4\" />;\n      case 'mobile': return <Smartphone className=\"w-4 h-4\" />;\n      case 'tablet': return <Tablet className=\"w-4 h-4\" />;\n      default: return <Monitor className=\"w-4 h-4\" />;\n    }\n  };\n\n  const formatTimeAgo = (timestamp: string) => {\n    const now = new Date();\n    const time = new Date(timestamp);\n    const diffInSeconds = Math.floor((now.getTime() - time.getTime()) / 1000);\n\n    if (diffInSeconds < 60) return `${diffInSeconds}s ago`;\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;\n    return `${Math.floor(diffInSeconds / 3600)}h ago`;\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Connection Status */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className={`flex items-center space-x-2 ${isConnected ? 'text-green-600' : 'text-red-600'}`}>\n              <Circle className={`w-2 h-2 ${isConnected ? 'fill-green-600' : 'fill-red-600'}`} />\n              <Wifi className=\"w-4 h-4\" />\n              <span className=\"text-sm font-medium\">\n                {isConnected ? 'Live Tracking Active' : 'Connection Lost'}\n              </span>\n            </div>\n            {lastUpdate && (\n              <span className=\"text-xs text-gray-500\">\n                Last update: {lastUpdate.toLocaleTimeString()}\n              </span>\n            )}\n          </div>\n          <button\n            onClick={connectWebSocket}\n            className=\"flex items-center space-x-1 px-3 py-1 text-sm text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\"\n          >\n            <RefreshCw className=\"w-3 h-3\" />\n            <span>Refresh</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Live Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Active Users</p>\n              <p className=\"text-2xl font-bold text-green-600\">{liveMetrics.activeUsers}</p>\n            </div>\n            <div className=\"p-2 bg-green-100 rounded-lg\">\n              <Users className=\"w-5 h-5 text-green-600\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Page Views</p>\n              <p className=\"text-2xl font-bold text-blue-600\">{liveMetrics.currentPageViews}</p>\n            </div>\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\n              <Eye className=\"w-5 h-5 text-blue-600\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Avg Session</p>\n              <p className=\"text-2xl font-bold text-purple-600\">{Math.floor(liveMetrics.averageSessionTime / 60)}m</p>\n            </div>\n            <div className=\"p-2 bg-purple-100 rounded-lg\">\n              <Clock className=\"w-5 h-5 text-purple-600\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Bounce Rate</p>\n              <p className=\"text-2xl font-bold text-orange-600\">{(liveMetrics.bounceRate * 100).toFixed(1)}%</p>\n            </div>\n            <div className=\"p-2 bg-orange-100 rounded-lg\">\n              <TrendingUp className=\"w-5 h-5 text-orange-600\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Live Activity Feed & Device Breakdown */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Live Activity Feed */}\n        <div className=\"bg-white rounded-lg border border-gray-200\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Live Activity Feed</h3>\n          </div>\n          <div className=\"p-6\">\n            <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n              {liveMetrics.recentActivities.map((activity) => (\n                <div key={activity.id} className=\"flex items-start space-x-3 p-2 hover:bg-gray-50 rounded-lg\">\n                  <div className={`p-1 rounded-full ${getActivityColor(activity.type)}`}>\n                    {getActivityIcon(activity.type)}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between\">\n                      <p className=\"text-sm font-medium text-gray-900 capitalize\">\n                        {activity.type.replace('_', ' ')}\n                      </p>\n                      <span className=\"text-xs text-gray-500\">\n                        {formatTimeAgo(activity.timestamp)}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center space-x-2 mt-1\">\n                      {getDeviceIcon(activity.deviceType)}\n                      <span className=\"text-xs text-gray-600 capitalize\">{activity.userRole}</span>\n                      {activity.pageUrl && (\n                        <>\n                          <span className=\"text-xs text-gray-400\">•</span>\n                          <span className=\"text-xs text-gray-600\">{activity.pageUrl}</span>\n                        </>\n                      )}\n                      {activity.location && (\n                        <>\n                          <span className=\"text-xs text-gray-400\">•</span>\n                          <MapPin className=\"w-3 h-3 text-gray-400\" />\n                          <span className=\"text-xs text-gray-600\">{activity.location}</span>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Device Breakdown & Top Pages */}\n        <div className=\"space-y-6\">\n          {/* Device Breakdown */}\n          <div className=\"bg-white rounded-lg border border-gray-200\">\n            <div className=\"px-6 py-4 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Live Device Breakdown</h3>\n            </div>\n            <div className=\"p-6\">\n              <div className=\"space-y-3\">\n                {Object.entries(liveMetrics.deviceBreakdown).map(([device, count]) => (\n                  <div key={device} className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      {getDeviceIcon(device)}\n                      <span className=\"text-sm font-medium text-gray-900 capitalize\">{device}</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-sm text-gray-600\">{count}</span>\n                      <div className=\"w-16 bg-gray-200 rounded-full h-2\">\n                        <div \n                          className=\"bg-blue-600 h-2 rounded-full\"\n                          style={{ \n                            width: `${Math.min(100, (count / Math.max(1, Math.max(...Object.values(liveMetrics.deviceBreakdown)))) * 100)}%` \n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Top Pages */}\n          <div className=\"bg-white rounded-lg border border-gray-200\">\n            <div className=\"px-6 py-4 border-b border-gray-200\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Active Pages</h3>\n            </div>\n            <div className=\"p-6\">\n              <div className=\"space-y-3\">\n                {liveMetrics.topPages.map((page, index) => (\n                  <div key={page.url} className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-sm font-medium text-gray-500 w-4\">{index + 1}</span>\n                      <span className=\"text-sm font-medium text-gray-900\">{page.url}</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-sm text-gray-600\">{page.activeUsers} users</span>\n                      <div className=\"w-16 bg-gray-200 rounded-full h-2\">\n                        <div \n                          className=\"bg-green-600 h-2 rounded-full\"\n                          style={{ \n                            width: `${(page.activeUsers / Math.max(1, liveMetrics.topPages[0]?.activeUsers || 1)) * 100}%` \n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeTracker;","import React from 'react';\nimport visitorTracking from '../services/visitorTracking';\n\n// Clinical workflow tracking helpers\nexport const trackClinicalWorkflow = {\n  // Patient assessment workflows\n  startPatientAssessment: (patientType: string) => {\n    visitorTracking.trackCustomEvent('patient_assessment_started', {\n      patientType,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  completePatientAssessment: (patientType: string, duration: number, stepsCompleted: number) => {\n    visitorTracking.trackCustomEvent('patient_assessment_completed', {\n      patientType,\n      duration,\n      stepsCompleted,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  // Drug interaction checks\n  drugInteractionCheck: (drugCount: number, interactionsFound: number, severityLevels: string[]) => {\n    visitorTracking.trackCustomEvent('drug_interaction_check', {\n      drugCount,\n      interactionsFound,\n      severityLevels,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  // Protocol usage\n  protocolAccessed: (protocolType: string, organization: string, section?: string) => {\n    visitorTracking.trackCustomEvent('protocol_accessed', {\n      protocolType,\n      organization,\n      section,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  // Treatment planning\n  treatmentPlanCreated: (cancerType: string, treatmentType: string, planningTime: number) => {\n    visitorTracking.trackCustomEvent('treatment_plan_created', {\n      cancerType,\n      treatmentType,\n      planningTime,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  // Laboratory integration\n  labResultsReviewed: (testCount: number, criticalResults: number, alertsTriggered: number) => {\n    visitorTracking.trackCustomEvent('lab_results_reviewed', {\n      testCount,\n      criticalResults,\n      alertsTriggered,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  // Clinical decision support\n  cdsAlertTriggered: (alertType: string, severity: string, userAction: string) => {\n    visitorTracking.trackCustomEvent('cds_alert_triggered', {\n      alertType,\n      severity,\n      userAction,\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n\n// Feature usage tracking\nexport const trackFeatureUsage = {\n  searchPerformed: (searchType: string, query: string, resultCount: number, timeToResult: number) => {\n    visitorTracking.trackSearch(query, resultCount);\n    visitorTracking.trackCustomEvent('feature_search', {\n      searchType,\n      resultCount,\n      timeToResult,\n      queryLength: query.length,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  reportGenerated: (reportType: string, dataPoints: number, generationTime: number, format: string) => {\n    visitorTracking.trackCustomEvent('report_generated', {\n      reportType,\n      dataPoints,\n      generationTime,\n      format,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  exportPerformed: (dataType: string, format: string, recordCount: number) => {\n    visitorTracking.trackDownload(`export_${dataType}.${format}`, format);\n    visitorTracking.trackCustomEvent('data_export', {\n      dataType,\n      format,\n      recordCount,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  complianceCheckPerformed: (framework: string, requirementsChecked: number, violations: number) => {\n    visitorTracking.trackCustomEvent('compliance_check', {\n      framework,\n      requirementsChecked,\n      violations,\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n\n// Performance tracking\nexport const trackPerformance = {\n  pageLoadTime: (pageName: string, loadTime: number, resources: number) => {\n    visitorTracking.trackCustomEvent('page_performance', {\n      pageName,\n      loadTime,\n      resources,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  apiResponseTime: (endpoint: string, method: string, responseTime: number, status: number) => {\n    visitorTracking.trackCustomEvent('api_performance', {\n      endpoint,\n      method,\n      responseTime,\n      status,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  databaseQueryTime: (queryType: string, executionTime: number, recordsAffected: number) => {\n    visitorTracking.trackCustomEvent('database_performance', {\n      queryType,\n      executionTime,\n      recordsAffected,\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n\n// Error tracking\nexport const trackErrors = {\n  applicationError: (errorType: string, errorMessage: string, stackTrace?: string, severity: string = 'medium') => {\n    visitorTracking.trackCustomEvent('application_error', {\n      errorType,\n      errorMessage: errorMessage.substring(0, 200), // Limit length for privacy\n      stackTrace: stackTrace ? stackTrace.substring(0, 500) : undefined,\n      severity,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  validationError: (formName: string, fieldName: string, errorMessage: string) => {\n    visitorTracking.trackCustomEvent('validation_error', {\n      formName,\n      fieldName,\n      errorMessage,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  networkError: (endpoint: string, errorCode: number, errorMessage: string) => {\n    visitorTracking.trackCustomEvent('network_error', {\n      endpoint,\n      errorCode,\n      errorMessage,\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n\n// User engagement tracking\nexport const trackEngagement = {\n  timeOnFeature: (featureName: string, timeSpent: number, actionsPerformed: number) => {\n    visitorTracking.trackCustomEvent('feature_engagement', {\n      featureName,\n      timeSpent,\n      actionsPerformed,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  helpDocumentAccessed: (documentName: string, section?: string, timeSpent?: number) => {\n    visitorTracking.trackCustomEvent('help_accessed', {\n      documentName,\n      section,\n      timeSpent,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  userFeedbackSubmitted: (feedbackType: string, rating?: number, category?: string) => {\n    visitorTracking.trackCustomEvent('feedback_submitted', {\n      feedbackType,\n      rating,\n      category,\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n\n// Higher-order component for automatic feature tracking\nexport const withTracking = (WrappedComponent: React.ComponentType<any>, featureName: string) => {\n  return function TrackedComponent(props: any) {\n    const startTime = React.useRef<number>(Date.now());\n    const actionCount = React.useRef<number>(0);\n\n    React.useEffect(() => {\n      // Track feature access\n      visitorTracking.trackCustomEvent('feature_accessed', {\n        featureName,\n        timestamp: new Date().toISOString()\n      });\n\n      return () => {\n        // Track time spent when component unmounts\n        const timeSpent = Date.now() - startTime.current;\n        trackEngagement.timeOnFeature(featureName, timeSpent, actionCount.current);\n      };\n    }, []);\n\n    // Enhance props with tracking methods\n    const enhancedProps = {\n      ...props,\n      trackAction: (actionName: string, data?: any) => {\n        actionCount.current++;\n        visitorTracking.trackCustomEvent(`${featureName}_${actionName}`, {\n          ...data,\n          timestamp: new Date().toISOString()\n        });\n      }\n    };\n\n    return React.createElement(WrappedComponent, enhancedProps);\n  };\n};\n\n// React hook for tracking\nexport const useTracking = (featureName: string) => {\n  const startTime = React.useRef<number>(Date.now());\n  const actionCount = React.useRef<number>(0);\n\n  React.useEffect(() => {\n    visitorTracking.trackCustomEvent('feature_accessed', {\n      featureName,\n      timestamp: new Date().toISOString()\n    });\n\n    return () => {\n      const timeSpent = Date.now() - startTime.current;\n      trackEngagement.timeOnFeature(featureName, timeSpent, actionCount.current);\n    };\n  }, [featureName]);\n\n  const trackAction = React.useCallback((actionName: string, data?: any) => {\n    actionCount.current++;\n    visitorTracking.trackCustomEvent(`${featureName}_${actionName}`, {\n      ...data,\n      timestamp: new Date().toISOString()\n    });\n  }, [featureName]);\n\n  const trackTiming = React.useCallback((actionName: string, startTime: number, data?: any) => {\n    const duration = Date.now() - startTime;\n    trackAction(`${actionName}_timing`, {\n      ...data,\n      duration,\n      timestamp: new Date().toISOString()\n    });\n  }, [trackAction]);\n\n  return {\n    trackAction,\n    trackTiming,\n    startTimer: () => Date.now()\n  };\n};\n\n// Form tracking utilities\nexport const trackFormInteractions = {\n  formStarted: (formName: string, fieldCount: number) => {\n    visitorTracking.trackCustomEvent('form_started', {\n      formName,\n      fieldCount,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  formCompleted: (formName: string, completionTime: number, fieldCount: number, errorsEncountered: number) => {\n    visitorTracking.trackCustomEvent('form_completed', {\n      formName,\n      completionTime,\n      fieldCount,\n      errorsEncountered,\n      timestamp: new Date().toISOString()\n    });\n  },\n\n  formAbandoned: (formName: string, fieldsCompleted: number, totalFields: number, timeSpent: number) => {\n    visitorTracking.trackCustomEvent('form_abandoned', {\n      formName,\n      fieldsCompleted,\n      totalFields,\n      completionRate: fieldsCompleted / totalFields,\n      timeSpent,\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n\n// Privacy-safe data collection utilities\nexport const sanitizeTrackingData = {\n  // Remove patient identifiers from data\n  sanitizePatientData: (data: any) => {\n    const sensitiveFields = ['patientId', 'mrn', 'ssn', 'dateOfBirth', 'fullName', 'address', 'phone', 'email'];\n    const sanitized = { ...data };\n    \n    sensitiveFields.forEach(field => {\n      if (sanitized[field]) {\n        delete sanitized[field];\n      }\n    });\n    \n    return sanitized;\n  },\n\n  // Hash sensitive identifiers\n  hashSensitiveData: (data: string) => {\n    // In a real implementation, use a proper hashing library\n    return `hashed_${btoa(data).slice(0, 8)}`;\n  },\n\n  // Remove PII from error messages\n  sanitizeErrorMessage: (message: string) => {\n    // Remove common PII patterns\n    return message\n      .replace(/\\b\\d{3}-\\d{2}-\\d{4}\\b/g, '[SSN]') // SSN\n      .replace(/\\b\\d{3}-\\d{3}-\\d{4}\\b/g, '[PHONE]') // Phone\n      .replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '[EMAIL]') // Email\n      .replace(/\\bpatient\\s+\\w+\\s+\\w+/gi, 'patient [NAME]'); // Patient names\n  }\n};\n\nexport default {\n  trackClinicalWorkflow,\n  trackFeatureUsage,\n  trackPerformance,\n  trackErrors,\n  trackEngagement,\n  trackFormInteractions,\n  sanitizeTrackingData,\n  withTracking,\n  useTracking\n};","import React, { useState } from 'react';\nimport { useTracking, trackClinicalWorkflow, trackFeatureUsage, trackErrors } from '../../utils/trackingHelpers';\nimport { Search, Download, AlertTriangle, CheckCircle } from 'lucide-react';\n\n// Example component showing how to implement tracking\nconst TrackingExample: React.FC = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState<any[]>([]);\n  \n  // Use the tracking hook for this feature\n  const { trackAction, trackTiming, startTimer } = useTracking('drug_search_example');\n\n  const handleSearch = async () => {\n    const timer = startTimer();\n    \n    try {\n      // Track the search action\n      trackAction('search_initiated', {\n        queryLength: searchQuery.length,\n        hasFilters: false\n      });\n\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Mock search results\n      const mockResults = [\n        { id: 1, name: 'Acetaminophen', category: 'Analgesic' },\n        { id: 2, name: 'Ibuprofen', category: 'NSAID' },\n        { id: 3, name: 'Aspirin', category: 'Antiplatelet' }\n      ];\n      \n      setSearchResults(mockResults);\n      \n      // Track successful search with timing\n      trackTiming('search_completed', timer, {\n        resultCount: mockResults.length,\n        query: searchQuery.substring(0, 20) // Limit for privacy\n      });\n\n      // Use the specific feature tracking helper\n      trackFeatureUsage.searchPerformed(\n        'drug_search',\n        searchQuery,\n        mockResults.length,\n        Date.now() - timer\n      );\n\n    } catch (error) {\n      // Track errors\n      trackErrors.applicationError(\n        'search_error',\n        error instanceof Error ? error.message : 'Unknown search error',\n        undefined,\n        'medium'\n      );\n    }\n  };\n\n  const handleDrugInteractionCheck = () => {\n    // Track clinical workflow\n    trackClinicalWorkflow.drugInteractionCheck(\n      2, // drugCount\n      1, // interactionsFound\n      ['moderate'] // severityLevels\n    );\n\n    trackAction('interaction_check', {\n      drugCount: 2,\n      interactionsFound: 1\n    });\n  };\n\n  const handleReportGeneration = () => {\n    const timer = startTimer();\n    \n    // Simulate report generation\n    setTimeout(() => {\n      trackFeatureUsage.reportGenerated(\n        'interaction_report',\n        searchResults.length,\n        Date.now() - timer,\n        'pdf'\n      );\n\n      trackAction('report_generated', {\n        reportType: 'interaction_summary',\n        dataPoints: searchResults.length\n      });\n    }, 1000);\n  };\n\n  const handleProtocolAccess = () => {\n    trackClinicalWorkflow.protocolAccessed(\n      'NCCN_breast_cancer',\n      'NCCN',\n      'treatment_recommendations'\n    );\n\n    trackAction('protocol_accessed', {\n      protocol: 'NCCN_breast_cancer',\n      section: 'treatment_recommendations'\n    });\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Visitor Tracking Implementation Example</h2>\n        \n        <div className=\"space-y-6\">\n          {/* Search Example */}\n          <div className=\"border border-gray-200 rounded-lg p-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Drug Search with Tracking</h3>\n            <div className=\"flex space-x-4\">\n              <input\n                type=\"text\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                placeholder=\"Search for medications...\"\n                className=\"flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n              <button\n                onClick={handleSearch}\n                className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                <Search className=\"w-4 h-4\" />\n                <span>Search</span>\n              </button>\n            </div>\n            \n            {searchResults.length > 0 && (\n              <div className=\"mt-4\">\n                <p className=\"text-sm text-gray-600 mb-2\">Search Results ({searchResults.length}):</p>\n                <div className=\"space-y-2\">\n                  {searchResults.map(result => (\n                    <div key={result.id} className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                      <span className=\"font-medium\">{result.name}</span>\n                      <span className=\"text-sm text-gray-600\">{result.category}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Clinical Workflow Tracking Examples */}\n          <div className=\"border border-gray-200 rounded-lg p-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Clinical Workflow Tracking</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <button\n                onClick={handleDrugInteractionCheck}\n                className=\"flex flex-col items-center space-y-2 p-4 bg-orange-50 rounded-lg hover:bg-orange-100 transition-colors\"\n              >\n                <AlertTriangle className=\"w-6 h-6 text-orange-600\" />\n                <span className=\"text-sm font-medium text-orange-900\">Check Drug Interactions</span>\n                <span className=\"text-xs text-orange-700\">Tracks interaction analysis</span>\n              </button>\n\n              <button\n                onClick={handleReportGeneration}\n                className=\"flex flex-col items-center space-y-2 p-4 bg-green-50 rounded-lg hover:bg-green-100 transition-colors\"\n              >\n                <Download className=\"w-6 h-6 text-green-600\" />\n                <span className=\"text-sm font-medium text-green-900\">Generate Report</span>\n                <span className=\"text-xs text-green-700\">Tracks report creation</span>\n              </button>\n\n              <button\n                onClick={handleProtocolAccess}\n                className=\"flex flex-col items-center space-y-2 p-4 bg-purple-50 rounded-lg hover:bg-purple-100 transition-colors\"\n              >\n                <CheckCircle className=\"w-6 h-6 text-purple-600\" />\n                <span className=\"text-sm font-medium text-purple-900\">Access Protocol</span>\n                <span className=\"text-xs text-purple-700\">Tracks protocol usage</span>\n              </button>\n            </div>\n          </div>\n\n          {/* Implementation Code Example */}\n          <div className=\"border border-gray-200 rounded-lg p-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Implementation Example</h3>\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <pre className=\"text-sm text-gray-800 overflow-x-auto\">\n{`// Import tracking utilities\nimport { useTracking, trackClinicalWorkflow } from '../utils/trackingHelpers';\n\n// Use in your component\nconst { trackAction, trackTiming, startTimer } = useTracking('your_feature_name');\n\n// Track user actions\ntrackAction('button_clicked', { buttonType: 'search' });\n\n// Track clinical workflows\ntrackClinicalWorkflow.drugInteractionCheck(drugCount, interactionsFound, severityLevels);\n\n// Track performance with timing\nconst timer = startTimer();\n// ... perform action ...\ntrackTiming('action_completed', timer, { additionalData: 'value' });`}\n              </pre>\n            </div>\n          </div>\n\n          {/* Current Tracking Status */}\n          <div className=\"border border-gray-200 rounded-lg p-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Current Tracking Status</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-blue-50 rounded-lg p-3\">\n                <p className=\"text-sm font-medium text-blue-900\">Page Views</p>\n                <p className=\"text-xs text-blue-700\">Automatically tracked on route changes</p>\n              </div>\n              <div className=\"bg-green-50 rounded-lg p-3\">\n                <p className=\"text-sm font-medium text-green-900\">User Interactions</p>\n                <p className=\"text-xs text-green-700\">Clicks, scrolls, and form submissions</p>\n              </div>\n              <div className=\"bg-purple-50 rounded-lg p-3\">\n                <p className=\"text-sm font-medium text-purple-900\">Session Data</p>\n                <p className=\"text-xs text-purple-700\">Device info, duration, and engagement</p>\n              </div>\n              <div className=\"bg-orange-50 rounded-lg p-3\">\n                <p className=\"text-sm font-medium text-orange-900\">Privacy Protected</p>\n                <p className=\"text-xs text-orange-700\">HIPAA compliant, no PHI collected</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrackingExample;","import React, { useState, useEffect } from 'react';\nimport {\n  Users,\n  Eye,\n  Clock,\n  MousePointer,\n  Smartphone,\n  Monitor,\n  Tablet,\n  Globe,\n  TrendingUp,\n  TrendingDown,\n  Calendar,\n  Download,\n  Search,\n  Filter,\n  RefreshCw,\n  BarChart3,\n  PieChart,\n  Activity,\n  MapPin,\n  Shield,\n  UserCheck,\n  AlertCircle,\n  Info,\n  Settings\n} from 'lucide-react';\nimport visitorTracking, { AnalyticsMetrics, VisitorSession } from '../../services/visitorTracking';\nimport RealTimeTracker from './RealTimeTracker';\nimport TrackingExample from './TrackingExample';\n\ninterface AnalyticsPeriod {\n  label: string;\n  value: string;\n  days: number;\n}\n\nconst VisitorAnalyticsDashboard: React.FC = () => {\n  const [analytics, setAnalytics] = useState<AnalyticsMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [selectedPeriod, setSelectedPeriod] = useState('7d');\n  const [currentSession, setCurrentSession] = useState<VisitorSession | null>(null);\n  const [showPrivacySettings, setShowPrivacySettings] = useState(false);\n  const [activeTab, setActiveTab] = useState<'overview' | 'realtime' | 'privacy' | 'implementation'>('overview');\n\n  const periods: AnalyticsPeriod[] = [\n    { label: 'Last 24 Hours', value: '1d', days: 1 },\n    { label: 'Last 7 Days', value: '7d', days: 7 },\n    { label: 'Last 30 Days', value: '30d', days: 30 },\n    { label: 'Last 90 Days', value: '90d', days: 90 }\n  ];\n\n  useEffect(() => {\n    loadAnalytics();\n    setCurrentSession(visitorTracking.getCurrentSession());\n  }, [selectedPeriod]);\n\n  const loadAnalytics = async () => {\n    setLoading(true);\n    try {\n      console.log('📊 Loading visitor analytics for period:', selectedPeriod);\n      // Get real analytics data from visitor tracking service\n      const realAnalytics = await visitorTracking.getAnalytics(selectedPeriod);\n      console.log('📊 Real analytics data received:', realAnalytics);\n      \n      setAnalytics(realAnalytics);\n      setLoading(false);\n      return;\n      \n      // Fallback mock data if needed\n      const mockAnalytics: AnalyticsMetrics = {\n        totalVisitors: 1247,\n        uniqueVisitors: 892,\n        pageViews: 4521,\n        averageSessionDuration: 285, // seconds\n        bounceRate: 0.34,\n        topPages: [\n          { url: '/', views: 1205 },\n          { url: '/search', views: 987 },\n          { url: '/interactions', views: 654 },\n          { url: '/protocols', views: 432 },\n          { url: '/patients', views: 321 }\n        ],\n        userRoles: [\n          { role: 'oncologist', count: 456 },\n          { role: 'pharmacist', count: 234 },\n          { role: 'nurse', count: 178 },\n          { role: 'researcher', count: 24 }\n        ],\n        deviceTypes: [\n          { type: 'desktop', count: 567 },\n          { type: 'mobile', count: 234 },\n          { type: 'tablet', count: 91 }\n        ],\n        geographicDistribution: [\n          { location: 'United States', count: 456 },\n          { location: 'Canada', count: 123 },\n          { location: 'United Kingdom', count: 87 },\n          { location: 'Germany', count: 65 },\n          { location: 'Australia', count: 43 }\n        ]\n      };\n\n      setAnalytics(mockAnalytics);\n    } catch (error) {\n      console.error('Failed to load analytics:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatDuration = (seconds: number): string => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n  };\n\n  const formatNumber = (num: number | undefined): string => {\n    if (num === undefined || num === null) {\n      return '0';\n    }\n    if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'K';\n    }\n    return num.toString();\n  };\n\n  const getChangeIndicator = (value: number, isPositive: boolean = true) => {\n    const color = isPositive ? 'text-green-600' : 'text-red-600';\n    const Icon = isPositive ? TrendingUp : TrendingDown;\n    \n    return (\n      <div className={`flex items-center space-x-1 ${color}`}>\n        <Icon className=\"w-3 h-3\" />\n        <span className=\"text-xs\">{Math.abs(value)}%</span>\n      </div>\n    );\n  };\n\n  const renderMetricCard = (title: string, value: string | number, change?: number, icon: React.ElementType) => {\n    const Icon = icon;\n    \n    return (\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm text-gray-600 mb-1\">{title}</p>\n            <p className=\"text-2xl font-bold text-gray-900\">{value}</p>\n            {change !== undefined && (\n              <div className=\"mt-1\">\n                {getChangeIndicator(change, change > 0)}\n              </div>\n            )}\n          </div>\n          <div className=\"p-3 bg-blue-100 rounded-lg\">\n            <Icon className=\"w-6 h-6 text-blue-600\" />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderTopPages = () => (\n    <div className=\"bg-white rounded-lg border border-gray-200\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Top Pages</h3>\n      </div>\n      <div className=\"p-6\">\n        <div className=\"space-y-4\">\n          {analytics?.topPages.map((page, index) => (\n            <div key={page.path || page.url || index} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <span className=\"text-sm font-medium text-gray-500 w-6\">{index + 1}</span>\n                <div>\n                  <p className=\"text-sm font-medium text-gray-900\">{page.path || page.url}</p>\n                  <p className=\"text-xs text-gray-500\">{formatNumber(page.views)} views</p>\n                </div>\n              </div>\n              <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                <div \n                  className=\"bg-blue-600 h-2 rounded-full\"\n                  style={{ \n                    width: `${(page.views / (analytics?.topPages[0]?.views || 1)) * 100}%` \n                  }}\n                ></div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderUserRoles = () => (\n    <div className=\"bg-white rounded-lg border border-gray-200\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">User Roles</h3>\n      </div>\n      <div className=\"p-6\">\n        <div className=\"space-y-3\">\n          {analytics?.userRoles.map((role) => (\n            <div key={role.role} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <UserCheck className=\"w-4 h-4 text-blue-600\" />\n                <span className=\"text-sm font-medium text-gray-900 capitalize\">{role.role}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-gray-600\">{role.count}</span>\n                <div className=\"w-16 bg-gray-200 rounded-full h-2\">\n                  <div \n                    className=\"bg-green-600 h-2 rounded-full\"\n                    style={{ \n                      width: `${(role.count / (analytics?.totalVisitors || 1)) * 100}%` \n                    }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderDeviceTypes = () => (\n    <div className=\"bg-white rounded-lg border border-gray-200\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Device Types</h3>\n      </div>\n      <div className=\"p-6\">\n        <div className=\"space-y-3\">\n          {analytics?.deviceTypes.map((device) => {\n            const Icon = device.type === 'desktop' ? Monitor : \n                        device.type === 'mobile' ? Smartphone : Tablet;\n            \n            return (\n              <div key={device.type} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <Icon className=\"w-4 h-4 text-purple-600\" />\n                  <span className=\"text-sm font-medium text-gray-900 capitalize\">{device.type}</span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-sm text-gray-600\">{device.count}</span>\n                  <div className=\"w-16 bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-purple-600 h-2 rounded-full\"\n                      style={{ \n                        width: `${(device.count / (analytics?.totalVisitors || 1)) * 100}%` \n                      }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderGeographicDistribution = () => (\n    <div className=\"bg-white rounded-lg border border-gray-200\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Geographic Distribution</h3>\n      </div>\n      <div className=\"p-6\">\n        <div className=\"space-y-3\">\n          {(analytics?.geographicDistribution || []).map((location, index) => (\n            <div key={location.location} className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <MapPin className=\"w-4 h-4 text-orange-600\" />\n                <span className=\"text-sm font-medium text-gray-900\">{location.location}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-gray-600\">{location.count}</span>\n                <div className=\"w-16 bg-gray-200 rounded-full h-2\">\n                  <div \n                    className=\"bg-orange-600 h-2 rounded-full\"\n                    style={{ \n                      width: `${(location.count / (analytics?.geographicDistribution[0]?.count || 1)) * 100}%` \n                    }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderCurrentSession = () => {\n    if (!currentSession) return null;\n\n    return (\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Current Session</h3>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Session ID</p>\n              <p className=\"text-sm font-mono text-gray-900\">{currentSession.sessionId.slice(0, 8)}...</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Device</p>\n              <p className=\"text-sm text-gray-900 capitalize\">{currentSession.deviceType}</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Browser</p>\n              <p className=\"text-sm text-gray-900\">{currentSession.browser}</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Page Views</p>\n              <p className=\"text-sm text-gray-900\">{currentSession.pageViews.length}</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Start Time</p>\n              <p className=\"text-sm text-gray-900\">{new Date(currentSession.startTime).toLocaleTimeString()}</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">User Role</p>\n              <p className=\"text-sm text-gray-900 capitalize\">{currentSession.userRole || 'Anonymous'}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderPrivacySettings = () => (\n    <div className=\"bg-white rounded-lg border border-gray-200\">\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Privacy Settings</h3>\n          <Shield className=\"w-5 h-5 text-green-600\" />\n        </div>\n      </div>\n      <div className=\"p-6\">\n        <div className=\"space-y-4\">\n          <div className=\"bg-blue-50 rounded-lg p-4\">\n            <div className=\"flex items-start space-x-3\">\n              <Info className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n              <div>\n                <h4 className=\"text-sm font-medium text-blue-900\">HIPAA Compliant Tracking</h4>\n                <p className=\"text-sm text-blue-700 mt-1\">\n                  Our analytics system is designed to be HIPAA compliant. We do not track or store any \n                  patient health information (PHI) or personally identifiable information (PII).\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">Anonymous Analytics</p>\n                <p className=\"text-xs text-gray-600\">Track usage patterns without personal data</p>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xs text-green-600\">Enabled</span>\n                <div className=\"w-8 h-4 bg-green-500 rounded-full\"></div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">Performance Monitoring</p>\n                <p className=\"text-xs text-gray-600\">Monitor application performance and errors</p>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xs text-green-600\">Enabled</span>\n                <div className=\"w-8 h-4 bg-green-500 rounded-full\"></div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-900\">Location Tracking</p>\n                <p className=\"text-xs text-gray-600\">Approximate geographic location (country/region only)</p>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <button className=\"text-xs text-blue-600 hover:text-blue-800\">\n                  {visitorTracking.isOptedOut() ? 'Opt In' : 'Opt Out'}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"pt-4 border-t border-gray-200\">\n            <button \n              onClick={() => {\n                if (visitorTracking.isOptedOut()) {\n                  visitorTracking.optIn();\n                } else {\n                  visitorTracking.optOut();\n                }\n                window.location.reload();\n              }}\n              className={`px-4 py-2 rounded-lg text-sm font-medium ${\n                visitorTracking.isOptedOut() \n                  ? 'bg-green-600 text-white hover:bg-green-700' \n                  : 'bg-red-600 text-white hover:bg-red-700'\n              }`}\n            >\n              {visitorTracking.isOptedOut() ? 'Enable Analytics' : 'Disable All Analytics'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"flex items-center space-x-2\">\n          <RefreshCw className=\"w-6 h-6 animate-spin text-blue-600\" />\n          <span className=\"text-gray-600\">Loading analytics data...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-blue-100 rounded-lg\">\n              <BarChart3 className=\"w-6 h-6 text-blue-600\" />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Visitor Analytics</h1>\n              <p className=\"text-gray-600\">Comprehensive visitor tracking and usage analytics</p>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <select\n              value={selectedPeriod}\n              onChange={(e) => setSelectedPeriod(e.target.value)}\n              className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              {periods.map(period => (\n                <option key={period.value} value={period.value}>{period.label}</option>\n              ))}\n            </select>\n            \n            <button\n              onClick={() => setShowPrivacySettings(!showPrivacySettings)}\n              className=\"flex items-center space-x-2 px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\n            >\n              <Settings className=\"w-4 h-4\" />\n              <span>Privacy</span>\n            </button>\n            \n            <button\n              onClick={loadAnalytics}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <RefreshCw className=\"w-4 h-4\" />\n              <span>Refresh</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Privacy Notice */}\n      {visitorTracking.isOptedOut() && (\n        <div className=\"mb-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-3\">\n            <AlertCircle className=\"w-5 h-5 text-yellow-600\" />\n            <div>\n              <p className=\"text-sm font-medium text-yellow-800\">Analytics Disabled</p>\n              <p className=\"text-sm text-yellow-700\">Visitor tracking is currently disabled. Enable it to see analytics data.</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Navigation Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'overview', label: 'Analytics Overview', icon: BarChart3 },\n            { id: 'realtime', label: 'Real-Time Tracking', icon: Activity },\n            { id: 'implementation', label: 'Implementation Guide', icon: Settings },\n            { id: 'privacy', label: 'Privacy & Settings', icon: Shield }\n          ].map(tab => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <Icon className=\"w-4 h-4\" />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Tab Content */}\n      {activeTab === 'overview' && analytics && (\n        <>\n          {/* Key Metrics */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {renderMetricCard('Total Visitors', formatNumber(analytics.totalVisitors), 12.5, Users)}\n            {renderMetricCard('Unique Visitors', formatNumber(analytics.uniqueVisitors), 8.3, Eye)}\n            {renderMetricCard('Page Views', formatNumber(analytics.pageViews), 15.7, MousePointer)}\n            {renderMetricCard('Avg. Session', formatDuration(analytics.averageSessionDuration), -2.1, Clock)}\n          </div>\n\n          {/* Additional Metrics */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n            <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600 mb-1\">Bounce Rate</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">{(analytics.bounceRate * 100).toFixed(1)}%</p>\n                  {getChangeIndicator(-5.2, false)}\n                </div>\n                <div className=\"p-3 bg-orange-100 rounded-lg\">\n                  <Activity className=\"w-6 h-6 text-orange-600\" />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600 mb-1\">Pages per Session</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">{(analytics.pageViews / analytics.totalVisitors).toFixed(1)}</p>\n                  {getChangeIndicator(7.8, true)}\n                </div>\n                <div className=\"p-3 bg-green-100 rounded-lg\">\n                  <PieChart className=\"w-6 h-6 text-green-600\" />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600 mb-1\">Return Visitors</p>\n                  <p className=\"text-2xl font-bold text-gray-900\">{((analytics.totalVisitors - analytics.uniqueVisitors) / analytics.totalVisitors * 100).toFixed(1)}%</p>\n                  {getChangeIndicator(3.4, true)}\n                </div>\n                <div className=\"p-3 bg-purple-100 rounded-lg\">\n                  <Users className=\"w-6 h-6 text-purple-600\" />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Charts and Details */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n            {renderTopPages()}\n            {renderUserRoles()}\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n            {renderDeviceTypes()}\n            {renderGeographicDistribution()}\n          </div>\n\n          {/* Current Session */}\n          {currentSession && renderCurrentSession()}\n        </>\n      )}\n\n      {activeTab === 'realtime' && (\n        <RealTimeTracker />\n      )}\n\n      {activeTab === 'implementation' && (\n        <TrackingExample />\n      )}\n\n      {activeTab === 'privacy' && renderPrivacySettings()}\n    </div>\n  );\n};\n\nexport default VisitorAnalyticsDashboard;"],"names":["__iconNode","Circle","createLucideIcon","Tablet","RealTimeTracker","liveMetrics","setLiveMetrics","useState","isConnected","setIsConnected","lastUpdate","setLastUpdate","websocketRef","useRef","reconnectTimeoutRef","useEffect","connectWebSocket","simulateRealTimeData","error","interval","mockActivity","prev","getActivityIcon","type","jsx","Eye","MousePointer","Users","Activity","getActivityColor","getDeviceIcon","deviceType","Monitor","Smartphone","formatTimeAgo","timestamp","now","time","diffInSeconds","jsxs","Wifi","RefreshCw","Clock","TrendingUp","activity","Fragment","MapPin","device","count","page","index","trackClinicalWorkflow","patientType","visitorTracking","duration","stepsCompleted","drugCount","interactionsFound","severityLevels","protocolType","organization","section","cancerType","treatmentType","planningTime","testCount","criticalResults","alertsTriggered","alertType","severity","userAction","trackFeatureUsage","searchType","query","resultCount","timeToResult","reportType","dataPoints","generationTime","format","dataType","recordCount","framework","requirementsChecked","violations","trackErrors","errorType","errorMessage","stackTrace","formName","fieldName","endpoint","errorCode","trackEngagement","featureName","timeSpent","actionsPerformed","documentName","feedbackType","rating","category","useTracking","startTime","React","actionCount","trackAction","actionName","data","trackTiming","TrackingExample","searchQuery","setSearchQuery","searchResults","setSearchResults","startTimer","handleSearch","timer","resolve","mockResults","handleDrugInteractionCheck","handleReportGeneration","handleProtocolAccess","e","Search","result","AlertTriangle","Download","CheckCircle","VisitorAnalyticsDashboard","analytics","setAnalytics","loading","setLoading","selectedPeriod","setSelectedPeriod","currentSession","setCurrentSession","showPrivacySettings","setShowPrivacySettings","activeTab","setActiveTab","periods","loadAnalytics","realAnalytics","formatDuration","seconds","minutes","remainingSeconds","formatNumber","num","getChangeIndicator","value","isPositive","color","Icon","TrendingDown","renderMetricCard","title","change","icon","renderTopPages","renderUserRoles","role","UserCheck","renderDeviceTypes","renderGeographicDistribution","location","renderCurrentSession","renderPrivacySettings","Shield","Info","BarChart3","period","Settings","AlertCircle","tab","PieChart"],"mappings":"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","x_google_ignoreList":[0,1]}