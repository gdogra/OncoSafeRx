const l={searches:"oncosaferx_analytics_searches",selections:"oncosaferx_analytics_selections"};function i(t,c,n=200){try{const a=localStorage.getItem(t),o=a?JSON.parse(a):[];o.unshift(c),o.length>n&&o.pop(),localStorage.setItem(t,JSON.stringify(o))}catch{}}const h={logSearch(t,c){i(l.searches,{t:Date.now(),q:t,count:c})},logSelection(t,c,n){i(l.selections,{t:Date.now(),rxcui:t,name:c,source:n})},clearSearches(){try{localStorage.removeItem(l.searches)}catch{}},clearSelections(){try{localStorage.removeItem(l.selections)}catch{}},getRecentSearches(t=8){try{const c=localStorage.getItem(l.searches),n=c?JSON.parse(c):[],a=new Set,o=[];for(const r of n){const e=(r.q||"").trim();if(e&&!a.has(e.toLowerCase())&&(a.add(e.toLowerCase()),o.push(e),o.length>=t))break}return o}catch{return[]}},getTopSelections(t=30,c=5){try{const n=localStorage.getItem(l.selections),a=n?JSON.parse(n):[],o=Date.now()-t*24*60*60*1e3,r={};return a.filter(e=>e.t>=o).forEach(e=>{const s=e.rxcui||e.name;r[s]||(r[s]={name:e.name,count:0}),r[s].count+=1}),Object.entries(r).map(([e,s])=>({rxcui:e,name:s.name,count:s.count})).sort((e,s)=>s.count-e.count).slice(0,c)}catch{return[]}}};export{h as analytics};
