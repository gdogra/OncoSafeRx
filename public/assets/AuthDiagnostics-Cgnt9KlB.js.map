{"version":3,"file":"AuthDiagnostics-Cgnt9KlB.js","sources":["../../src/pages/AuthDiagnostics.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { supabase } from '../lib/supabase';\n\ntype VerifyResult = {\n  ok: boolean;\n  status: number;\n  body?: any;\n  error?: string;\n};\n\nfunction decodeJwt(token: string | null): any | null {\n  try {\n    if (!token) return null;\n    const parts = token.split('.');\n    if (parts.length < 2) return null;\n    const base64 = parts[1].replace(/-/g, '+').replace(/_/g, '/');\n    const padded = base64.padEnd(base64.length + (4 - (base64.length % 4)) % 4, '=');\n    const json = atob(padded);\n    return JSON.parse(json);\n  } catch (_e) {\n    return null;\n  }\n}\n\nconst AuthDiagnostics: React.FC = () => {\n  const { state: authState } = useAuth();\n  const [sessionToken, setSessionToken] = useState<string | null>(null);\n  const [claims, setClaims] = useState<any | null>(null);\n  const [serverVerify, setServerVerify] = useState<VerifyResult | null>(null);\n  const [profileRow, setProfileRow] = useState<any | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [profileError, setProfileError] = useState<string | null>(null);\n  const [sessionError, setSessionError] = useState<string | null>(null);\n  const [createLoading, setCreateLoading] = useState(false);\n  const [createMsg, setCreateMsg] = useState<string | null>(null);\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [deleteMsg, setDeleteMsg] = useState<string | null>(null);\n  const [resetLoading, setResetLoading] = useState(false);\n  const [resetMsg, setResetMsg] = useState<string | null>(null);\n  const [syncLoading, setSyncLoading] = useState(false);\n  const [syncMsg, setSyncMsg] = useState<string | null>(null);\n\n  const withTimeout = async <T,>(p: Promise<T>, ms: number): Promise<T> => {\n    return await Promise.race<T>([\n      p,\n      new Promise<T>((_, reject) => setTimeout(() => reject(new Error('timeout')), ms)) as Promise<T>,\n    ]);\n  };\n\n  const refresh = async () => {\n    setLoading(true);\n    try {\n      const { data: { session }, error: sessErr } = await supabase.auth.getSession();\n      if (sessErr) setSessionError(sessErr.message);\n      const token = session?.access_token || null;\n      setSessionToken(token);\n      setClaims(decodeJwt(token));\n\n      // Server verification (always call, include token if available)\n      try {\n        const headers: Record<string, string> = {};\n        if (token) headers['Authorization'] = `Bearer ${token}`;\n        const res = await fetch('/api/supabase-auth/verify', { headers });\n        const body = await res.json().catch(() => ({}));\n        setServerVerify({ ok: res.ok, status: res.status, body });\n      } catch (e: any) {\n        setServerVerify({ ok: false, status: 0, error: e?.message || 'Network error' });\n      }\n\n      // Profile presence\n      setProfileError(null);\n      if (session?.user?.id) {\n        try {\n          const result: any = await withTimeout(\n            supabase\n              .from('users')\n              .select('id,email,first_name,last_name,role,created_at')\n              .eq('id', session.user.id)\n              .maybeSingle(),\n            4000\n          );\n          if (result?.error) {\n            setProfileError(result.error.message || 'Profile query error');\n          }\n          setProfileRow(result?.data || null);\n        } catch (e: any) {\n          setProfileError(e?.message === 'timeout' ? 'Profile query timed out' : (e?.message || 'Network error'));\n          setProfileRow(null);\n        }\n      } else {\n        setProfileRow(null);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    let cancelled = false;\n    const t = setTimeout(() => { if (!cancelled) setLoading(false); }, 2500);\n    refresh().catch(() => setLoading(false));\n    return () => { cancelled = true; clearTimeout(t); };\n  }, []);\n\n  const copy = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n    } catch {\n      // ignore\n    }\n  };\n\n  const exp = claims?.exp ? new Date(claims.exp * 1000) : null;\n  const now = new Date();\n  const secondsLeft = exp ? Math.max(0, Math.floor((exp.getTime() - now.getTime()) / 1000)) : null;\n\n  const createDemoProfile = async () => {\n    setCreateMsg(null);\n    setCreateLoading(true);\n    try {\n      // Try client-side if session exists, else hit server demo endpoint\n      const { data: userRes } = await supabase.auth.getUser();\n      const email = authState.user?.email || userRes?.user?.email || 'user@example.com';\n      const role = (authState.user?.role as any) || 'oncologist';\n      const first = (authState.user?.firstName) || (userRes?.user?.user_metadata?.first_name) || (email.split('@')[0]);\n      const last = (authState.user?.lastName) || (userRes?.user?.user_metadata?.last_name) || 'User';\n\n      if (userRes?.user?.id) {\n        const { error: upErr } = await supabase\n          .from('users')\n          .upsert({ id: userRes.user.id, email, first_name: first, last_name: last, role, created_at: new Date().toISOString() }, { onConflict: 'id' });\n        if (upErr) {\n          setCreateMsg(`Failed to create profile: ${upErr.message}`);\n          return;\n        }\n        setCreateMsg('Demo profile created/updated successfully.');\n        await refresh();\n      } else {\n        const id = `dev-${Date.now()}`; // synthetic id for dev-only profile row\n        const resp = await fetch('/api/supabase-auth/demo/profile', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ id, email, role, first_name: first, last_name: last })\n        });\n        const body = await resp.json().catch(() => ({}));\n        if (!resp.ok) {\n          setCreateMsg(body?.error || 'Server demo profile creation failed');\n          return;\n        }\n        setCreateMsg('Demo profile created on server.');\n        await refresh();\n      }\n    } catch (e: any) {\n      setCreateMsg(e?.message || 'Unexpected error while creating profile');\n    } finally {\n      setCreateLoading(false);\n    }\n  };\n\n  const deleteDemoProfile = async () => {\n    if (!profileRow?.id) return;\n    if (!confirm('Delete this demo profile row?')) return;\n    setDeleteMsg(null);\n    setDeleteLoading(true);\n    try {\n      // Try client-side if session id matches\n      const { data: userRes } = await supabase.auth.getUser();\n      if (userRes?.user?.id === profileRow.id) {\n        const { error } = await supabase.from('users').delete().eq('id', profileRow.id);\n        if (error) {\n          setDeleteMsg(`Failed to delete: ${error.message}`);\n        } else {\n          setDeleteMsg('Profile row deleted.');\n          await refresh();\n        }\n      } else {\n        const resp = await fetch(`/api/supabase-auth/demo/profile/${encodeURIComponent(profileRow.id)}`, { method: 'DELETE' });\n        const body = await resp.json().catch(() => ({}));\n        if (!resp.ok) {\n          setDeleteMsg(body?.error || 'Server deletion failed');\n        } else {\n          setDeleteMsg('Profile row deleted on server.');\n          await refresh();\n        }\n      }\n    } catch (e: any) {\n      setDeleteMsg(e?.message || 'Unexpected error while deleting profile');\n    } finally {\n      setDeleteLoading(false);\n    }\n  };\n\n  const resetToDemoUser = async () => {\n    setResetMsg(null);\n    setResetLoading(true);\n    try {\n      // Prefer real auth user id if present; fall back to stable dev id\n      const { data: userRes } = await supabase.auth.getUser();\n      const authId = userRes?.user?.id || profileRow?.id || 'dev-demo-user';\n      const email = authState.user?.email || userRes?.user?.email || 'demo@oncosaferx.local';\n      const role = (authState.user?.role as any) || 'oncologist';\n      const first = 'Demo';\n      const last = 'Clinician';\n\n      const resp = await fetch('/api/supabase-auth/demo/reset', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ id: authId, email, role, first_name: first, last_name: last, updateAuth: !!userRes?.user?.id })\n      });\n      const body = await resp.json().catch(() => ({}));\n      if (!resp.ok) {\n        setResetMsg(body?.error || 'Reset failed');\n      } else {\n        setResetMsg('Reset to demo user successful.');\n        await refresh();\n      }\n    } catch (e: any) {\n      setResetMsg(e?.message || 'Unexpected error during reset');\n    } finally {\n      setResetLoading(false);\n    }\n  };\n\n  const syncAuthToProfile = async () => {\n    setSyncMsg(null);\n    setSyncLoading(true);\n    try {\n      const { data: userRes, error } = await supabase.auth.getUser();\n      if (error || !userRes?.user) {\n        setSyncMsg('Supabase session required to sync from auth.');\n        return;\n      }\n      const u = userRes.user;\n      const email = u.email || '';\n      const role = (u.user_metadata?.role as any) || 'oncologist';\n      const first = (u.user_metadata?.first_name) || 'Demo';\n      const last = (u.user_metadata?.last_name) || 'Clinician';\n\n      const { error: upErr } = await supabase\n        .from('users')\n        .upsert({ id: u.id, email, role, first_name: first, last_name: last, created_at: new Date().toISOString() }, { onConflict: 'id' });\n      if (upErr) {\n        setSyncMsg(`Sync failed: ${upErr.message}`);\n      } else {\n        setSyncMsg('Synced auth metadata to profile.');\n        await refresh();\n      }\n    } catch (e: any) {\n      setSyncMsg(e?.message || 'Unexpected error during sync');\n    } finally {\n      setSyncLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-5xl mx-auto p-6\">\n      <h1 className=\"text-2xl font-semibold text-gray-900 mb-4\">Auth Diagnostics</h1>\n      <p className=\"text-sm text-gray-600 mb-6\">View current session, verify with backend, and confirm profile row. Dev auth is supported.</p>\n\n      <div className=\"space-y-6\">\n        <div className=\"bg-white border border-gray-200 rounded p-4\">\n          <div className=\"mb-3 text-xs text-gray-600\">\n            App auth: {authState.isAuthenticated ? 'Authenticated' : 'Not authenticated'} • User: {authState.user?.email || 'n/a'} • Role: {authState.user?.role || 'n/a'}\n            {!sessionToken && (\n              <div className=\"mt-1 text-yellow-700\">No Supabase session detected (using app-level auth). This is normal in development bypass.</div>\n            )}\n          </div>\n          <div className=\"flex items-center justify-between mb-2\">\n            <h2 className=\"text-lg font-medium text-gray-900\">Session</h2>\n            <div className=\"flex gap-2\">\n              <button onClick={refresh} className=\"px-3 py-1.5 text-sm bg-blue-600 text-white rounded\">Refresh</button>\n              {sessionToken && (\n                <button onClick={() => copy(sessionToken)} className=\"px-3 py-1.5 text-sm bg-gray-100 border rounded\">Copy Token</button>\n              )}\n            </div>\n          </div>\n          {loading ? (\n            <div className=\"text-sm text-gray-500\">Loading…</div>\n          ) : sessionToken ? (\n            <div className=\"text-sm\">\n              {sessionError && (\n                <div className=\"mb-2 text-xs text-yellow-700\">Session warning: {sessionError}</div>\n              )}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                <div>\n                  <div className=\"text-gray-500\">Subject (sub)</div>\n                  <div className=\"font-medium text-gray-900 break-all\">{claims?.sub || '—'}</div>\n                </div>\n                <div>\n                  <div className=\"text-gray-500\">Email</div>\n                  <div className=\"font-medium text-gray-900\">{claims?.email || '—'}</div>\n                </div>\n                <div>\n                  <div className=\"text-gray-500\">Expires</div>\n                  <div className=\"font-medium text-gray-900\">{exp?.toISOString() || '—'} {secondsLeft !== null && `(in ${secondsLeft}s)`}</div>\n                </div>\n                <div>\n                  <div className=\"text-gray-500\">Issuer</div>\n                  <div className=\"font-medium text-gray-900 break-all\">{claims?.iss || '—'}</div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-sm text-red-700\">No active session</div>\n          )}\n        </div>\n\n        <div className=\"bg-white border border-gray-200 rounded p-4\">\n          <h2 className=\"text-lg font-medium text-gray-900 mb-2\">Backend Verification</h2>\n          {serverVerify ? (\n            <div className=\"text-sm\">\n              <div className=\"mb-1\">Status: <span className={serverVerify.ok ? 'text-green-700' : 'text-red-700'}>{serverVerify.ok ? 'OK' : 'Failed'}</span> ({serverVerify.status})</div>\n              {serverVerify.body && (\n                <pre className=\"bg-gray-50 border rounded p-2 overflow-auto text-xs\">\n{JSON.stringify(serverVerify.body, null, 2)}\n                </pre>\n              )}\n              {serverVerify.error && <div className=\"text-red-700\">{serverVerify.error}</div>}\n            </div>\n          ) : (\n            <div className=\"text-sm text-gray-500\">Waiting…</div>\n          )}\n        </div>\n\n        <div className=\"bg-white border border-gray-200 rounded p-4\">\n          <h2 className=\"text-lg font-medium text-gray-900 mb-2\">Profile Row (public.users)</h2>\n          {profileError && (\n            <div className=\"mb-2 text-sm text-yellow-700\">{profileError}</div>\n          )}\n          {profileRow ? (\n            <>\n            <pre className=\"bg-gray-50 border rounded p-2 overflow-auto text-xs\">\n{JSON.stringify(profileRow, null, 2)}\n            </pre>\n            <div className=\"mt-3 flex flex-wrap items-center gap-2\">\n              <button onClick={syncAuthToProfile} disabled={syncLoading} className=\"px-3 py-1.5 text-sm bg-gray-100 border rounded disabled:opacity-50\">\n                {syncLoading ? 'Syncing…' : 'Sync Auth Metadata to Profile'}\n              </button>\n              <button onClick={resetToDemoUser} disabled={resetLoading} className=\"px-3 py-1.5 text-sm bg-blue-600 text-white rounded disabled:opacity-50\">\n                {resetLoading ? 'Resetting…' : 'Reset to Demo User'}\n              </button>\n              <button onClick={deleteDemoProfile} disabled={deleteLoading} className=\"px-3 py-1.5 text-sm bg-red-600 text-white rounded disabled:opacity-50\">\n                {deleteLoading ? 'Deleting…' : 'Delete Demo Profile Row'}\n              </button>\n              {(syncMsg || resetMsg || deleteMsg) && <div className=\"text-xs text-gray-600\">{syncMsg || resetMsg || deleteMsg}</div>}\n            </div>\n            </>\n          ) : (\n            <div>\n              <div className=\"text-sm text-yellow-700 mb-3\">No profile row found for current user.</div>\n              <div className=\"flex items-center gap-2\">\n                <button onClick={syncAuthToProfile} disabled={syncLoading || !sessionToken} className=\"px-3 py-1.5 text-sm bg-gray-100 border rounded disabled:opacity-50\" title={!sessionToken ? 'Requires Supabase session' : ''}>\n                  {syncLoading ? 'Syncing…' : 'Sync Auth Metadata to Profile'}\n                </button>\n                <button onClick={resetToDemoUser} disabled={resetLoading} className=\"px-3 py-1.5 text-sm bg-blue-600 text-white rounded disabled:opacity-50\">\n                  {resetLoading ? 'Resetting…' : 'Reset to Demo User'}\n                </button>\n                <button onClick={createDemoProfile} disabled={createLoading} className=\"px-3 py-1.5 text-sm bg-green-600 text-white rounded disabled:opacity-50\">\n                  {createLoading ? 'Creating…' : 'Create Demo Profile Row'}\n                </button>\n                {(syncMsg || resetMsg || createMsg) && <div className=\"text-xs text-gray-600\">{syncMsg || resetMsg || createMsg}</div>}\n              </div>\n              {!sessionToken && (\n                <div className=\"mt-2 text-xs text-gray-500\">Tip: No Supabase session detected. The server demo endpoint will be used to insert a profile row (dev-only).</div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthDiagnostics;\n"],"names":["decodeJwt","token","parts","base64","padded","json","AuthDiagnostics","authState","useAuth","sessionToken","setSessionToken","useState","claims","setClaims","serverVerify","setServerVerify","profileRow","setProfileRow","loading","setLoading","profileError","setProfileError","sessionError","setSessionError","createLoading","setCreateLoading","createMsg","setCreateMsg","deleteLoading","setDeleteLoading","deleteMsg","setDeleteMsg","resetLoading","setResetLoading","resetMsg","setResetMsg","syncLoading","setSyncLoading","syncMsg","setSyncMsg","withTimeout","p","ms","_","reject","refresh","session","sessErr","supabase","headers","res","body","e","result","useEffect","cancelled","copy","text","exp","now","secondsLeft","createDemoProfile","userRes","email","role","first","last","upErr","id","resp","deleteDemoProfile","error","resetToDemoUser","authId","syncAuthToProfile","u","jsxs","jsx","Fragment"],"mappings":"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"}