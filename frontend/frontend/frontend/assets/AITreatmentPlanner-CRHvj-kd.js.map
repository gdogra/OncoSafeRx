{"version":3,"file":"AITreatmentPlanner-CRHvj-kd.js","sources":["../../node_modules/lucide-react/dist/esm/icons/beaker.js","../../src/components/AI/TreatmentPlanner.tsx","../../src/pages/AITreatmentPlanner.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M4.5 3h15\", key: \"c7n0jr\" }],\n  [\"path\", { d: \"M6 3v16a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V3\", key: \"m1uhx7\" }],\n  [\"path\", { d: \"M6 14h12\", key: \"4cwo0f\" }]\n];\nconst Beaker = createLucideIcon(\"beaker\", __iconNode);\n\nexport { __iconNode, Beaker as default };\n//# sourceMappingURL=beaker.js.map\n","import React, { useState, useEffect } from 'react';\nimport { Brain, Dna, Target, TrendingUp, AlertTriangle, Clock, CheckCircle, Activity, Zap, Shield, Play, Pause, RotateCcw, Settings, BarChart3, LineChart, Calculator, Sliders, TestTube, MapPin, Users, Calendar, ExternalLink, Star, Filter, FileText, Database, TrendingDown, Clipboard, Microscope, FlaskConical, Beaker, Phone, Mail, PieChart, BarChart2, Calendar as TimelineIcon, Layers, Eye, MousePointer, Maximize2 } from 'lucide-react';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport Tooltip from '../UI/Tooltip';\nimport FeatureErrorBoundary from '../ErrorBoundary/FeatureErrorBoundary';\n\ninterface GenomicProfile {\n  hlaTypes: string[];\n  cypVariants: Record<string, string>;\n  dpydVariants: string[];\n  otherVariants: Record<string, string>;\n  riskScore: number;\n  pharmacogenomics: PharmacogenomicProfile;\n}\n\ninterface PharmacogenomicProfile {\n  metabolizerStatus: Record<string, {\n    gene: string;\n    genotype: string;\n    phenotype: 'Poor' | 'Intermediate' | 'Normal' | 'Rapid' | 'Ultrarapid';\n    activityScore: number;\n    clinicalImplications: string[];\n    drugRecommendations: DrugRecommendation[];\n  }>;\n  hlaRisks: {\n    allele: string;\n    drugs: string[];\n    riskType: 'Hypersensitivity' | 'Efficacy' | 'Toxicity';\n    riskLevel: 'Low' | 'Moderate' | 'High';\n    recommendations: string[];\n  }[];\n  otherBiomarkers: {\n    gene: string;\n    variant: string;\n    impact: string;\n    affectedDrugs: string[];\n    recommendation: string;\n  }[];\n  overallRiskScore: number;\n  lastUpdated: string;\n}\n\ninterface DrugRecommendation {\n  drug: string;\n  recommendation: 'Standard' | 'Reduced' | 'Increased' | 'Alternative' | 'Avoid';\n  dosageAdjustment?: string;\n  monitoringRequired?: string[];\n  rationale: string;\n  evidenceLevel: 'High' | 'Moderate' | 'Low';\n  sources: string[];\n}\n\ninterface TreatmentProtocol {\n  id: string;\n  name: string;\n  drugs: Array<{\n    name: string;\n    dosing: string;\n    genomicOptimization: string;\n    efficacyPrediction: number;\n    safetyScore: number;\n  }>;\n  duration: string;\n  expectedOutcome: {\n    responseRate: number;\n    survivalBenefit: number;\n    qualityOfLife: number;\n    confidence: number;\n  };\n  genomicCompatibility: number;\n  evidenceLevel: 'I' | 'II' | 'III' | 'IV';\n  cost: number;\n  monitoring: string[];\n  contraindications: string[];\n  alternatives: string[];\n}\n\ninterface AIInsight {\n  type: 'optimization' | 'warning' | 'recommendation' | 'trial';\n  title: string;\n  description: string;\n  confidence: number;\n  actionable: boolean;\n  priority: 'high' | 'medium' | 'low';\n  source: string;\n}\n\ninterface TreatmentScenario {\n  id: string;\n  name: string;\n  description: string;\n  modifications: {\n    dosageAdjustments: Record<string, number>;\n    drugSubstitutions: Record<string, string>;\n    scheduleChanges: Record<string, string>;\n    additionalDrugs: string[];\n    removedDrugs: string[];\n  };\n  predictedOutcomes: {\n    responseRate: number;\n    survivalBenefit: number;\n    qualityOfLife: number;\n    toxicityReduction: number;\n    confidence: number;\n  };\n  riskProfile: {\n    severity: 'low' | 'medium' | 'high';\n    factors: string[];\n  };\n}\n\ninterface SimulationState {\n  isRunning: boolean;\n  currentStep: number;\n  totalSteps: number;\n  scenarios: TreatmentScenario[];\n  activeScenario: TreatmentScenario | null;\n  comparison: {\n    baseline: TreatmentProtocol;\n    scenarios: TreatmentScenario[];\n  } | null;\n}\n\ninterface ClinicalTrial {\n  nct_id: string;\n  title: string;\n  phase: string;\n  status: string;\n  condition: string;\n  biomarkers: string[];\n  eligibilityScore: number;\n  matchReasons: string[];\n  location: {\n    name: string;\n    city: string;\n    state: string;\n    distance?: number;\n  };\n  contact: {\n    name: string;\n    phone: string;\n    email: string;\n  };\n  interventions: string[];\n  enrollmentStatus: {\n    current: number;\n    target: number;\n    estimatedCompletion: string;\n  };\n  keyEligibility: {\n    ageRange: string;\n    performanceStatus: string;\n    priorTreatments: string;\n    biomarkerRequirements: string[];\n  };\n}\n\ninterface TrialMatchResult {\n  matchedTrials: ClinicalTrial[];\n  totalMatches: number;\n  highConfidenceMatches: number;\n  alternativeTrials: ClinicalTrial[];\n  eligibilityGaps: {\n    criteria: string;\n    currentValue: string;\n    requiredValue: string;\n    actionNeeded: string;\n  }[];\n}\n\nconst TreatmentPlanner: React.FC = () => {\n  const [patientProfile, setPatientProfile] = useState<any>(null);\n  const [genomicProfile, setGenomicProfile] = useState<GenomicProfile | null>(null);\n  const [protocols, setProtocols] = useState<TreatmentProtocol[]>([]);\n  const [selectedProtocol, setSelectedProtocol] = useState<TreatmentProtocol | null>(null);\n  const [aiInsights, setAiInsights] = useState<AIInsight[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [predictionResults, setPredictionResults] = useState<any>(null);\n  \n  // Simulation states\n  const [simulationState, setSimulationState] = useState<SimulationState>({\n    isRunning: false,\n    currentStep: 0,\n    totalSteps: 5,\n    scenarios: [],\n    activeScenario: null,\n    comparison: null\n  });\n  const [showSimulator, setShowSimulator] = useState(false);\n  const [scenarioParameters, setScenarioParameters] = useState({\n    dosageReduction: 0,\n    addSupportiveCare: false,\n    alternativeSchedule: false,\n    combinationTherapy: false\n  });\n  \n  // Clinical trial states\n  const [trialMatchResult, setTrialMatchResult] = useState<TrialMatchResult | null>(null);\n  const [showTrialMatcher, setShowTrialMatcher] = useState(false);\n  const [trialMatchLoading, setTrialMatchLoading] = useState(false);\n  const [selectedTrial, setSelectedTrial] = useState<ClinicalTrial | null>(null);\n  \n  // Genomic analysis states\n  const [showGenomicAnalysis, setShowGenomicAnalysis] = useState(false);\n  const [genomicAnalysisLoading, setGenomicAnalysisLoading] = useState(false);\n  const [selectedGene, setSelectedGene] = useState<string | null>(null);\n  const [pharmacogenomicResults, setPharmacogenomicResults] = useState<any>(null);\n  \n  // Enhanced visualization states\n  const [showVisualizationPanel, setShowVisualizationPanel] = useState(false);\n  const [currentStep, setCurrentStep] = useState<'setup' | 'review' | 'simulate' | 'results'>('setup');\n  const [isFirstTime, setIsFirstTime] = useState(true);\n  const [showGuidedTour, setShowGuidedTour] = useState(false);\n  const [selectedVisualization, setSelectedVisualization] = useState<'timeline' | 'outcomes' | 'biomarkers' | 'risk-matrix' | 'pathway-map'>('timeline');\n  const [timelineView, setTimelineView] = useState<'overview' | 'detailed'>('overview');\n  const [chartInteractions, setChartInteractions] = useState<boolean>(true);\n  const [animatedCharts, setAnimatedCharts] = useState<boolean>(true);\n\n  useEffect(() => {\n    loadPatientData();\n  }, []);\n\n  const loadPatientData = async () => {\n    setLoading(true);\n    try {\n      // Simulate loading comprehensive patient data\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      const mockGenomicProfile: GenomicProfile = {\n        hlaTypes: ['HLA-B*5701', 'HLA-DQA1*05:01'],\n        cypVariants: {\n          'CYP2D6': '*1/*4',\n          'CYP3A4': '*1/*1',\n          'CYP2C19': '*1/*2'\n        },\n        dpydVariants: ['c.1905+1G>A'],\n        otherVariants: {\n          'TPMT': '*1/*3C',\n          'UGT1A1': '*28/*28'\n        },\n        riskScore: 0.75,\n        pharmacogenomics: {\n          metabolizerStatus: {\n            'CYP2D6': {\n              gene: 'CYP2D6',\n              genotype: '*1/*4',\n              phenotype: 'Intermediate',\n              activityScore: 1.0,\n              clinicalImplications: [\n                'Reduced enzyme activity',\n                '50% of normal metabolism',\n                'Higher drug concentrations possible'\n              ],\n              drugRecommendations: [\n                {\n                  drug: 'Codeine',\n                  recommendation: 'Alternative',\n                  rationale: 'Reduced conversion to active metabolite',\n                  evidenceLevel: 'High',\n                  sources: ['CPIC Guidelines', 'PharmGKB']\n                },\n                {\n                  drug: 'Tamoxifen',\n                  recommendation: 'Standard',\n                  monitoringRequired: ['Enhanced monitoring for efficacy'],\n                  rationale: 'Intermediate metabolism may affect active metabolite levels',\n                  evidenceLevel: 'Moderate',\n                  sources: ['CPIC Guidelines']\n                }\n              ]\n            },\n            'CYP2C19': {\n              gene: 'CYP2C19',\n              genotype: '*1/*2',\n              phenotype: 'Intermediate',\n              activityScore: 1.5,\n              clinicalImplications: [\n                'Reduced enzyme activity for some substrates',\n                'May affect clopidogrel activation',\n                'Proton pump inhibitor metabolism affected'\n              ],\n              drugRecommendations: [\n                {\n                  drug: 'Clopidogrel',\n                  recommendation: 'Alternative',\n                  rationale: 'Reduced conversion to active metabolite',\n                  evidenceLevel: 'High',\n                  sources: ['FDA', 'CPIC Guidelines']\n                },\n                {\n                  drug: 'Omeprazole',\n                  recommendation: 'Reduced',\n                  dosageAdjustment: '50% dose reduction',\n                  rationale: 'Reduced metabolism may lead to higher exposure',\n                  evidenceLevel: 'Moderate',\n                  sources: ['CPIC Guidelines']\n                }\n              ]\n            },\n            'TPMT': {\n              gene: 'TPMT',\n              genotype: '*1/*3C',\n              phenotype: 'Intermediate',\n              activityScore: 0.5,\n              clinicalImplications: [\n                'Reduced thiopurine metabolism',\n                'Increased risk of myelosuppression',\n                'Dose reduction required'\n              ],\n              drugRecommendations: [\n                {\n                  drug: '6-Mercaptopurine',\n                  recommendation: 'Reduced',\n                  dosageAdjustment: '30-70% dose reduction',\n                  monitoringRequired: ['Weekly CBC for 4 weeks', 'Then monthly CBC'],\n                  rationale: 'Reduced enzyme activity increases toxicity risk',\n                  evidenceLevel: 'High',\n                  sources: ['FDA', 'CPIC Guidelines']\n                },\n                {\n                  drug: 'Azathioprine',\n                  recommendation: 'Reduced',\n                  dosageAdjustment: '30-70% dose reduction',\n                  monitoringRequired: ['Enhanced CBC monitoring'],\n                  rationale: 'Intermediate metabolizer status',\n                  evidenceLevel: 'High',\n                  sources: ['CPIC Guidelines']\n                }\n              ]\n            }\n          },\n          hlaRisks: [\n            {\n              allele: 'HLA-B*5701',\n              drugs: ['Abacavir', 'Carbamazepine'],\n              riskType: 'Hypersensitivity',\n              riskLevel: 'High',\n              recommendations: [\n                'Avoid abacavir - high risk of severe hypersensitivity',\n                'Consider alternative antiretrovirals',\n                'Use carbamazepine with extreme caution'\n              ]\n            },\n            {\n              allele: 'HLA-DQA1*05:01',\n              drugs: ['Lumiracoxib'],\n              riskType: 'Toxicity',\n              riskLevel: 'Moderate',\n              recommendations: [\n                'Enhanced liver function monitoring if lumiracoxib used',\n                'Consider alternative COX-2 inhibitors'\n              ]\n            }\n          ],\n          otherBiomarkers: [\n            {\n              gene: 'UGT1A1',\n              variant: '*28/*28',\n              impact: 'Reduced glucuronidation capacity',\n              affectedDrugs: ['Irinotecan', 'Bilirubin'],\n              recommendation: 'Reduce irinotecan dose by 25-50% to prevent severe toxicity'\n            }\n          ],\n          overallRiskScore: 0.72,\n          lastUpdated: new Date().toISOString()\n        }\n      };\n\n      const mockProtocols: TreatmentProtocol[] = [\n        {\n          id: 'proto-001',\n          name: 'AI-Optimized FOLFOX + Bevacizumab',\n          drugs: [\n            {\n              name: 'Oxaliplatin',\n              dosing: '85 mg/m² (reduced 15% based on CYP variants)',\n              genomicOptimization: 'Dose adjusted for CYP2D6 *1/*4 genotype',\n              efficacyPrediction: 87,\n              safetyScore: 92\n            },\n            {\n              name: '5-Fluorouracil',\n              dosing: '2400 mg/m² (standard - DPYD compatible)',\n              genomicOptimization: 'Safe dosing confirmed by DPYD analysis',\n              efficacyPrediction: 82,\n              safetyScore: 88\n            },\n            {\n              name: 'Bevacizumab',\n              dosing: '5 mg/kg (optimized for HLA profile)',\n              genomicOptimization: 'HLA-compatible, low immunogenicity risk',\n              efficacyPrediction: 78,\n              safetyScore: 85\n            }\n          ],\n          duration: '6 months',\n          expectedOutcome: {\n            responseRate: 84,\n            survivalBenefit: 76,\n            qualityOfLife: 82,\n            confidence: 91\n          },\n          genomicCompatibility: 94,\n          evidenceLevel: 'I',\n          cost: 45000,\n          monitoring: ['CBC weekly', 'LFTs bi-weekly', 'Neuropathy assessment'],\n          contraindications: ['Severe renal impairment', 'Active bleeding'],\n          alternatives: ['CAPOX regimen', 'FOLFIRI alternative']\n        },\n        {\n          id: 'proto-002',\n          name: 'Precision Immunotherapy Protocol',\n          drugs: [\n            {\n              name: 'Pembrolizumab',\n              dosing: '200mg Q3W (HLA-optimized)',\n              genomicOptimization: 'HLA-B*5701 compatible, enhanced response predicted',\n              efficacyPrediction: 91,\n              safetyScore: 86\n            }\n          ],\n          duration: '2 years',\n          expectedOutcome: {\n            responseRate: 89,\n            survivalBenefit: 85,\n            qualityOfLife: 88,\n            confidence: 87\n          },\n          genomicCompatibility: 91,\n          evidenceLevel: 'II',\n          cost: 180000,\n          monitoring: ['Immune markers monthly', 'Thyroid function', 'Liver enzymes'],\n          contraindications: ['Autoimmune disease', 'Organ transplant'],\n          alternatives: ['Nivolumab', 'Combination checkpoint inhibitors']\n        }\n      ];\n\n      const mockInsights: AIInsight[] = [\n        {\n          type: 'optimization',\n          title: 'Genomic Optimization Opportunity',\n          description: 'CYP2D6 *1/*4 genotype suggests 15% dose reduction for oxaliplatin to optimize efficacy/toxicity ratio',\n          confidence: 94,\n          actionable: true,\n          priority: 'high',\n          source: 'PharmGKB + Real-world Evidence'\n        },\n        {\n          type: 'warning',\n          title: 'DPYD Variant Detected',\n          description: 'c.1905+1G>A variant detected. Standard 5-FU dosing is safe, but enhanced monitoring recommended',\n          confidence: 98,\n          actionable: true,\n          priority: 'medium',\n          source: 'CPIC Guidelines'\n        },\n        {\n          type: 'trial',\n          title: 'Clinical Trial Match',\n          description: 'Patient eligible for NCT04567890: AI-guided precision oncology trial with 89% match score',\n          confidence: 89,\n          actionable: true,\n          priority: 'medium',\n          source: 'ClinicalTrials.gov AI Matcher'\n        }\n      ];\n\n      setGenomicProfile(mockGenomicProfile);\n      setProtocols(mockProtocols);\n      setSelectedProtocol(mockProtocols[0]);\n      setAiInsights(mockInsights);\n    } catch (error) {\n      console.error('Error loading patient data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generatePredictions = async (protocol: TreatmentProtocol) => {\n    setLoading(true);\n    try {\n      // Simulate AI prediction generation\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      const predictions = {\n        outcomeTimeline: [\n          { month: 1, responseRate: 25, survivalRate: 100, qualityOfLife: 85 },\n          { month: 3, responseRate: 65, survivalRate: 98, qualityOfLife: 82 },\n          { month: 6, responseRate: 84, survivalRate: 94, qualityOfLife: 84 },\n          { month: 12, responseRate: 78, survivalRate: 88, qualityOfLife: 87 },\n          { month: 24, responseRate: 72, survivalRate: 76, qualityOfLife: 89 }\n        ],\n        biomarkerPredictions: {\n          'CEA': { baseline: 45, predicted: [35, 18, 8, 12, 15] },\n          'CA 19-9': { baseline: 120, predicted: [95, 45, 22, 28, 32] }\n        },\n        riskFactors: [\n          { factor: 'Neuropathy', risk: 35, mitigation: 'Dose reduction protocol' },\n          { factor: 'Neutropenia', risk: 22, mitigation: 'G-CSF support' },\n          { factor: 'GI Toxicity', risk: 18, mitigation: 'Prophylactic medications' }\n        ]\n      };\n      \n      setPredictionResults(predictions);\n    } catch (error) {\n      console.error('Error generating predictions:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Simulation functions\n  const generateScenarios = async (baseProtocol: TreatmentProtocol) => {\n    setLoading(true);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      const scenarios: TreatmentScenario[] = [\n        {\n          id: 'scenario-1',\n          name: 'Dose-Reduced Regimen',\n          description: '20% dose reduction with enhanced supportive care',\n          modifications: {\n            dosageAdjustments: { 'Oxaliplatin': -20, '5-Fluorouracil': -15 },\n            drugSubstitutions: {},\n            scheduleChanges: {},\n            additionalDrugs: ['Ondansetron', 'Dexamethasone'],\n            removedDrugs: []\n          },\n          predictedOutcomes: {\n            responseRate: 78,\n            survivalBenefit: 72,\n            qualityOfLife: 91,\n            toxicityReduction: 45,\n            confidence: 89\n          },\n          riskProfile: {\n            severity: 'low',\n            factors: ['Reduced neuropathy risk', 'Better tolerance']\n          }\n        },\n        {\n          id: 'scenario-2',\n          name: 'Alternative Schedule',\n          description: 'Modified infusion schedule with split dosing',\n          modifications: {\n            dosageAdjustments: {},\n            drugSubstitutions: {},\n            scheduleChanges: { 'Oxaliplatin': 'Split dose over 2 days' },\n            additionalDrugs: [],\n            removedDrugs: []\n          },\n          predictedOutcomes: {\n            responseRate: 81,\n            survivalBenefit: 74,\n            qualityOfLife: 88,\n            toxicityReduction: 28,\n            confidence: 85\n          },\n          riskProfile: {\n            severity: 'low',\n            factors: ['Improved infusion tolerance']\n          }\n        },\n        {\n          id: 'scenario-3',\n          name: 'Combination Enhancement',\n          description: 'Add targeted therapy based on genomic profile',\n          modifications: {\n            dosageAdjustments: {},\n            drugSubstitutions: {},\n            scheduleChanges: {},\n            additionalDrugs: ['Panitumumab'],\n            removedDrugs: []\n          },\n          predictedOutcomes: {\n            responseRate: 92,\n            survivalBenefit: 88,\n            qualityOfLife: 79,\n            toxicityReduction: -15,\n            confidence: 82\n          },\n          riskProfile: {\n            severity: 'medium',\n            factors: ['Increased skin toxicity risk', 'Higher efficacy potential']\n          }\n        }\n      ];\n      \n      setSimulationState(prev => ({\n        ...prev,\n        scenarios,\n        comparison: {\n          baseline: baseProtocol,\n          scenarios\n        }\n      }));\n      \n    } catch (error) {\n      console.error('Error generating scenarios:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const runSimulation = async (scenario: TreatmentScenario) => {\n    setSimulationState(prev => ({ ...prev, isRunning: true, currentStep: 0, activeScenario: scenario }));\n    \n    for (let step = 1; step <= simulationState.totalSteps; step++) {\n      await new Promise(resolve => setTimeout(resolve, 800));\n      setSimulationState(prev => ({ ...prev, currentStep: step }));\n    }\n    \n    setSimulationState(prev => ({ ...prev, isRunning: false }));\n  };\n\n  const resetSimulation = () => {\n    setSimulationState(prev => ({\n      ...prev,\n      isRunning: false,\n      currentStep: 0,\n      activeScenario: null\n    }));\n  };\n\n  // Clinical trial matching functions\n  const searchMatchingTrials = async (protocol?: TreatmentProtocol) => {\n    setTrialMatchLoading(true);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      const mockTrials: ClinicalTrial[] = [\n        {\n          nct_id: 'NCT05123456',\n          title: 'AI-Guided Precision Oncology with Genomic-Optimized FOLFOX',\n          phase: 'Phase 3',\n          status: 'Recruiting',\n          condition: 'Colorectal Cancer',\n          biomarkers: ['KRAS wild-type', 'MSI-stable'],\n          eligibilityScore: 94,\n          matchReasons: [\n            'Genomic profile matches inclusion criteria',\n            'Current treatment aligns with trial protocol',\n            'Age and performance status compatible'\n          ],\n          location: {\n            name: 'Memorial Sloan Kettering Cancer Center',\n            city: 'New York',\n            state: 'NY',\n            distance: 2.3\n          },\n          contact: {\n            name: 'Dr. Sarah Johnson',\n            phone: '(212) 639-2000',\n            email: 'trialsinfo@mskcc.org'\n          },\n          interventions: ['AI-Optimized FOLFOX', 'Precision Dosing Algorithm'],\n          enrollmentStatus: {\n            current: 287,\n            target: 450,\n            estimatedCompletion: '2025-12-31'\n          },\n          keyEligibility: {\n            ageRange: '18-75 years',\n            performanceStatus: 'ECOG 0-1',\n            priorTreatments: 'No prior chemotherapy for metastatic disease',\n            biomarkerRequirements: ['KRAS wild-type', 'Adequate genomic profile']\n          }\n        },\n        {\n          nct_id: 'NCT05234567',\n          title: 'Combination Immunotherapy with AI-Selected Biomarkers',\n          phase: 'Phase 2',\n          status: 'Recruiting',\n          condition: 'Advanced Solid Tumors',\n          biomarkers: ['PD-L1+', 'TMB-High'],\n          eligibilityScore: 87,\n          matchReasons: [\n            'Biomarker profile suggests good response',\n            'Innovative AI-guided approach',\n            'Potential for improved outcomes'\n          ],\n          location: {\n            name: 'Dana-Farber Cancer Institute',\n            city: 'Boston',\n            state: 'MA',\n            distance: 45.7\n          },\n          contact: {\n            name: 'Dr. Lisa Wang',\n            phone: '(617) 632-3000',\n            email: 'precision@dfci.harvard.edu'\n          },\n          interventions: ['Pembrolizumab', 'AI-Selected Combination'],\n          enrollmentStatus: {\n            current: 67,\n            target: 120,\n            estimatedCompletion: '2025-06-30'\n          },\n          keyEligibility: {\n            ageRange: '18+ years',\n            performanceStatus: 'ECOG 0-2',\n            priorTreatments: 'Progression on standard therapy',\n            biomarkerRequirements: ['PD-L1 expression', 'TMB testing']\n          }\n        },\n        {\n          nct_id: 'NCT05345678',\n          title: 'Real-Time Adaptation Protocol with Liquid Biopsy',\n          phase: 'Phase 2',\n          status: 'Recruiting',\n          condition: 'Metastatic Cancer',\n          biomarkers: ['ctDNA monitoring', 'Dynamic biomarkers'],\n          eligibilityScore: 82,\n          matchReasons: [\n            'Real-time monitoring aligns with AI approach',\n            'Adaptive dosing protocol',\n            'Cutting-edge biomarker strategy'\n          ],\n          location: {\n            name: 'UCSF Helen Diller Family Comprehensive Cancer Center',\n            city: 'San Francisco',\n            state: 'CA',\n            distance: 12.1\n          },\n          contact: {\n            name: 'Dr. Emily Rodriguez',\n            phone: '(415) 476-1000',\n            email: 'liquidbiopsy@ucsf.edu'\n          },\n          interventions: ['Liquid Biopsy-Guided Therapy', 'Dynamic Treatment Adaptation'],\n          enrollmentStatus: {\n            current: 134,\n            target: 200,\n            estimatedCompletion: '2025-12-31'\n          },\n          keyEligibility: {\n            ageRange: '18+ years',\n            performanceStatus: 'ECOG 0-1',\n            priorTreatments: '≥1 prior systemic therapy',\n            biomarkerRequirements: ['Measurable disease', 'ctDNA detectable']\n          }\n        }\n      ];\n\n      const eligibilityGaps = [\n        {\n          criteria: 'Performance Status',\n          currentValue: 'ECOG 2',\n          requiredValue: 'ECOG 0-1',\n          actionNeeded: 'Improve functional status or consider supportive care'\n        },\n        {\n          criteria: 'Prior Treatments',\n          currentValue: '3 prior regimens',\n          requiredValue: '≤2 prior regimens',\n          actionNeeded: 'Consider trials for heavily pretreated patients'\n        }\n      ];\n\n      const result: TrialMatchResult = {\n        matchedTrials: mockTrials,\n        totalMatches: mockTrials.length,\n        highConfidenceMatches: mockTrials.filter(t => t.eligibilityScore >= 90).length,\n        alternativeTrials: mockTrials.filter(t => t.eligibilityScore < 90),\n        eligibilityGaps\n      };\n\n      setTrialMatchResult(result);\n    } catch (error) {\n      console.error('Error matching clinical trials:', error);\n    } finally {\n      setTrialMatchLoading(false);\n    }\n  };\n\n  const getTrialPhaseColor = (phase: string) => {\n    switch (phase) {\n      case 'Phase 1': return 'bg-blue-100 text-blue-800';\n      case 'Phase 2': return 'bg-green-100 text-green-800';\n      case 'Phase 3': return 'bg-purple-100 text-purple-800';\n      case 'Phase 4': return 'bg-orange-100 text-orange-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getEligibilityScoreColor = (score: number) => {\n    if (score >= 90) return 'text-green-600';\n    if (score >= 75) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const getMetabolizerColor = (phenotype: string) => {\n    switch (phenotype) {\n      case 'Poor': return 'bg-red-100 text-red-800';\n      case 'Intermediate': return 'bg-yellow-100 text-yellow-800';\n      case 'Normal': return 'bg-green-100 text-green-800';\n      case 'Rapid': return 'bg-blue-100 text-blue-800';\n      case 'Ultrarapid': return 'bg-purple-100 text-purple-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getRiskLevelColor = (level: string) => {\n    switch (level) {\n      case 'High': return 'bg-red-100 text-red-800 border-red-200';\n      case 'Moderate': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'Low': return 'bg-green-100 text-green-800 border-green-200';\n      default: return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const getRecommendationColor = (recommendation: string) => {\n    switch (recommendation) {\n      case 'Standard': return 'bg-green-100 text-green-800';\n      case 'Reduced': return 'bg-yellow-100 text-yellow-800';\n      case 'Increased': return 'bg-blue-100 text-blue-800';\n      case 'Alternative': return 'bg-orange-100 text-orange-800';\n      case 'Avoid': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Genomic analysis functions\n  const analyzePharmacogenomics = async (selectedDrugs: string[]) => {\n    setGenomicAnalysisLoading(true);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      const mockResults = {\n        analysisId: 'PGX-2024-001',\n        patientId: 'PT-12345',\n        timestamp: new Date().toISOString(),\n        drugAnalysis: selectedDrugs.map(drug => ({\n          drug,\n          riskAssessment: {\n            overallRisk: Math.random() > 0.7 ? 'High' : Math.random() > 0.4 ? 'Moderate' : 'Low',\n            efficacyPrediction: Math.floor(Math.random() * 30) + 70,\n            toxicityRisk: Math.floor(Math.random() * 40) + 10,\n            recommendations: [\n              'Monitor closely for first 4 weeks',\n              'Consider dose adjustment based on response',\n              'Regular pharmacokinetic monitoring recommended'\n            ]\n          },\n          genomicFactors: [\n            {\n              gene: 'CYP2D6',\n              impact: 'Reduced metabolism',\n              confidence: 94\n            },\n            {\n              gene: 'CYP2C19',\n              impact: 'Standard metabolism',\n              confidence: 87\n            }\n          ]\n        })),\n        pathwayAnalysis: {\n          primaryPathways: [\n            {\n              pathway: 'CYP2D6-mediated metabolism',\n              status: 'Impaired',\n              affectedDrugs: selectedDrugs.slice(0, 2),\n              clinicalSignificance: 'High'\n            },\n            {\n              pathway: 'Phase II conjugation',\n              status: 'Normal',\n              affectedDrugs: selectedDrugs.slice(1),\n              clinicalSignificance: 'Low'\n            }\n          ],\n          interactions: [\n            {\n              type: 'Gene-Gene',\n              description: 'CYP2D6 and CYP2C19 combined effect',\n              impact: 'Moderate reduction in overall drug clearance'\n            }\n          ]\n        },\n        clinicalDecisionSupport: {\n          alerts: [\n            {\n              level: 'High',\n              message: 'HLA-B*5701 positive - Avoid abacavir',\n              action: 'Select alternative antiretroviral'\n            },\n            {\n              level: 'Medium',\n              message: 'TPMT intermediate - Reduce thiopurine doses',\n              action: 'Use 30-70% dose reduction'\n            }\n          ],\n          dosingGuidance: selectedDrugs.map(drug => ({\n            drug,\n            standardDose: '100mg daily',\n            recommendedDose: Math.random() > 0.5 ? '75mg daily' : '100mg daily',\n            rationale: 'Based on CYP2D6 intermediate metabolizer status'\n          }))\n        }\n      };\n      \n      setPharmacogenomicResults(mockResults);\n    } catch (error) {\n      console.error('Error analyzing pharmacogenomics:', error);\n    } finally {\n      setGenomicAnalysisLoading(false);\n    }\n  };\n\n  // Enhanced risk calculation functions\n  const calculateOverallRisk = (profile: GenomicProfile | null): number => {\n    if (!profile) return 0.5;\n    \n    let riskScore = 0;\n    let factors = 0;\n    \n    // HLA risk contribution\n    if (profile.pharmacogenomics.hlaRisks.length > 0) {\n      const hlaRisk = profile.pharmacogenomics.hlaRisks.reduce((acc, risk) => {\n        return acc + (risk.riskLevel === 'High' ? 0.3 : risk.riskLevel === 'Moderate' ? 0.2 : 0.1);\n      }, 0);\n      riskScore += hlaRisk;\n      factors++;\n    }\n    \n    // Metabolizer status contribution\n    const metabolizerRisk = Object.values(profile.pharmacogenomics.metabolizerStatus).reduce((acc, status) => {\n      return acc + (status.phenotype === 'Poor' ? 0.4 : \n                    status.phenotype === 'Intermediate' ? 0.3 : \n                    status.phenotype === 'Ultrarapid' ? 0.2 : 0.1);\n    }, 0) / Object.keys(profile.pharmacogenomics.metabolizerStatus).length;\n    \n    riskScore += metabolizerRisk;\n    factors++;\n    \n    return Math.min(riskScore / factors, 1.0);\n  };\n\n  const calculateDrugSpecificRisk = (drug: string, profile: GenomicProfile | null) => {\n    if (!profile) return getDefaultDrugRisk(drug);\n    \n    // Drug-specific risk calculations based on genomic profile\n    const riskMap: Record<string, any> = {\n      'Oxaliplatin': {\n        overall: profile.pharmacogenomics.metabolizerStatus['CYP2D6']?.phenotype === 'Intermediate' ? 'Moderate' : 'Low',\n        efficacy: 82,\n        toxicity: 35,\n        pkImpact: 'Moderate - reduced clearance',\n        primaryPathway: 'CYP2D6-mediated metabolism',\n        secondaryPathways: ['CYP3A4', 'Non-enzymatic degradation'],\n        metabolicCapacity: 0.7,\n        standardDose: '85 mg/m²',\n        adjustedDose: '70 mg/m² (18% reduction)',\n        adjustmentRationale: 'CYP2D6 intermediate metabolizer - reduce dose to prevent accumulation',\n        monitoring: ['Neuropathy assessment', 'PK levels if available'],\n        recommendations: [\n          'Reduce initial dose by 15-20%',\n          'Monitor for neuropathy closely',\n          'Consider dose escalation based on tolerance'\n        ],\n        genomicFactors: [\n          { gene: 'CYP2D6', impact: 'Reduced metabolism', confidence: 94 },\n          { gene: 'ERCC1', impact: 'DNA repair capacity', confidence: 78 }\n        ]\n      },\n      '5-Fluorouracil': {\n        overall: profile.pharmacogenomics.otherBiomarkers.some(b => b.gene === 'DPYD') ? 'Low' : 'Very Low',\n        efficacy: 85,\n        toxicity: 15,\n        pkImpact: 'Minimal - normal DPYD function',\n        primaryPathway: 'DPYD-mediated catabolism',\n        secondaryPathways: ['Anabolic pathways', 'Renal excretion'],\n        metabolicCapacity: 0.9,\n        standardDose: '2400 mg/m²',\n        adjustedDose: '2400 mg/m² (no adjustment)',\n        adjustmentRationale: 'Normal DPYD function - standard dosing appropriate',\n        monitoring: ['CBC', 'Mucositis assessment'],\n        recommendations: [\n          'Standard dosing appropriate',\n          'Monitor for myelosuppression',\n          'Watch for mucositis development'\n        ],\n        genomicFactors: [\n          { gene: 'DPYD', impact: 'Normal metabolism', confidence: 98 }\n        ]\n      }\n    };\n    \n    return riskMap[drug] || getDefaultDrugRisk(drug);\n  };\n\n  const getDefaultDrugRisk = (drug: string) => ({\n    overall: 'Moderate',\n    efficacy: 75,\n    toxicity: 25,\n    pkImpact: 'Unknown',\n    primaryPathway: 'Mixed pathways',\n    secondaryPathways: ['Multiple'],\n    metabolicCapacity: 0.8,\n    standardDose: 'Standard',\n    adjustedDose: 'Standard',\n    adjustmentRationale: 'Insufficient genomic data for specific recommendation',\n    monitoring: ['Standard monitoring'],\n    recommendations: ['Standard dosing with close monitoring'],\n    genomicFactors: []\n  });\n\n  // Enhanced visualization components\n  const TimelineChart: React.FC<{ data: any; detailed?: boolean }> = ({ data, detailed = false }) => {\n    const timePoints = data?.outcomeTimeline || [];\n    const maxResponse = Math.max(...timePoints.map((p: any) => p.responseRate));\n    \n    return (\n      <div className=\"relative h-64 p-4 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h6 className=\"font-semibold text-gray-900\">Treatment Response Timeline</h6>\n          <div className=\"flex items-center space-x-2 text-xs text-gray-600\">\n            <div className=\"flex items-center space-x-1\">\n              <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n              <span>Response Rate</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n              <span>Survival Rate</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <div className=\"w-3 h-3 bg-purple-500 rounded-full\"></div>\n              <span>Quality of Life</span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"relative h-40\">\n          {/* Grid lines */}\n          <div className=\"absolute inset-0 grid grid-rows-5 opacity-20\">\n            {[...Array(5)].map((_, i) => (\n              <div key={i} className=\"border-t border-gray-300\"></div>\n            ))}\n          </div>\n          \n          {/* Y-axis labels */}\n          <div className=\"absolute left-0 top-0 h-full flex flex-col justify-between text-xs text-gray-500 -ml-8\">\n            <span>100%</span>\n            <span>75%</span>\n            <span>50%</span>\n            <span>25%</span>\n            <span>0%</span>\n          </div>\n          \n          {/* Timeline points and connections */}\n          <div className=\"relative h-full flex items-end justify-between px-4\">\n            {timePoints.map((point: any, index: number) => (\n              <div key={index} className=\"relative flex flex-col items-center\">\n                {/* Data points */}\n                <div className=\"relative mb-2\">\n                  <div \n                    className=\"w-3 h-3 bg-green-500 rounded-full shadow-sm cursor-pointer hover:scale-125 transition-transform\"\n                    style={{ transform: `translateY(-${(point.responseRate / 100) * 140}px)` }}\n                    title={`Response: ${point.responseRate}%`}\n                  />\n                  <div \n                    className=\"w-3 h-3 bg-blue-500 rounded-full shadow-sm cursor-pointer hover:scale-125 transition-transform absolute left-0\"\n                    style={{ transform: `translateY(-${(point.survivalRate / 100) * 140}px)` }}\n                    title={`Survival: ${point.survivalRate}%`}\n                  />\n                  <div \n                    className=\"w-3 h-3 bg-purple-500 rounded-full shadow-sm cursor-pointer hover:scale-125 transition-transform absolute left-0\"\n                    style={{ transform: `translateY(-${(point.qualityOfLife / 100) * 140}px)` }}\n                    title={`QoL: ${point.qualityOfLife}%`}\n                  />\n                </div>\n                \n                {/* Time labels */}\n                <div className=\"text-xs text-gray-600 text-center\">\n                  <div>Month</div>\n                  <div className=\"font-semibold\">{point.month}</div>\n                </div>\n                \n                {/* Detailed view additional info */}\n                {detailed && (\n                  <div className=\"absolute -top-16 left-1/2 transform -translate-x-1/2 bg-white p-2 rounded shadow-lg border text-xs z-10 opacity-0 hover:opacity-100 transition-opacity\">\n                    <div>Response: {point.responseRate}%</div>\n                    <div>Survival: {point.survivalRate}%</div>\n                    <div>QoL: {point.qualityOfLife}%</div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n          \n          {/* Trend lines */}\n          <svg className=\"absolute inset-0 w-full h-full pointer-events-none\">\n            <defs>\n              <linearGradient id=\"responseGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#10B981\" stopOpacity=\"0.3\"/>\n                <stop offset=\"100%\" stopColor=\"#10B981\" stopOpacity=\"0.1\"/>\n              </linearGradient>\n            </defs>\n            \n            {/* Response rate trend line */}\n            <path\n              d={`M ${timePoints.map((point: any, index: number) => \n                `${(index / (timePoints.length - 1)) * 100}% ${100 - (point.responseRate)}%`\n              ).join(' L ')}`}\n              className=\"stroke-green-500 stroke-2 fill-none\"\n              style={{ strokeDasharray: animatedCharts ? '5,5' : 'none' }}\n            />\n          </svg>\n        </div>\n      </div>\n    );\n  };\n\n  const OutcomePredictionChart: React.FC<{ protocol: TreatmentProtocol }> = ({ protocol }) => {\n    const outcomes = [\n      { label: 'Response Rate', value: protocol.expectedOutcome.responseRate, color: 'bg-green-500', target: 85 },\n      { label: 'Survival Benefit', value: protocol.expectedOutcome.survivalBenefit, color: 'bg-blue-500', target: 80 },\n      { label: 'Quality of Life', value: protocol.expectedOutcome.qualityOfLife, color: 'bg-purple-500', target: 75 },\n      { label: 'Confidence', value: protocol.expectedOutcome.confidence, color: 'bg-orange-500', target: 90 }\n    ];\n\n    return (\n      <div className=\"p-4 bg-gradient-to-br from-gray-50 to-blue-50 rounded-lg border\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h6 className=\"font-semibold text-gray-900\">Outcome Predictions vs Targets</h6>\n          <div className=\"text-xs text-gray-600\">Genomic Compatibility: {protocol.genomicCompatibility}%</div>\n        </div>\n        \n        <div className=\"space-y-4\">\n          {outcomes.map((outcome, index) => (\n            <div key={index} className=\"relative\">\n              <div className=\"flex items-center justify-between mb-1\">\n                <span className=\"text-sm font-medium text-gray-700\">{outcome.label}</span>\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-sm font-bold text-gray-900\">{outcome.value}%</span>\n                  <span className=\"text-xs text-gray-500\">Target: {outcome.target}%</span>\n                </div>\n              </div>\n              \n              <div className=\"relative h-6 bg-gray-200 rounded-full overflow-hidden\">\n                {/* Target indicator */}\n                <div \n                  className=\"absolute top-0 h-full w-0.5 bg-gray-600 z-10\"\n                  style={{ left: `${outcome.target}%` }}\n                  title={`Target: ${outcome.target}%`}\n                />\n                \n                {/* Progress bar */}\n                <div \n                  className={`h-full rounded-full transition-all duration-1000 ${outcome.color}`}\n                  style={{ \n                    width: animatedCharts ? `${outcome.value}%` : '0%',\n                    background: outcome.value >= outcome.target \n                      ? `linear-gradient(90deg, ${outcome.color.replace('bg-', '').replace('-500', '')}, #10B981)`\n                      : undefined\n                  }}\n                />\n                \n                {/* Value indicator */}\n                <div \n                  className=\"absolute top-1/2 transform -translate-y-1/2 w-3 h-3 bg-white border-2 border-gray-600 rounded-full shadow-sm\"\n                  style={{ left: `calc(${outcome.value}% - 6px)` }}\n                />\n              </div>\n              \n              {/* Performance indicator */}\n              <div className=\"flex justify-end mt-1\">\n                {outcome.value >= outcome.target ? (\n                  <span className=\"text-xs text-green-600 flex items-center\">\n                    <TrendingUp className=\"w-3 h-3 mr-1\" />\n                    Above target\n                  </span>\n                ) : (\n                  <span className=\"text-xs text-orange-600 flex items-center\">\n                    <TrendingDown className=\"w-3 h-3 mr-1\" />\n                    Below target\n                  </span>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const BiomarkerTrendChart: React.FC<{ data: any }> = ({ data }) => {\n    const biomarkers = data?.biomarkerPredictions || {};\n    \n    return (\n      <div className=\"p-4 bg-gradient-to-br from-green-50 to-emerald-50 rounded-lg border\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h6 className=\"font-semibold text-gray-900\">Biomarker Trends</h6>\n          <div className=\"text-xs text-gray-600\">Predicted trajectory over 24 months</div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {Object.entries(biomarkers).map(([biomarker, data]: [string, any]) => (\n            <div key={biomarker} className=\"bg-white p-3 rounded border\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <h7 className=\"font-medium text-gray-900\">{biomarker}</h7>\n                <span className=\"text-xs text-gray-600\">Baseline: {data.baseline}</span>\n              </div>\n              \n              <div className=\"relative h-20\">\n                <div className=\"flex items-end justify-between h-full\">\n                  {data.predicted.map((value: number, index: number) => (\n                    <div key={index} className=\"flex flex-col items-center\">\n                      <div \n                        className=\"w-4 bg-gradient-to-t from-emerald-600 to-emerald-400 rounded-t transition-all duration-500\"\n                        style={{ \n                          height: `${Math.max((1 - value / data.baseline) * 60, 5)}px`,\n                          opacity: animatedCharts ? 1 : 0.3\n                        }}\n                      />\n                      <span className=\"text-xs text-gray-500 mt-1\">{index * 6}m</span>\n                    </div>\n                  ))}\n                </div>\n                \n                {/* Baseline reference line */}\n                <div className=\"absolute w-full border-t border-dashed border-gray-400 opacity-50\" style={{ top: '60px' }}>\n                  <span className=\"absolute -left-12 -top-2 text-xs text-gray-500\">Baseline</span>\n                </div>\n              </div>\n              \n              <div className=\"mt-2 text-xs text-gray-600\">\n                Current trend: {data.predicted[data.predicted.length - 1] < data.baseline ? \n                  <span className=\"text-green-600\">Improving ↓</span> : \n                  <span className=\"text-red-600\">Worsening ↑</span>\n                }\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const RiskMatrix: React.FC<{ genomicProfile: GenomicProfile | null }> = ({ genomicProfile }) => {\n    if (!genomicProfile) return null;\n    \n    const riskFactors = [\n      { \n        name: 'CYP2D6', \n        risk: genomicProfile.pharmacogenomics.metabolizerStatus['CYP2D6']?.phenotype === 'Poor' ? 0.8 : \n              genomicProfile.pharmacogenomics.metabolizerStatus['CYP2D6']?.phenotype === 'Intermediate' ? 0.6 : 0.3,\n        category: 'Metabolism'\n      },\n      { \n        name: 'HLA-B*5701', \n        risk: genomicProfile.pharmacogenomics.hlaRisks.find(r => r.allele === 'HLA-B*5701') ? 0.9 : 0.1,\n        category: 'Hypersensitivity'\n      },\n      { \n        name: 'TPMT', \n        risk: genomicProfile.pharmacogenomics.metabolizerStatus['TPMT']?.phenotype === 'Poor' ? 0.8 : \n              genomicProfile.pharmacogenomics.metabolizerStatus['TPMT']?.phenotype === 'Intermediate' ? 0.5 : 0.2,\n        category: 'Toxicity'\n      },\n      { \n        name: 'UGT1A1', \n        risk: genomicProfile.pharmacogenomics.otherBiomarkers.find(b => b.gene === 'UGT1A1') ? 0.7 : 0.3,\n        category: 'Clearance'\n      }\n    ];\n\n    const categories = ['Metabolism', 'Hypersensitivity', 'Toxicity', 'Clearance'];\n    \n    return (\n      <div className=\"p-4 bg-gradient-to-br from-red-50 to-orange-50 rounded-lg border\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h6 className=\"font-semibold text-gray-900\">Genomic Risk Heat Map</h6>\n          <div className=\"flex items-center space-x-2 text-xs\">\n            <span>Low</span>\n            <div className=\"flex space-x-1\">\n              <div className=\"w-3 h-3 bg-green-200 rounded\"></div>\n              <div className=\"w-3 h-3 bg-yellow-200 rounded\"></div>\n              <div className=\"w-3 h-3 bg-orange-200 rounded\"></div>\n              <div className=\"w-3 h-3 bg-red-200 rounded\"></div>\n            </div>\n            <span>High</span>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-4 gap-2\">\n          {categories.map((category) => (\n            <div key={category} className=\"text-center\">\n              <div className=\"text-xs font-medium text-gray-700 mb-2\">{category}</div>\n              <div className=\"space-y-1\">\n                {riskFactors.filter(f => f.category === category).map((factor) => (\n                  <div key={factor.name} className=\"relative group\">\n                    <div \n                      className={`h-8 rounded cursor-pointer transition-all duration-300 ${\n                        factor.risk >= 0.8 ? 'bg-red-400 hover:bg-red-500' :\n                        factor.risk >= 0.6 ? 'bg-orange-400 hover:bg-orange-500' :\n                        factor.risk >= 0.4 ? 'bg-yellow-400 hover:bg-yellow-500' :\n                        'bg-green-400 hover:bg-green-500'\n                      }`}\n                      style={{ opacity: 0.7 + (factor.risk * 0.3) }}\n                    />\n                    <div className=\"absolute inset-0 flex items-center justify-center text-xs font-medium text-white\">\n                      {factor.name}\n                    </div>\n                    \n                    {/* Tooltip */}\n                    <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 opacity-0 group-hover:opacity-100 transition-opacity bg-gray-900 text-white text-xs p-2 rounded whitespace-nowrap z-10\">\n                      Risk Score: {(factor.risk * 100).toFixed(0)}%\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"mt-4 text-xs text-gray-600\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <strong>High Risk Factors:</strong>\n              <ul className=\"mt-1 space-y-1\">\n                {riskFactors.filter(f => f.risk >= 0.7).map(f => (\n                  <li key={f.name} className=\"flex items-center\">\n                    <div className=\"w-2 h-2 bg-red-400 rounded-full mr-2\"></div>\n                    {f.name}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div>\n              <strong>Overall Risk Score:</strong>\n              <div className=\"mt-1 text-lg font-bold text-orange-600\">\n                {(genomicProfile.pharmacogenomics.overallRiskScore * 100).toFixed(0)}%\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const getPriorityIcon = (priority: string) => {\n    switch (priority) {\n      case 'high': return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\n      case 'medium': return <Clock className=\"w-4 h-4 text-yellow-500\" />;\n      case 'low': return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      default: return <Activity className=\"w-4 h-4 text-gray-500\" />;\n    }\n  };\n\n  const getEvidenceBadge = (level: string) => {\n    const colors = {\n      'I': 'bg-green-100 text-green-800',\n      'II': 'bg-blue-100 text-blue-800',\n      'III': 'bg-yellow-100 text-yellow-800',\n      'IV': 'bg-gray-100 text-gray-800'\n    };\n    return colors[level as keyof typeof colors] || colors['IV'];\n  };\n\n  // Wizard steps configuration\n  const wizardSteps = [\n    { id: 'setup', title: 'Patient Setup', description: 'Review genomic profile and AI insights', icon: Target },\n    { id: 'review', title: 'Protocol Review', description: 'Select and customize treatment protocols', icon: FileText },\n    { id: 'simulate', title: 'Simulate Options', description: 'Explore treatment scenarios', icon: Calculator },\n    { id: 'results', title: 'View Results', description: 'Analyze predictions and outcomes', icon: BarChart3 }\n  ];\n\n  const getCurrentStepIndex = () => wizardSteps.findIndex(step => step.id === currentStep);\n  const isStepCompleted = (stepId: string) => {\n    const stepIndex = wizardSteps.findIndex(step => step.id === stepId);\n    const currentIndex = getCurrentStepIndex();\n    return stepIndex < currentIndex;\n  };\n\n  const canProceedToNextStep = () => {\n    switch (currentStep) {\n      case 'setup': return genomicProfile && aiInsights.length > 0;\n      case 'review': return selectedProtocol;\n      case 'simulate': return simulationState.scenarios.length > 0;\n      default: return true;\n    }\n  };\n\n  const nextStep = () => {\n    const currentIndex = getCurrentStepIndex();\n    if (currentIndex < wizardSteps.length - 1) {\n      setCurrentStep(wizardSteps[currentIndex + 1].id as any);\n    }\n  };\n\n  const previousStep = () => {\n    const currentIndex = getCurrentStepIndex();\n    if (currentIndex > 0) {\n      setCurrentStep(wizardSteps[currentIndex - 1].id as any);\n    }\n  };\n\n  const getStepTooltip = (stepId: string) => {\n    const tooltips = {\n      'setup': 'Load and analyze patient genomic data, view AI-generated treatment insights and compatibility scores.',\n      'review': 'Compare different treatment protocols, see efficacy predictions and select the best option for your patient.',\n      'simulate': 'Modify treatment parameters, explore alternative dosing schedules, and compare predicted outcomes.',\n      'results': 'View comprehensive predictions, outcome timelines, biomarker trends, and risk assessments.'\n    };\n    return tooltips[stepId as keyof typeof tooltips] || 'Treatment planning step';\n  };\n\n  if (loading && !protocols.length) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" />\n        <span className=\"ml-3 text-lg\">Analyzing genomic profile and generating treatment protocols...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Getting Started */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Brain className=\"w-8 h-8 text-purple-600\" />\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">AI Treatment Planner</h1>\n            <p className=\"text-gray-600\">Step-by-step genomic-optimized treatment planning</p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          {isFirstTime && (\n            <button\n              onClick={() => setShowGuidedTour(true)}\n              className=\"flex items-center space-x-2 px-3 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors\"\n            >\n              <Eye className=\"w-4 h-4\" />\n              <span className=\"text-sm font-medium\">Take Tour</span>\n            </button>\n          )}\n          <div className=\"flex items-center space-x-2\">\n            <Dna className=\"w-5 h-5 text-green-600\" />\n            <Tooltip \n              content=\"Genomic compatibility score indicates how well your patient's genetic profile matches with available treatments. Higher scores suggest better predicted outcomes.\"\n              type=\"clinical\"\n              position=\"bottom-left\"\n            >\n              <span className=\"text-sm font-medium text-green-600 cursor-help border-b border-dotted border-green-400\">\n                {genomicProfile?.riskScore ? `${(genomicProfile.riskScore * 100).toFixed(0)}% compatibility` : 'Loading...'}\n              </span>\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n\n      {/* Progress Wizard */}\n      <Card>\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900\">Treatment Planning Workflow</h2>\n            <span className=\"text-sm text-gray-500\">\n              Step {getCurrentStepIndex() + 1} of {wizardSteps.length}\n            </span>\n          </div>\n          \n          {/* Step Progress Bar */}\n          <div className=\"flex items-center justify-between mb-8\">\n            {wizardSteps.map((step, index) => {\n              const StepIcon = step.icon;\n              const isActive = step.id === currentStep;\n              const isCompleted = isStepCompleted(step.id);\n              \n              return (\n                <div key={step.id} className=\"flex items-center\">\n                  <div className={`flex flex-col items-center ${index !== wizardSteps.length - 1 ? 'flex-1' : ''}`}>\n                    <div className={`flex items-center justify-center w-10 h-10 rounded-full border-2 transition-all ${\n                      isActive \n                        ? 'bg-purple-600 border-purple-600 text-white'\n                        : isCompleted \n                        ? 'bg-green-600 border-green-600 text-white'\n                        : 'bg-gray-100 border-gray-300 text-gray-400'\n                    }`}>\n                      {isCompleted ? <CheckCircle className=\"w-5 h-5\" /> : <StepIcon className=\"w-5 h-5\" />}\n                    </div>\n                    <div className=\"text-center mt-2\">\n                      <div className={`text-sm font-medium ${\n                        isActive ? 'text-purple-600' : isCompleted ? 'text-green-600' : 'text-gray-500'\n                      }`}>\n                        {step.title}\n                      </div>\n                      <Tooltip \n                        content={getStepTooltip(step.id)}\n                        type=\"help\"\n                        position=\"bottom\"\n                      >\n                        <div className=\"text-xs text-gray-400 max-w-20 cursor-help\">\n                          {step.description}\n                        </div>\n                      </Tooltip>\n                    </div>\n                  </div>\n                  {index !== wizardSteps.length - 1 && (\n                    <div className={`flex-1 h-px mx-4 ${\n                      isCompleted ? 'bg-green-300' : 'bg-gray-200'\n                    }`} />\n                  )}\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Step Navigation */}\n          <div className=\"flex items-center justify-between\">\n            <button\n              onClick={previousStep}\n              disabled={getCurrentStepIndex() === 0}\n              className=\"flex items-center space-x-2 px-4 py-2 text-gray-600 hover:text-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <span className=\"text-sm\">← Previous</span>\n            </button>\n            \n            <div className=\"text-sm text-gray-500\">\n              {wizardSteps[getCurrentStepIndex()].description}\n            </div>\n            \n            <button\n              onClick={nextStep}\n              disabled={!canProceedToNextStep() || getCurrentStepIndex() === wizardSteps.length - 1}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              <span className=\"text-sm\">Next →</span>\n            </button>\n          </div>\n        </div>\n      </Card>\n\n      {/* Step Content with Progressive Disclosure */}\n      {currentStep === 'setup' && (\n        <Card>\n          <div className=\"p-6\">\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <Target className=\"w-5 h-5 text-purple-600\" />\n              <h3 className=\"text-lg font-semibold\">Step 1: Patient Setup & AI Insights</h3>\n            </div>\n            <p className=\"text-gray-600 mb-4\">\n              Review your patient's genomic profile and get AI-powered insights to guide treatment planning.\n            </p>\n            {!genomicProfile && (\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <Activity className=\"w-4 h-4 text-blue-600\" />\n                  <span className=\"text-sm font-medium text-blue-800\">Loading genomic data and generating insights...</span>\n                </div>\n                <p className=\"text-xs text-blue-600 mt-1\">This usually takes 10-15 seconds</p>\n              </div>\n            )}\n          </div>\n        </Card>\n      )}\n\n      {/* AI Insights Panel - Only show in setup step */}\n      {currentStep === 'setup' && (\n        <Card>\n        <div className=\"p-6\">\n          <div className=\"flex items-center space-x-2 mb-4\">\n            <Zap className=\"w-5 h-5 text-yellow-500\" />\n            <h3 className=\"text-lg font-semibold\">AI-Generated Insights</h3>\n            <Tooltip \n              content=\"These insights are generated by analyzing your patient's genomic profile against current clinical evidence and treatment databases.\"\n              type=\"help\"\n              iconOnly\n            />\n          </div>\n          <div className=\"space-y-3\">\n            {aiInsights.map((insight, index) => (\n              <div key={index} className=\"flex items-start space-x-3 p-3 bg-gray-50 rounded-lg\">\n                {getPriorityIcon(insight.priority)}\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-1\">\n                    <h4 className=\"font-medium text-gray-900\">{insight.title}</h4>\n                    <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full\">\n                      {insight.confidence}% confidence\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-1\">{insight.description}</p>\n                  <p className=\"text-xs text-gray-500\">Source: {insight.source}</p>\n                </div>\n                {insight.actionable && (\n                  <button className=\"text-sm bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700\">\n                    Act\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </Card>\n      )}\n\n      {/* Simulation Step */}\n      {currentStep === 'simulate' && (\n        <Card>\n          <div className=\"p-6\">\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <Calculator className=\"w-5 h-5 text-purple-600\" />\n              <h3 className=\"text-lg font-semibold\">Step 3: Treatment Simulation</h3>\n            </div>\n            <p className=\"text-gray-600 mb-6\">\n              Explore different treatment scenarios and see predicted outcomes for various modifications.\n            </p>\n          </div>\n        </Card>\n      )}\n\n      {/* Interactive Treatment Simulator - Only show in simulate step */}\n      {currentStep === 'simulate' && (\n        <Card>\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-3\">\n              <Calculator className=\"w-6 h-6 text-purple-600\" />\n              <div>\n                <h3 className=\"text-xl font-semibold text-gray-900\">Treatment Simulator</h3>\n                <p className=\"text-sm text-gray-600\">Explore \"what-if\" scenarios and optimize treatment plans</p>\n              </div>\n            </div>\n            <button\n              onClick={() => setShowSimulator(!showSimulator)}\n              className={`px-4 py-2 rounded-lg transition-colors ${\n                showSimulator \n                  ? 'bg-purple-600 text-white hover:bg-purple-700' \n                  : 'bg-purple-100 text-purple-700 hover:bg-purple-200'\n              }`}\n            >\n              {showSimulator ? 'Hide Simulator' : 'Open Simulator'}\n            </button>\n          </div>\n\n          {showSimulator && (\n            <div className=\"space-y-6\">\n              {/* Simulation Controls */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-3\">Scenario Parameters</h4>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Dosage Adjustment: {scenarioParameters.dosageReduction}%\n                      </label>\n                      <input\n                        type=\"range\"\n                        min=\"-50\"\n                        max=\"25\"\n                        step=\"5\"\n                        value={scenarioParameters.dosageReduction}\n                        onChange={(e) => setScenarioParameters(prev => ({ \n                          ...prev, \n                          dosageReduction: Number(e.target.value) \n                        }))}\n                        className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n                      />\n                      <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                        <span>-50% (Reduce)</span>\n                        <span>0% (Standard)</span>\n                        <span>+25% (Intensify)</span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <label className=\"flex items-center space-x-2\">\n                        <input\n                          type=\"checkbox\"\n                          checked={scenarioParameters.addSupportiveCare}\n                          onChange={(e) => setScenarioParameters(prev => ({ \n                            ...prev, \n                            addSupportiveCare: e.target.checked \n                          }))}\n                          className=\"rounded border-gray-300 text-purple-600 focus:ring-purple-500\"\n                        />\n                        <span className=\"text-sm text-gray-700\">Add enhanced supportive care</span>\n                      </label>\n                      \n                      <label className=\"flex items-center space-x-2\">\n                        <input\n                          type=\"checkbox\"\n                          checked={scenarioParameters.alternativeSchedule}\n                          onChange={(e) => setScenarioParameters(prev => ({ \n                            ...prev, \n                            alternativeSchedule: e.target.checked \n                          }))}\n                          className=\"rounded border-gray-300 text-purple-600 focus:ring-purple-500\"\n                        />\n                        <span className=\"text-sm text-gray-700\">Modified infusion schedule</span>\n                      </label>\n                      \n                      <label className=\"flex items-center space-x-2\">\n                        <input\n                          type=\"checkbox\"\n                          checked={scenarioParameters.combinationTherapy}\n                          onChange={(e) => setScenarioParameters(prev => ({ \n                            ...prev, \n                            combinationTherapy: e.target.checked \n                          }))}\n                          className=\"rounded border-gray-300 text-purple-600 focus:ring-purple-500\"\n                        />\n                        <span className=\"text-sm text-gray-700\">Add combination therapy</span>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-3\">Simulation Controls</h4>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex space-x-3\">\n                      <button\n                        onClick={() => selectedProtocol && generateScenarios(selectedProtocol)}\n                        disabled={!selectedProtocol || loading}\n                        className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                      >\n                        <Settings className=\"w-4 h-4\" />\n                        <span>Generate Scenarios</span>\n                      </button>\n                      \n                      <button\n                        onClick={resetSimulation}\n                        disabled={!simulationState.scenarios.length}\n                        className=\"flex items-center space-x-2 px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 disabled:opacity-50\"\n                      >\n                        <RotateCcw className=\"w-4 h-4\" />\n                        <span>Reset</span>\n                      </button>\n                    </div>\n\n                    {simulationState.isRunning && (\n                      <div>\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"text-sm font-medium text-gray-700\">\n                            Simulation Progress\n                          </span>\n                          <span className=\"text-sm text-gray-600\">\n                            {simulationState.currentStep}/{simulationState.totalSteps}\n                          </span>\n                        </div>\n                        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                          <div \n                            className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n                            style={{ \n                              width: `${(simulationState.currentStep / simulationState.totalSteps) * 100}%` \n                            }}\n                          />\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              {/* Scenario Results */}\n              {simulationState.scenarios.length > 0 && (\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-4\">Generated Scenarios</h4>\n                  <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n                    {simulationState.scenarios.map((scenario) => (\n                      <div key={scenario.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n                        <div className=\"flex items-start justify-between mb-3\">\n                          <div>\n                            <h5 className=\"font-medium text-gray-900\">{scenario.name}</h5>\n                            <p className=\"text-sm text-gray-600 mt-1\">{scenario.description}</p>\n                          </div>\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                            scenario.riskProfile.severity === 'low' \n                              ? 'bg-green-100 text-green-800'\n                              : scenario.riskProfile.severity === 'medium'\n                              ? 'bg-yellow-100 text-yellow-800'\n                              : 'bg-red-100 text-red-800'\n                          }`}>\n                            {scenario.riskProfile.severity} risk\n                          </span>\n                        </div>\n\n                        <div className=\"space-y-2 mb-4\">\n                          <div className=\"flex justify-between text-sm\">\n                            <span className=\"text-gray-600\">Response Rate:</span>\n                            <span className=\"font-medium text-green-600\">{scenario.predictedOutcomes.responseRate}%</span>\n                          </div>\n                          <div className=\"flex justify-between text-sm\">\n                            <span className=\"text-gray-600\">Quality of Life:</span>\n                            <span className=\"font-medium text-blue-600\">{scenario.predictedOutcomes.qualityOfLife}%</span>\n                          </div>\n                          <div className=\"flex justify-between text-sm\">\n                            <span className=\"text-gray-600\">Toxicity Reduction:</span>\n                            <span className={`font-medium ${scenario.predictedOutcomes.toxicityReduction >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                              {scenario.predictedOutcomes.toxicityReduction >= 0 ? '+' : ''}{scenario.predictedOutcomes.toxicityReduction}%\n                            </span>\n                          </div>\n                          <div className=\"flex justify-between text-sm\">\n                            <span className=\"text-gray-600\">Confidence:</span>\n                            <span className=\"font-medium text-purple-600\">{scenario.predictedOutcomes.confidence}%</span>\n                          </div>\n                        </div>\n\n                        <button\n                          onClick={() => runSimulation(scenario)}\n                          disabled={simulationState.isRunning}\n                          className=\"w-full flex items-center justify-center space-x-2 px-3 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50\"\n                        >\n                          <Play className=\"w-4 h-4\" />\n                          <span>Run Simulation</span>\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Comparison View */}\n              {simulationState.comparison && (\n                <div>\n                  <h4 className=\"font-semibold text-gray-900 mb-4\">Scenario Comparison</h4>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"min-w-full border border-gray-200 rounded-lg\">\n                      <thead className=\"bg-gray-50\">\n                        <tr>\n                          <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Metric\n                          </th>\n                          <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                            Baseline\n                          </th>\n                          {simulationState.comparison.scenarios.map((scenario) => (\n                            <th key={scenario.id} className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                              {scenario.name}\n                            </th>\n                          ))}\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\n                        <tr>\n                          <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">Response Rate</td>\n                          <td className=\"px-4 py-3 text-sm text-gray-600\">{simulationState.comparison.baseline.expectedOutcome.responseRate}%</td>\n                          {simulationState.comparison.scenarios.map((scenario) => (\n                            <td key={`${scenario.id}-response`} className=\"px-4 py-3 text-sm text-gray-600\">\n                              {scenario.predictedOutcomes.responseRate}%\n                            </td>\n                          ))}\n                        </tr>\n                        <tr>\n                          <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">Quality of Life</td>\n                          <td className=\"px-4 py-3 text-sm text-gray-600\">{simulationState.comparison.baseline.expectedOutcome.qualityOfLife}%</td>\n                          {simulationState.comparison.scenarios.map((scenario) => (\n                            <td key={`${scenario.id}-qol`} className=\"px-4 py-3 text-sm text-gray-600\">\n                              {scenario.predictedOutcomes.qualityOfLife}%\n                            </td>\n                          ))}\n                        </tr>\n                        <tr>\n                          <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">Survival Benefit</td>\n                          <td className=\"px-4 py-3 text-sm text-gray-600\">{simulationState.comparison.baseline.expectedOutcome.survivalBenefit}%</td>\n                          {simulationState.comparison.scenarios.map((scenario) => (\n                            <td key={`${scenario.id}-survival`} className=\"px-4 py-3 text-sm text-gray-600\">\n                              {scenario.predictedOutcomes.survivalBenefit}%\n                            </td>\n                          ))}\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </Card>\n      )}\n\n      {/* Genomic Biomarker Analysis */}\n      <Card>\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-3\">\n              <Microscope className=\"w-6 h-6 text-indigo-600\" />\n              <div>\n                <h3 className=\"text-xl font-semibold text-gray-900\">Genomic Biomarker Analysis</h3>\n                <p className=\"text-sm text-gray-600\">Comprehensive pharmacogenomics and biomarker assessment</p>\n              </div>\n            </div>\n            <div className=\"flex space-x-2\">\n              <button\n                onClick={() => selectedProtocol && analyzePharmacogenomics(selectedProtocol.drugs.map(d => d.name))}\n                disabled={!selectedProtocol || genomicAnalysisLoading}\n                className=\"flex items-center space-x-2 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 disabled:opacity-50\"\n              >\n                <FlaskConical className=\"w-4 h-4\" />\n                <span>{genomicAnalysisLoading ? 'Analyzing...' : 'Analyze Genomics'}</span>\n              </button>\n              <button\n                onClick={() => setShowGenomicAnalysis(!showGenomicAnalysis)}\n                className={`px-4 py-2 rounded-lg transition-colors ${\n                  showGenomicAnalysis \n                    ? 'bg-indigo-600 text-white hover:bg-indigo-700' \n                    : 'bg-indigo-100 text-indigo-700 hover:bg-indigo-200'\n                }`}\n              >\n                {showGenomicAnalysis ? 'Hide Analysis' : 'Show Analysis'}\n              </button>\n            </div>\n          </div>\n\n          {genomicAnalysisLoading && (\n            <div className=\"flex items-center justify-center py-8\">\n              <LoadingSpinner size=\"lg\" />\n              <span className=\"ml-3 text-lg text-gray-600\">Running comprehensive pharmacogenomic analysis...</span>\n            </div>\n          )}\n\n          {showGenomicAnalysis && genomicProfile && (\n            <div className=\"space-y-6\">\n              {/* Pharmacogenomic Overview */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"bg-gradient-to-r from-indigo-50 to-blue-50 p-4 rounded-lg border border-indigo-200\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <Dna className=\"w-5 h-5 text-indigo-600\" />\n                    <h4 className=\"font-semibold text-indigo-900\">Metabolizer Profile</h4>\n                  </div>\n                  <div className=\"text-2xl font-bold text-indigo-700\">\n                    {Object.keys(genomicProfile.pharmacogenomics.metabolizerStatus).length}\n                  </div>\n                  <div className=\"text-sm text-indigo-600\">Genes analyzed</div>\n                </div>\n                \n                <div className=\"bg-gradient-to-r from-yellow-50 to-orange-50 p-4 rounded-lg border border-yellow-200\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-600\" />\n                    <h4 className=\"font-semibold text-yellow-900\">HLA Risks</h4>\n                  </div>\n                  <div className=\"text-2xl font-bold text-yellow-700\">\n                    {genomicProfile.pharmacogenomics.hlaRisks.length}\n                  </div>\n                  <div className=\"text-sm text-yellow-600\">Risk alleles detected</div>\n                </div>\n                \n                <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 p-4 rounded-lg border border-green-200\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <Shield className=\"w-5 h-5 text-green-600\" />\n                    <h4 className=\"font-semibold text-green-900\">Risk Score</h4>\n                  </div>\n                  <div className=\"text-2xl font-bold text-green-700\">\n                    {(genomicProfile.pharmacogenomics.overallRiskScore * 100).toFixed(0)}%\n                  </div>\n                  <div className=\"text-sm text-green-600\">Overall safety</div>\n                </div>\n              </div>\n\n              {/* Metabolizer Status Details */}\n              <div>\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                  <Database className=\"w-5 h-5 text-purple-600 mr-2\" />\n                  Pharmacogenomic Profile\n                </h4>\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                  {Object.entries(genomicProfile.pharmacogenomics.metabolizerStatus).map(([gene, data]) => (\n                    <div key={gene} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div>\n                          <h5 className=\"font-semibold text-gray-900\">{data.gene}</h5>\n                          <div className=\"flex items-center space-x-2 mt-1\">\n                            <span className=\"text-sm text-gray-600\">Genotype: {data.genotype}</span>\n                            <span className={`text-xs font-medium px-2 py-1 rounded ${getMetabolizerColor(data.phenotype)}`}>\n                              {data.phenotype} Metabolizer\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-lg font-bold text-purple-600\">{data.activityScore}</div>\n                          <div className=\"text-xs text-gray-500\">Activity Score</div>\n                        </div>\n                      </div>\n\n                      <div className=\"mb-3\">\n                        <h6 className=\"text-sm font-medium text-gray-700 mb-1\">Clinical Implications:</h6>\n                        <ul className=\"text-xs text-gray-600 space-y-1\">\n                          {data.clinicalImplications.map((implication, index) => (\n                            <li key={index} className=\"flex items-start space-x-1\">\n                              <span className=\"text-gray-400 mt-1\">•</span>\n                              <span>{implication}</span>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n\n                      <div>\n                        <h6 className=\"text-sm font-medium text-gray-700 mb-2\">Drug Recommendations:</h6>\n                        <div className=\"space-y-2\">\n                          {data.drugRecommendations.slice(0, 2).map((rec, index) => (\n                            <div key={index} className=\"p-2 bg-gray-50 rounded text-xs\">\n                              <div className=\"flex items-center justify-between mb-1\">\n                                <span className=\"font-medium\">{rec.drug}</span>\n                                <span className={`px-2 py-0.5 rounded ${getRecommendationColor(rec.recommendation)}`}>\n                                  {rec.recommendation}\n                                </span>\n                              </div>\n                              <p className=\"text-gray-600\">{rec.rationale}</p>\n                              {rec.dosageAdjustment && (\n                                <p className=\"text-indigo-600 font-medium mt-1\">Dose: {rec.dosageAdjustment}</p>\n                              )}\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* HLA Risk Assessment */}\n              <div>\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                  <AlertTriangle className=\"w-5 h-5 text-red-600 mr-2\" />\n                  HLA-Associated Drug Risks\n                </h4>\n                <div className=\"space-y-3\">\n                  {genomicProfile.pharmacogenomics.hlaRisks.map((risk, index) => (\n                    <div key={index} className={`p-4 rounded-lg border-2 ${getRiskLevelColor(risk.riskLevel)}`}>\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div>\n                          <h5 className=\"font-semibold text-gray-900\">{risk.allele}</h5>\n                          <div className=\"flex items-center space-x-2 mt-1\">\n                            <span className=\"text-sm text-gray-600\">Risk Type: {risk.riskType}</span>\n                            <span className={`text-xs font-medium px-2 py-1 rounded ${getRiskLevelColor(risk.riskLevel)}`}>\n                              {risk.riskLevel} Risk\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-sm font-medium text-gray-700\">Affected Drugs:</div>\n                          <div className=\"text-xs text-gray-600\">{risk.drugs.join(', ')}</div>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <h6 className=\"text-sm font-medium text-gray-700 mb-1\">Clinical Recommendations:</h6>\n                        <ul className=\"text-sm text-gray-600 space-y-1\">\n                          {risk.recommendations.map((rec, recIndex) => (\n                            <li key={recIndex} className=\"flex items-start space-x-2\">\n                              <CheckCircle className=\"w-4 h-4 text-blue-500 flex-shrink-0 mt-0.5\" />\n                              <span>{rec}</span>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Other Biomarkers */}\n              {genomicProfile.pharmacogenomics.otherBiomarkers.length > 0 && (\n                <div>\n                  <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                    <Beaker className=\"w-5 h-5 text-green-600 mr-2\" />\n                    Additional Biomarkers\n                  </h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {genomicProfile.pharmacogenomics.otherBiomarkers.map((biomarker, index) => (\n                      <div key={index} className=\"border rounded-lg p-4\">\n                        <div className=\"flex items-start justify-between mb-2\">\n                          <h5 className=\"font-semibold text-gray-900\">{biomarker.gene}</h5>\n                          <span className=\"text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded\">\n                            {biomarker.variant}\n                          </span>\n                        </div>\n                        <p className=\"text-sm text-gray-600 mb-2\">{biomarker.impact}</p>\n                        <div className=\"text-xs text-gray-500 mb-2\">\n                          <strong>Affected drugs:</strong> {biomarker.affectedDrugs.join(', ')}\n                        </div>\n                        <div className=\"p-2 bg-blue-50 rounded text-xs text-blue-700\">\n                          <strong>Recommendation:</strong> {biomarker.recommendation}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Pharmacogenomic Analysis Results */}\n              {pharmacogenomicResults && (\n                <div>\n                  <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                    <FileText className=\"w-5 h-5 text-purple-600 mr-2\" />\n                    Treatment-Specific Analysis\n                  </h4>\n                  <div className=\"space-y-4\">\n                    {/* Clinical Decision Support Alerts */}\n                    {pharmacogenomicResults.clinicalDecisionSupport.alerts.length > 0 && (\n                      <div>\n                        <h5 className=\"font-medium text-gray-900 mb-2\">Clinical Alerts:</h5>\n                        <div className=\"space-y-2\">\n                          {pharmacogenomicResults.clinicalDecisionSupport.alerts.map((alert: any, index: number) => (\n                            <div key={index} className={`p-3 rounded-lg border-l-4 ${\n                              alert.level === 'High' ? 'bg-red-50 border-red-500 text-red-700' :\n                              alert.level === 'Medium' ? 'bg-yellow-50 border-yellow-500 text-yellow-700' :\n                              'bg-blue-50 border-blue-500 text-blue-700'\n                            }`}>\n                              <div className=\"flex items-start space-x-2\">\n                                <AlertTriangle className=\"w-4 h-4 flex-shrink-0 mt-0.5\" />\n                                <div>\n                                  <p className=\"font-medium\">{alert.message}</p>\n                                  <p className=\"text-sm mt-1\">Action: {alert.action}</p>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Drug-Specific Analysis */}\n                    <div>\n                      <h5 className=\"font-medium text-gray-900 mb-2\">Drug-Specific Genomic Assessment:</h5>\n                      <div className=\"overflow-x-auto\">\n                        <table className=\"min-w-full border border-gray-200 rounded-lg\">\n                          <thead className=\"bg-gray-50\">\n                            <tr>\n                              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Drug</th>\n                              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Risk Level</th>\n                              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Efficacy</th>\n                              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Toxicity Risk</th>\n                              <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Dosing</th>\n                            </tr>\n                          </thead>\n                          <tbody className=\"bg-white divide-y divide-gray-200\">\n                            {pharmacogenomicResults.drugAnalysis.map((analysis: any, index: number) => (\n                              <tr key={index}>\n                                <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">{analysis.drug}</td>\n                                <td className=\"px-4 py-3\">\n                                  <span className={`text-xs font-medium px-2 py-1 rounded ${getRiskLevelColor(analysis.riskAssessment.overallRisk)}`}>\n                                    {analysis.riskAssessment.overallRisk}\n                                  </span>\n                                </td>\n                                <td className=\"px-4 py-3 text-sm text-gray-600\">{analysis.riskAssessment.efficacyPrediction}%</td>\n                                <td className=\"px-4 py-3 text-sm text-gray-600\">{analysis.riskAssessment.toxicityRisk}%</td>\n                                <td className=\"px-4 py-3 text-sm text-gray-600\">\n                                  {pharmacogenomicResults.clinicalDecisionSupport.dosingGuidance.find((d: any) => d.drug === analysis.drug)?.recommendedDose || 'Standard'}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </Card>\n\n      {/* Clinical Trial Integration */}\n      <Card>\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-3\">\n              <TestTube className=\"w-6 h-6 text-green-600\" />\n              <div>\n                <h3 className=\"text-xl font-semibold text-gray-900\">Clinical Trial Matcher</h3>\n                <p className=\"text-sm text-gray-600\">Find trials matching your treatment plan and patient profile</p>\n              </div>\n            </div>\n            <div className=\"flex space-x-2\">\n              <button\n                onClick={() => searchMatchingTrials(selectedProtocol)}\n                disabled={!selectedProtocol || trialMatchLoading}\n                className=\"flex items-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50\"\n              >\n                <TestTube className=\"w-4 h-4\" />\n                <span>{trialMatchLoading ? 'Searching...' : 'Find Matching Trials'}</span>\n              </button>\n              <button\n                onClick={() => setShowTrialMatcher(!showTrialMatcher)}\n                className={`px-4 py-2 rounded-lg transition-colors ${\n                  showTrialMatcher \n                    ? 'bg-green-600 text-white hover:bg-green-700' \n                    : 'bg-green-100 text-green-700 hover:bg-green-200'\n                }`}\n              >\n                {showTrialMatcher ? 'Hide Trials' : 'Show Trial Details'}\n              </button>\n            </div>\n          </div>\n\n          {/* Trial Search Summary */}\n          {trialMatchResult && (\n            <div className=\"mb-6 p-4 bg-green-50 rounded-lg border border-green-200\">\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-green-700\">{trialMatchResult.totalMatches}</div>\n                  <div className=\"text-sm text-green-600\">Total Matches</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-blue-700\">{trialMatchResult.highConfidenceMatches}</div>\n                  <div className=\"text-sm text-blue-600\">High Confidence</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-purple-700\">{trialMatchResult.alternativeTrials.length}</div>\n                  <div className=\"text-sm text-purple-600\">Alternative Options</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-orange-700\">{trialMatchResult.eligibilityGaps.length}</div>\n                  <div className=\"text-sm text-orange-600\">Eligibility Gaps</div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {trialMatchLoading && (\n            <div className=\"flex items-center justify-center py-8\">\n              <LoadingSpinner size=\"lg\" />\n              <span className=\"ml-3 text-lg text-gray-600\">Analyzing patient profile and searching trials...</span>\n            </div>\n          )}\n\n          {showTrialMatcher && trialMatchResult && (\n            <div className=\"space-y-6\">\n              {/* High Confidence Matches */}\n              <div>\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                  <Star className=\"w-5 h-5 text-yellow-500 mr-2\" />\n                  High Confidence Matches ({trialMatchResult.highConfidenceMatches})\n                </h4>\n                <div className=\"grid grid-cols-1 gap-4\">\n                  {trialMatchResult.matchedTrials.filter(t => t.eligibilityScore >= 90).map((trial) => (\n                    <div key={trial.nct_id} className=\"border border-green-200 rounded-lg p-4 bg-green-50\">\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-2\">\n                            <span className=\"font-mono text-sm text-blue-600\">{trial.nct_id}</span>\n                            <span className={`text-xs font-medium px-2 py-1 rounded ${getTrialPhaseColor(trial.phase)}`}>\n                              {trial.phase}\n                            </span>\n                            <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded\">\n                              {trial.status}\n                            </span>\n                          </div>\n                          <h5 className=\"font-semibold text-gray-900 mb-2\">{trial.title}</h5>\n                          <p className=\"text-sm text-gray-600 mb-2\">{trial.condition}</p>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className={`text-lg font-bold ${getEligibilityScoreColor(trial.eligibilityScore)}`}>\n                            {trial.eligibilityScore}%\n                          </div>\n                          <div className=\"text-xs text-gray-500\">Match Score</div>\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n                        <div>\n                          <h6 className=\"text-sm font-medium text-gray-700 mb-1\">Location & Contact:</h6>\n                          <div className=\"text-sm text-gray-600\">\n                            <div className=\"flex items-center space-x-1\">\n                              <MapPin className=\"w-3 h-3\" />\n                              <span>{trial.location.name}</span>\n                            </div>\n                            <div>{trial.location.city}, {trial.location.state}</div>\n                            {trial.location.distance && (\n                              <div className=\"text-blue-600\">{trial.location.distance} km away</div>\n                            )}\n                            <div className=\"mt-1\">\n                              <span className=\"font-medium\">{trial.contact.name}</span>\n                              <div>{trial.contact.phone}</div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div>\n                          <h6 className=\"text-sm font-medium text-gray-700 mb-1\">Enrollment Status:</h6>\n                          <div className=\"text-sm text-gray-600\">\n                            <div className=\"flex items-center space-x-1\">\n                              <Users className=\"w-3 h-3\" />\n                              <span>{trial.enrollmentStatus.current}/{trial.enrollmentStatus.target} enrolled</span>\n                            </div>\n                            <div className=\"flex items-center space-x-1\">\n                              <Calendar className=\"w-3 h-3\" />\n                              <span>Est. completion: {trial.enrollmentStatus.estimatedCompletion}</span>\n                            </div>\n                            <div className=\"w-full bg-gray-200 rounded-full h-2 mt-1\">\n                              <div \n                                className=\"bg-green-600 h-2 rounded-full\"\n                                style={{ \n                                  width: `${(trial.enrollmentStatus.current / trial.enrollmentStatus.target) * 100}%` \n                                }}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"mb-4\">\n                        <h6 className=\"text-sm font-medium text-gray-700 mb-1\">Why this trial matches:</h6>\n                        <div className=\"flex flex-wrap gap-2\">\n                          {trial.matchReasons.map((reason, index) => (\n                            <span key={index} className=\"text-xs bg-blue-50 text-blue-700 px-2 py-1 rounded\">\n                              {reason}\n                            </span>\n                          ))}\n                        </div>\n                      </div>\n\n                      <div className=\"mb-4\">\n                        <h6 className=\"text-sm font-medium text-gray-700 mb-1\">Key Eligibility:</h6>\n                        <div className=\"grid grid-cols-2 gap-2 text-xs text-gray-600\">\n                          <div><strong>Age:</strong> {trial.keyEligibility.ageRange}</div>\n                          <div><strong>Performance:</strong> {trial.keyEligibility.performanceStatus}</div>\n                          <div><strong>Prior Tx:</strong> {trial.keyEligibility.priorTreatments}</div>\n                          <div><strong>Biomarkers:</strong> {trial.keyEligibility.biomarkerRequirements.join(', ')}</div>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-center justify-between pt-3 border-t border-green-200\">\n                        <div className=\"flex space-x-2\">\n                          <button\n                            onClick={() => window.open(`tel:${trial.contact.phone}`)}\n                            className=\"flex items-center space-x-1 px-3 py-1 bg-green-600 text-white rounded text-sm hover:bg-green-700\"\n                          >\n                            <Phone className=\"w-3 h-3\" />\n                            <span>Call</span>\n                          </button>\n                          <button\n                            onClick={() => window.open(`mailto:${trial.contact.email}`)}\n                            className=\"flex items-center space-x-1 px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700\"\n                          >\n                            <Mail className=\"w-3 h-3\" />\n                            <span>Email</span>\n                          </button>\n                          <button\n                            onClick={() => window.open(`https://clinicaltrials.gov/ct2/show/${trial.nct_id}`, '_blank')}\n                            className=\"flex items-center space-x-1 px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-700\"\n                          >\n                            <ExternalLink className=\"w-3 h-3\" />\n                            <span>View Details</span>\n                          </button>\n                        </div>\n                        <button\n                          onClick={() => setSelectedTrial(selectedTrial?.nct_id === trial.nct_id ? null : trial)}\n                          className=\"px-3 py-1 bg-purple-100 text-purple-700 rounded text-sm hover:bg-purple-200\"\n                        >\n                          {selectedTrial?.nct_id === trial.nct_id ? 'Hide Details' : 'Show Full Details'}\n                        </button>\n                      </div>\n\n                      {/* Expanded Trial Details */}\n                      {selectedTrial?.nct_id === trial.nct_id && (\n                        <div className=\"mt-4 pt-4 border-t border-green-200 space-y-3\">\n                          <div>\n                            <h6 className=\"text-sm font-medium text-gray-700 mb-1\">Interventions:</h6>\n                            <div className=\"flex flex-wrap gap-2\">\n                              {trial.interventions.map((intervention, index) => (\n                                <span key={index} className=\"text-xs bg-purple-50 text-purple-700 px-2 py-1 rounded\">\n                                  {intervention}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                          <div>\n                            <h6 className=\"text-sm font-medium text-gray-700 mb-1\">Required Biomarkers:</h6>\n                            <div className=\"flex flex-wrap gap-2\">\n                              {trial.biomarkers.map((biomarker, index) => (\n                                <span key={index} className=\"text-xs bg-yellow-50 text-yellow-700 px-2 py-1 rounded\">\n                                  {biomarker}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Alternative Trials */}\n              {trialMatchResult.alternativeTrials.length > 0 && (\n                <div>\n                  <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                    <Filter className=\"w-5 h-5 text-blue-500 mr-2\" />\n                    Alternative Options ({trialMatchResult.alternativeTrials.length})\n                  </h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {trialMatchResult.alternativeTrials.map((trial) => (\n                      <div key={trial.nct_id} className=\"border border-gray-200 rounded-lg p-4\">\n                        <div className=\"flex items-start justify-between mb-3\">\n                          <div>\n                            <div className=\"flex items-center space-x-2 mb-1\">\n                              <span className=\"font-mono text-sm text-blue-600\">{trial.nct_id}</span>\n                              <span className={`text-xs font-medium px-2 py-1 rounded ${getTrialPhaseColor(trial.phase)}`}>\n                                {trial.phase}\n                              </span>\n                            </div>\n                            <h5 className=\"font-medium text-gray-900 text-sm\">{trial.title}</h5>\n                          </div>\n                          <div className={`text-lg font-bold ${getEligibilityScoreColor(trial.eligibilityScore)}`}>\n                            {trial.eligibilityScore}%\n                          </div>\n                        </div>\n                        <div className=\"text-sm text-gray-600 mb-2\">\n                          <div>{trial.location.city}, {trial.location.state}</div>\n                          {trial.location.distance && (\n                            <div className=\"text-blue-600\">{trial.location.distance} km away</div>\n                          )}\n                        </div>\n                        <div className=\"flex justify-end\">\n                          <button\n                            onClick={() => window.open(`https://clinicaltrials.gov/ct2/show/${trial.nct_id}`, '_blank')}\n                            className=\"text-xs text-blue-600 hover:text-blue-800\"\n                          >\n                            View Details →\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Eligibility Gaps */}\n              {trialMatchResult.eligibilityGaps.length > 0 && (\n                <div>\n                  <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n                    <AlertTriangle className=\"w-5 h-5 text-orange-500 mr-2\" />\n                    Eligibility Considerations ({trialMatchResult.eligibilityGaps.length})\n                  </h4>\n                  <div className=\"space-y-3\">\n                    {trialMatchResult.eligibilityGaps.map((gap, index) => (\n                      <div key={index} className=\"border border-orange-200 rounded-lg p-4 bg-orange-50\">\n                        <div className=\"flex items-start space-x-3\">\n                          <AlertTriangle className=\"w-5 h-5 text-orange-500 flex-shrink-0 mt-0.5\" />\n                          <div className=\"flex-1\">\n                            <h5 className=\"font-medium text-gray-900 mb-1\">{gap.criteria}</h5>\n                            <div className=\"text-sm text-gray-600 mb-2\">\n                              <div><strong>Current:</strong> {gap.currentValue}</div>\n                              <div><strong>Required:</strong> {gap.requiredValue}</div>\n                            </div>\n                            <div className=\"text-sm text-orange-700 bg-orange-100 p-2 rounded\">\n                              <strong>Action needed:</strong> {gap.actionNeeded}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </Card>\n\n      {/* Protocol Review Step */}\n      {currentStep === 'review' && (\n        <Card>\n          <div className=\"p-6\">\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <FileText className=\"w-5 h-5 text-purple-600\" />\n              <h3 className=\"text-lg font-semibold\">Step 2: Protocol Review & Selection</h3>\n            </div>\n            <p className=\"text-gray-600 mb-4\">\n              Choose the most suitable treatment protocol based on genomic compatibility and expected outcomes.\n            </p>\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <CheckCircle className=\"w-4 h-4 text-green-600\" />\n                <span className=\"text-sm font-medium text-green-800\">Ready to Review Protocols</span>\n              </div>\n              <p className=\"text-xs text-green-600\">\n                {protocols.length} protocols available • Look for high genomic compatibility scores ({'>'}80%) • Consider evidence levels I-II for best outcomes\n              </p>\n            </div>\n          </div>\n        </Card>\n      )}\n\n      {/* Treatment Protocols - Only show in review step */}\n      {currentStep === 'review' && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {protocols.map((protocol) => (\n          <Card \n            key={protocol.id}\n            className={`cursor-pointer transition-all ${\n              selectedProtocol?.id === protocol.id ? 'ring-2 ring-blue-500 bg-blue-50' : 'hover:shadow-lg'\n            }`}\n            onClick={() => {\n              setSelectedProtocol(protocol);\n              generatePredictions(protocol);\n            }}\n          >\n            <div className=\"p-6\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">{protocol.name}</h3>\n                  <div className=\"flex items-center space-x-2 mt-1\">\n                    <span className={`text-xs px-2 py-1 rounded-full ${getEvidenceBadge(protocol.evidenceLevel)}`}>\n                      Evidence Level {protocol.evidenceLevel}\n                    </span>\n                    <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">\n                      {protocol.genomicCompatibility}% genomic match\n                    </span>\n                  </div>\n                </div>\n                <Target className=\"w-6 h-6 text-blue-600\" />\n              </div>\n\n              <div className=\"space-y-3\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Response Rate</p>\n                    <p className=\"text-lg font-semibold text-green-600\">{protocol.expectedOutcome.responseRate}%</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-600\">Confidence</p>\n                    <p className=\"text-lg font-semibold text-blue-600\">{protocol.expectedOutcome.confidence}%</p>\n                  </div>\n                </div>\n\n                <div>\n                  <p className=\"text-sm text-gray-600 mb-2\">Key Drugs:</p>\n                  <div className=\"space-y-1\">\n                    {protocol.drugs.slice(0, 2).map((drug, index) => (\n                      <div key={index} className=\"flex items-center justify-between text-sm\">\n                        <span className=\"text-gray-900\">{drug.name}</span>\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-green-600\">{drug.efficacyPrediction}%</span>\n                          <Shield className=\"w-3 h-3 text-blue-500\" />\n                          <span className=\"text-blue-600\">{drug.safetyScore}%</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"flex items-center justify-between pt-2 border-t\">\n                  <span className=\"text-sm text-gray-600\">Duration: {protocol.duration}</span>\n                  <span className=\"text-sm font-medium text-gray-900\">${protocol.cost.toLocaleString()}</span>\n                </div>\n              </div>\n            </div>\n          </Card>\n        ))}\n        </div>\n      )}\n\n      {/* Detailed Protocol View - Only show in review step */}\n      {currentStep === 'review' && selectedProtocol && (\n        <Card>\n          <div className=\"p-6\">\n            <div className=\"flex items-center space-x-2 mb-6\">\n              <TrendingUp className=\"w-5 h-5 text-green-600\" />\n              <h3 className=\"text-xl font-semibold\">Detailed Protocol Analysis</h3>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              {/* Drug Details */}\n              <div className=\"lg:col-span-2\">\n                <h4 className=\"font-semibold text-gray-900 mb-3\">Genomic-Optimized Drug Regimen</h4>\n                <div className=\"space-y-4\">\n                  {selectedProtocol.drugs.map((drug, index) => (\n                    <div key={index} className=\"border rounded-lg p-4\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h5 className=\"font-medium text-gray-900\">{drug.name}</h5>\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-sm bg-green-100 text-green-800 px-2 py-1 rounded\">\n                            Efficacy: {drug.efficacyPrediction}%\n                          </span>\n                          <span className=\"text-sm bg-blue-100 text-blue-800 px-2 py-1 rounded\">\n                            Safety: {drug.safetyScore}%\n                          </span>\n                        </div>\n                      </div>\n                      <p className=\"text-sm text-gray-600 mb-1\">\n                        <strong>Dosing:</strong> {drug.dosing}\n                      </p>\n                      <p className=\"text-sm text-gray-600\">\n                        <strong>Genomic Optimization:</strong> {drug.genomicOptimization}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Outcome Predictions */}\n              <div>\n                <h4 className=\"font-semibold text-gray-900 mb-3\">Predicted Outcomes</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">\n                    <span className=\"text-sm text-green-700\">Response Rate</span>\n                    <span className=\"font-semibold text-green-800\">{selectedProtocol.expectedOutcome.responseRate}%</span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg\">\n                    <span className=\"text-sm text-blue-700\">Survival Benefit</span>\n                    <span className=\"font-semibold text-blue-800\">{selectedProtocol.expectedOutcome.survivalBenefit}%</span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-3 bg-purple-50 rounded-lg\">\n                    <span className=\"text-sm text-purple-700\">Quality of Life</span>\n                    <span className=\"font-semibold text-purple-800\">{selectedProtocol.expectedOutcome.qualityOfLife}%</span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-3 bg-yellow-50 rounded-lg\">\n                    <span className=\"text-sm text-yellow-700\">AI Confidence</span>\n                    <span className=\"font-semibold text-yellow-800\">{selectedProtocol.expectedOutcome.confidence}%</span>\n                  </div>\n                </div>\n\n                <div className=\"mt-4\">\n                  <h5 className=\"font-medium text-gray-900 mb-2\">Monitoring Requirements</h5>\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\n                    {selectedProtocol.monitoring.map((item, index) => (\n                      <li key={index} className=\"flex items-center space-x-2\">\n                        <CheckCircle className=\"w-3 h-3 text-green-500\" />\n                        <span>{item}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Card>\n      )}\n\n      {/* Results Step */}\n      {currentStep === 'results' && (\n        <Card>\n          <div className=\"p-6\">\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <BarChart3 className=\"w-5 h-5 text-purple-600\" />\n              <h3 className=\"text-lg font-semibold\">Step 4: Results & Analysis</h3>\n            </div>\n            <p className=\"text-gray-600 mb-6\">\n              View detailed predictions, outcomes, and visualizations for your selected treatment approach.\n            </p>\n          </div>\n        </Card>\n      )}\n\n      {/* Enhanced Visualization Panel - Only show in results step */}\n      {currentStep === 'results' && (\n      <Card>\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div className=\"flex items-center space-x-3\">\n              <BarChart3 className=\"w-6 h-6 text-indigo-600\" />\n              <div>\n                <h3 className=\"text-xl font-semibold text-gray-900\">Enhanced Visualizations</h3>\n                <p className=\"text-sm text-gray-600\">Interactive charts and analytics for treatment insights</p>\n              </div>\n            </div>\n            <div className=\"flex space-x-2\">\n              <button\n                onClick={() => setAnimatedCharts(!animatedCharts)}\n                className={`flex items-center space-x-2 px-3 py-2 rounded-lg text-sm ${\n                  animatedCharts ? 'bg-indigo-100 text-indigo-700' : 'bg-gray-100 text-gray-600'\n                }`}\n              >\n                <Eye className=\"w-4 h-4\" />\n                <span>Animations</span>\n              </button>\n              <button\n                onClick={() => setShowVisualizationPanel(!showVisualizationPanel)}\n                className={`px-4 py-2 rounded-lg transition-colors ${\n                  showVisualizationPanel \n                    ? 'bg-indigo-600 text-white hover:bg-indigo-700' \n                    : 'bg-indigo-100 text-indigo-700 hover:bg-indigo-200'\n                }`}\n              >\n                {showVisualizationPanel ? 'Hide Charts' : 'Show Charts'}\n              </button>\n            </div>\n          </div>\n\n          {showVisualizationPanel && (\n            <div className=\"space-y-6\">\n              {/* Visualization Selector */}\n              <div className=\"flex items-center space-x-2 mb-6\">\n                <span className=\"text-sm font-medium text-gray-700\">View:</span>\n                <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n                  {[\n                    { key: 'timeline', label: 'Timeline', icon: TimelineIcon },\n                    { key: 'outcomes', label: 'Outcomes', icon: Target },\n                    { key: 'biomarkers', label: 'Biomarkers', icon: Activity },\n                    { key: 'risk-matrix', label: 'Risk Matrix', icon: Layers }\n                  ].map(({ key, label, icon: Icon }) => (\n                    <button\n                      key={key}\n                      onClick={() => setSelectedVisualization(key as any)}\n                      className={`flex items-center space-x-2 px-3 py-2 rounded-md text-sm transition-colors ${\n                        selectedVisualization === key\n                          ? 'bg-white text-indigo-700 shadow-sm'\n                          : 'text-gray-600 hover:text-gray-900'\n                      }`}\n                    >\n                      <Icon className=\"w-4 h-4\" />\n                      <span>{label}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              {/* Visualization Content */}\n              <div className=\"transition-all duration-300\">\n                {selectedVisualization === 'timeline' && predictionResults && (\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"font-semibold text-gray-900\">Treatment Response Timeline</h4>\n                      <div className=\"flex space-x-2\">\n                        <button\n                          onClick={() => setTimelineView('overview')}\n                          className={`px-3 py-1 rounded text-sm ${\n                            timelineView === 'overview' ? 'bg-blue-100 text-blue-700' : 'text-gray-600'\n                          }`}\n                        >\n                          Overview\n                        </button>\n                        <button\n                          onClick={() => setTimelineView('detailed')}\n                          className={`px-3 py-1 rounded text-sm ${\n                            timelineView === 'detailed' ? 'bg-blue-100 text-blue-700' : 'text-gray-600'\n                          }`}\n                        >\n                          Detailed\n                        </button>\n                      </div>\n                    </div>\n                    <TimelineChart data={predictionResults} detailed={timelineView === 'detailed'} />\n                  </div>\n                )}\n\n                {selectedVisualization === 'outcomes' && selectedProtocol && (\n                  <div className=\"space-y-4\">\n                    <h4 className=\"font-semibold text-gray-900\">Outcome Predictions Analysis</h4>\n                    <OutcomePredictionChart protocol={selectedProtocol} />\n                  </div>\n                )}\n\n                {selectedVisualization === 'biomarkers' && predictionResults && (\n                  <div className=\"space-y-4\">\n                    <h4 className=\"font-semibold text-gray-900\">Biomarker Trend Analysis</h4>\n                    <BiomarkerTrendChart data={predictionResults} />\n                  </div>\n                )}\n\n                {selectedVisualization === 'risk-matrix' && genomicProfile && (\n                  <div className=\"space-y-4\">\n                    <h4 className=\"font-semibold text-gray-900\">Genomic Risk Assessment</h4>\n                    <RiskMatrix genomicProfile={genomicProfile} />\n                  </div>\n                )}\n              </div>\n\n              {/* Chart Controls */}\n              <div className=\"flex items-center justify-between pt-4 border-t border-gray-200\">\n                <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                  <div className=\"flex items-center space-x-2\">\n                    <MousePointer className=\"w-4 h-4\" />\n                    <span>Interactive elements enabled</span>\n                  </div>\n                  {chartInteractions && (\n                    <div className=\"flex items-center space-x-2\">\n                      <Maximize2 className=\"w-4 h-4\" />\n                      <span>Click elements for details</span>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"flex space-x-2\">\n                  <button\n                    onClick={() => setChartInteractions(!chartInteractions)}\n                    className={`px-3 py-1 rounded text-sm ${\n                      chartInteractions ? 'bg-green-100 text-green-700' : 'bg-gray-100 text-gray-600'\n                    }`}\n                  >\n                    {chartInteractions ? 'Interactive' : 'Static'}\n                  </button>\n                  <button\n                    className=\"px-3 py-1 bg-blue-100 text-blue-700 rounded text-sm hover:bg-blue-200\"\n                    onClick={() => {\n                      alert('Chart export functionality would be implemented here');\n                    }}\n                  >\n                    Export\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </Card>\n      )}\n\n      {predictionResults && (\n        <Card>\n          <div className=\"p-6\">\n            <div className=\"flex items-center space-x-2 mb-6\">\n              <Brain className=\"w-5 h-5 text-purple-600\" />\n              <h3 className=\"text-xl font-semibold\">AI Outcome Predictions</h3>\n              {loading && <LoadingSpinner size=\"sm\" />}\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Timeline */}\n              <div>\n                <h4 className=\"font-semibold text-gray-900 mb-3\">Treatment Timeline</h4>\n                <div className=\"space-y-2\">\n                  {predictionResults.outcomeTimeline.map((point: any, index: number) => (\n                    <div key={index} className=\"flex items-center justify-between p-2 border rounded\">\n                      <span className=\"text-sm font-medium\">Month {point.month}</span>\n                      <div className=\"flex space-x-4 text-sm\">\n                        <span className=\"text-green-600\">Response: {point.responseRate}%</span>\n                        <span className=\"text-blue-600\">Survival: {point.survivalRate}%</span>\n                        <span className=\"text-purple-600\">QoL: {point.qualityOfLife}%</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Risk Factors */}\n              <div>\n                <h4 className=\"font-semibold text-gray-900 mb-3\">Risk Assessment</h4>\n                <div className=\"space-y-2\">\n                  {predictionResults.riskFactors.map((risk: any, index: number) => (\n                    <div key={index} className=\"p-3 border rounded-lg\">\n                      <div className=\"flex items-center justify-between mb-1\">\n                        <span className=\"text-sm font-medium\">{risk.factor}</span>\n                        <span className={`text-sm font-semibold ${risk.risk < 25 ? 'text-green-600' : risk.risk < 50 ? 'text-yellow-600' : 'text-red-600'}`}>\n                          {risk.risk}% risk\n                        </span>\n                      </div>\n                      <p className=\"text-xs text-gray-600\">{risk.mitigation}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </Card>\n      )}\n\n      {/* Guided Tour Overlay */}\n      {showGuidedTour && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\n          <div className=\"bg-white rounded-lg shadow-xl max-w-md mx-4\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center\">\n                    <Brain className=\"w-5 h-5 text-purple-600\" />\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Welcome to AI Treatment Planner!</h3>\n                  <p className=\"text-sm text-gray-600\">Let's get you started with genomic-optimized treatment planning</p>\n                </div>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-blue-900 mb-2\">🎯 How it works:</h4>\n                  <ul className=\"space-y-2 text-sm text-blue-800\">\n                    <li><strong>Step 1:</strong> Review genomic profile and AI insights</li>\n                    <li><strong>Step 2:</strong> Compare and select treatment protocols</li>\n                    <li><strong>Step 3:</strong> Simulate different treatment scenarios</li>\n                    <li><strong>Step 4:</strong> Analyze predictions and outcomes</li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-green-900 mb-2\">💡 Pro Tips:</h4>\n                  <ul className=\"space-y-1 text-sm text-green-800\">\n                    <li>• Hover over terms with dotted underlines for explanations</li>\n                    <li>• Look for help icons (?) for detailed information</li>\n                    <li>• Use the workflow progress bar to navigate steps</li>\n                    <li>• Each step builds on the previous one</li>\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between mt-6\">\n                <button\n                  onClick={() => setIsFirstTime(false)}\n                  className=\"text-sm text-gray-500 hover:text-gray-700\"\n                >\n                  Don't show again\n                </button>\n                <button\n                  onClick={() => setShowGuidedTour(false)}\n                  className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors\"\n                >\n                  Get Started\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst TreatmentPlannerWithBoundary: React.FC = () => {\n  return (\n    <FeatureErrorBoundary \n      featureName=\"AI Treatment Planner\"\n      fallbackMessage=\"The AI Treatment Planner is temporarily unavailable. This advanced feature requires AI processing and genomic analysis.\"\n    >\n      <TreatmentPlanner />\n    </FeatureErrorBoundary>\n  );\n};\n\nexport default TreatmentPlannerWithBoundary;","import React from 'react';\nimport TreatmentPlanner from '../components/AI/TreatmentPlanner';\nimport FeatureErrorBoundary from '../components/ErrorBoundary/FeatureErrorBoundary';\n\nconst AITreatmentPlanner: React.FC = () => {\n  return (\n    <FeatureErrorBoundary \n      featureName=\"AI Treatment Planner Page\"\n      fallbackMessage=\"The AI Treatment Planner page is temporarily unavailable.\"\n    >\n      <div className=\"space-y-6\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">AI Treatment Planner</h1>\n          <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n            Revolutionary genomic-optimized treatment protocols powered by artificial intelligence and real-world evidence.\n          </p>\n        </div>\n        \n        <TreatmentPlanner />\n      </div>\n    </FeatureErrorBoundary>\n  );\n};\n\nexport default AITreatmentPlanner;"],"names":["__iconNode","Beaker","createLucideIcon","TreatmentPlanner","patientProfile","setPatientProfile","useState","genomicProfile","setGenomicProfile","protocols","setProtocols","selectedProtocol","setSelectedProtocol","aiInsights","setAiInsights","loading","setLoading","predictionResults","setPredictionResults","simulationState","setSimulationState","showSimulator","setShowSimulator","scenarioParameters","setScenarioParameters","trialMatchResult","setTrialMatchResult","showTrialMatcher","setShowTrialMatcher","trialMatchLoading","setTrialMatchLoading","selectedTrial","setSelectedTrial","showGenomicAnalysis","setShowGenomicAnalysis","genomicAnalysisLoading","setGenomicAnalysisLoading","selectedGene","setSelectedGene","pharmacogenomicResults","setPharmacogenomicResults","showVisualizationPanel","setShowVisualizationPanel","currentStep","setCurrentStep","isFirstTime","setIsFirstTime","showGuidedTour","setShowGuidedTour","selectedVisualization","setSelectedVisualization","timelineView","setTimelineView","chartInteractions","setChartInteractions","animatedCharts","setAnimatedCharts","useEffect","loadPatientData","resolve","mockGenomicProfile","mockProtocols","mockInsights","error","generatePredictions","protocol","generateScenarios","baseProtocol","scenarios","prev","runSimulation","scenario","step","resetSimulation","searchMatchingTrials","mockTrials","eligibilityGaps","result","t","getTrialPhaseColor","phase","getEligibilityScoreColor","score","getMetabolizerColor","phenotype","getRiskLevelColor","level","getRecommendationColor","recommendation","analyzePharmacogenomics","selectedDrugs","mockResults","drug","TimelineChart","data","detailed","timePoints","p","jsxs","jsx","_","i","point","index","OutcomePredictionChart","outcomes","outcome","TrendingUp","TrendingDown","BiomarkerTrendChart","biomarkers","biomarker","value","RiskMatrix","riskFactors","r","b","categories","category","f","factor","getPriorityIcon","priority","AlertTriangle","Clock","CheckCircle","Activity","getEvidenceBadge","colors","wizardSteps","Target","FileText","Calculator","BarChart3","getCurrentStepIndex","isStepCompleted","stepId","stepIndex","currentIndex","canProceedToNextStep","nextStep","previousStep","getStepTooltip","LoadingSpinner","Brain","Eye","Dna","Tooltip","Card","StepIcon","isActive","isCompleted","Zap","insight","e","Settings","RotateCcw","Play","Microscope","d","FlaskConical","Shield","Database","gene","implication","rec","risk","recIndex","alert","analysis","TestTube","Star","trial","MapPin","Users","Calendar","reason","Phone","Mail","ExternalLink","intervention","Filter","gap","item","TimelineIcon","Layers","key","label","Icon","MousePointer","Maximize2","TreatmentPlannerWithBoundary","FeatureErrorBoundary","AITreatmentPlanner"],"mappings":"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","x_google_ignoreList":[0]}