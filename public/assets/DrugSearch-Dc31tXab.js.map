{"version":3,"mappings":"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","names":["__iconNode","LoaderCircle","createLucideIcon","KEY","getPins","raw","isPinned","rxcui","togglePin","name","pins","clearPins","reorderPins","order","current","next","ts","entry","v","DrugCard","drug","onClick","showDetails","showTooltips","className","navigate","useNavigate","selection","useSelection","handleClick","getSeverityColor","tty","formatTty","getDrugInfoTooltip","jsxs","jsx","getTtyTooltip","explanations","getClinicalSafetyTooltip","pinned","Card","Pill","Tooltip","Star","Tag","AlertTriangle","ChevronRight","analytics","Activity","Dna","m","inferBiomarkerForDrug","MapPinned","Share2","calculateRelevanceScore","query","lowerQuery","lowerName","similarity","calculateSimilarity","str1","str2","longer","shorter","distance","levenshteinDistance","matrix","i","j","cost","DrugSearchResults","results","loading","error","onDrugSelect","filters","popularity","categorizedResults","useMemo","categories","popularDrugs","oncologyDrugs","ttyOk","isOncologyApprox","n","oncoOk","isPopular","popular","isOncology","onco","enhancedDrug","key","a","b","flatList","highlighted","setHighlighted","useState","containerRef","useRef","useEffect","move","delta","prev","handleKeyDown","e","d","t","_","index","Alert","TrendingUp","Database","Globe","category","drugs","getCategoryIcon","cat","Filter","getCategoryTooltip","dr","getCategoryColor","Clock","COMPREHENSIVE_OPTIONS","AutocompleteSearch","placeholder","onSelect","onInputChange","value","maxResults","showCategories","allowMultiple","selectedOptions","disabled","onOfflineChange","inputValue","setInputValue","isOpen","setIsOpen","filteredOptions","setFilteredOptions","highlightedIndex","setHighlightedIndex","recentSearches","setRecentSearches","serverOptions","setServerOptions","serverOffline","setServerOffline","inputRef","listRef","saved","abort","resp","data","opts","s","isOffline","opt","searchTerm","fuzzyMatch","text","search","cleanSearch","word","charIndex","char","foundIndex","matches","lastIndex","sorted","option","alias","term","labelMatch","valueMatch","aliasMatch","score","combined","handleInputChange","newValue","handleOptionSelect","updated","getOptionIcon","type","Target","Zap","Heart","Users","Search","removeSelectedOption","optionId","X","Loader2","ChevronDown","CheckCircle","THERAPEUTIC_CLASS_OPTIONS","MECHANISM_OPTIONS","INDICATION_OPTIONS","BIOMARKER_OPTIONS","APPROVAL_STATUS_OPTIONS","CLINICAL_TRIAL_PHASE_OPTIONS","FilterAutocomplete","options","selectedValues","onSelectionChange","label","maxSelection","searchable","showCounts","setSearchTerm","searchInputRef","filtered","handleClickOutside","event","handleOptionToggle","isSelected","newValues","removeValue","clearAll","Check","ImprovedDrugSearch","setFilters","searchSuggestions","setSearchSuggestions","recommendations","setRecommendations","isLoading","setIsLoading","showAdvancedFilters","setShowAdvancedFilters","aiMode","setAiMode","activeTab","setActiveTab","serverSuggestions","setServerSuggestions","serverSuggestionsOffline","setServerSuggestionsOffline","serverSuggestionsLoading","setServerSuggestionsLoading","generateAISuggestions","timer","suggestions","handleFilterChange","handleMultiSelectFilter","currentValues","clearAllFilters","getActiveFiltersCount","count","renderEnhancedFilter","title","icon","values","TabButton","isActive","children","Brain","Sparkles","suggestion","BarChart3","mode","Icon","ChevronUp","Microscope","Shield","Download","useUrlState","location","useLocation","defaultValue","serialize","defaultSerialize","deserialize","defaultDeserialize","replace","getInitialValue","useCallback","urlValue","state","setState","updateUrl","searchParams","serialized","newSearch","newUrl","updateState","prevState","useUrlFilters","defaultFilters","getFiltersFromUrl","newFilters","updateFilters","prevFilters","updates","updatedFilters","clearFilters","useUrlPagination","defaultPage","defaultPageSize","page","setPage","pageSize","setPageSize","resetPagination","useUrlSort","defaultSort","defaultDirection","sortBy","setSortBy","sortDirection","setSortDirection","updateSort","field","direction","useLocalStorage","initialValue","syncAcrossTabs","storedValue","setStoredValue","item","setValue","valueToStore","handleStorageChange","useUserPreferences","defaultPreferences","storageKey","preferences","setPreferences","clearPreferences","updatePreference","updatePreferences","resetPreferences","useRecentSearches","maxItems","searches","setSearches","addSearch","trimmedSearch","removeSearch","clearSearches","DrugSearchInner","searchQuery","setSearchQuery","searchResults","setSearchResults","selectedDrug","setSelectedDrug","setLoading","setError","pinsTick","setPinsTick","searchMode","setSearchMode","aiInsights","setAiInsights","drugAnalytics","setDrugAnalytics","recentInteractions","setRecentInteractions","rxnormOfflineToast","setRxnormOfflineToast","rxnormToastDismissed","setRxnormToastDismissed","showToast","useToast","connStatus","setConnStatus","connTesting","setConnTesting","connCheckedAt","setConnCheckedAt","basicSuggestions","setBasicSuggestions","basicSuggestionsOffline","setBasicSuggestionsOffline","basicSuggestionsLoading","setBasicSuggestionsLoading","dismissed","testConnectivity","isOnline","activeTtySet","pinnedList","handleSearch","drugService","filteredResults","finalResults","err","handleDrugSelect","details","handleBackToResults","handler","el","History","offline","Info","p","idx","dragged","list","x","from","to","oncoNames","isOnco","DrugSearch","FeatureErrorBoundary"],"ignoreList":[0],"sources":["../../node_modules/lucide-react/dist/esm/icons/loader-circle.js","../../src/utils/pins.ts","../../src/components/DrugSearch/DrugCard.tsx","../../src/components/DrugSearch/DrugSearchResults.tsx","../../src/components/DrugSearch/AutocompleteSearch.tsx","../../src/components/DrugSearch/FilterAutocomplete.tsx","../../src/components/DrugSearch/ImprovedDrugSearch.tsx","../../src/hooks/useUrlState.ts","../../src/hooks/useLocalStorage.ts","../../src/pages/DrugSearch.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"M21 12a9 9 0 1 1-6.219-8.56\", key: \"13zald\" }]];\nconst LoaderCircle = createLucideIcon(\"loader-circle\", __iconNode);\n\nexport { __iconNode, LoaderCircle as default };\n//# sourceMappingURL=loader-circle.js.map\n","const KEY = 'oncosaferx_pins';\n\nexport type PinMap = Record<string, { name: string; t: number }>;\n\nexport function getPins(): PinMap {\n  try {\n    const raw = localStorage.getItem(KEY);\n    return raw ? JSON.parse(raw) : {};\n  } catch {\n    return {};\n  }\n}\n\nexport function isPinned(rxcui?: string): boolean {\n  if (!rxcui) return false;\n  const pins = getPins();\n  return !!pins[rxcui];\n}\n\nexport function togglePin(rxcui: string, name: string): PinMap {\n  const pins = getPins();\n  if (pins[rxcui]) delete pins[rxcui];\n  else pins[rxcui] = { name, t: Date.now() };\n  try { localStorage.setItem(KEY, JSON.stringify(pins)); } catch {}\n  return pins;\n}\n\nexport function clearPins() {\n  try { localStorage.removeItem(KEY); } catch {}\n}\n\nexport function reorderPins(order: string[]) {\n  const current = getPins();\n  const next: PinMap = {};\n  // Rebuild object in provided order to preserve insertion order\n  let ts = Date.now();\n  for (const rxcui of order) {\n    const entry = current[rxcui];\n    if (entry) {\n      next[rxcui] = { name: entry.name, t: ts-- };\n    }\n  }\n  // Append any missing (new) pins at the end in their current order\n  Object.entries(current).forEach(([rxcui, v]) => {\n    if (!next[rxcui]) next[rxcui] = v;\n  });\n  try { localStorage.setItem(KEY, JSON.stringify(next)); } catch {}\n}\n","import React from 'react';\nimport { Drug } from '../../types';\nimport { Pill, ChevronRight, Tag, AlertTriangle, Share2, Activity, Dna, MapPinned, Star } from 'lucide-react';\nimport Card from '../UI/Card';\nimport Tooltip from '../UI/Tooltip';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelection } from '../../context/SelectionContext';\nimport { analytics } from '../../utils/analytics';\nimport { inferBiomarkerForDrug } from '../../utils/biomarkers';\nimport { isPinned, togglePin } from '../../utils/pins';\n\ninterface DrugCardProps {\n  drug: Drug;\n  onClick?: (drug: Drug) => void;\n  showDetails?: boolean;\n  showTooltips?: boolean;\n  className?: string;\n}\n\nconst DrugCard: React.FC<DrugCardProps> = ({ drug, onClick, showDetails = false, showTooltips = true, className = '' }) => {\n  const navigate = useNavigate();\n  const selection = useSelection();\n\n  const handleClick = () => {\n    onClick?.(drug);\n  };\n\n  const getSeverityColor = (tty?: string) => {\n    if (!tty) return 'bg-gray-100 text-gray-700';\n    \n    switch (tty.toLowerCase()) {\n      case 'scd':\n      case 'sbd':\n        return 'bg-primary-100 text-primary-700';\n      case 'gpck':\n      case 'bpck':\n        return 'bg-warning-100 text-warning-700';\n      default:\n        return 'bg-gray-100 text-gray-700';\n    }\n  };\n\n  const formatTty = (tty?: string) => {\n    if (!tty) return 'Unknown';\n    \n    const ttyMap: Record<string, string> = {\n      'SCD': 'Clinical Drug',\n      'SBD': 'Branded Drug',\n      'GPCK': 'Generic Pack',\n      'BPCK': 'Branded Pack',\n    };\n    \n    return ttyMap[tty.toUpperCase()] || tty;\n  };\n\n  // Get drug information tooltip\n  const getDrugInfoTooltip = () => (\n    <div className=\"space-y-2 text-xs\">\n      <div className=\"font-semibold\">Drug Information:</div>\n      <div>Name: {drug.name}</div>\n      <div>RXCUI: {drug.rxcui}</div>\n      {drug.tty && <div>Type: {formatTty(drug.tty)}</div>}\n      {drug.generic_name && <div>Generic: {drug.generic_name}</div>}\n      {drug.therapeutic_class && <div>Class: {drug.therapeutic_class}</div>}\n      <div className=\"mt-2 pt-2 border-t border-gray-200\">\n        <div className=\"text-gray-300\">{onClick ? 'Click for more details' : 'Drug details'}</div>\n      </div>\n    </div>\n  );\n\n  // Get TTY explanation tooltip\n  const getTtyTooltip = (tty?: string) => {\n    const explanations: Record<string, string> = {\n      'SCD': 'Semantic Clinical Drug - A clinical drug with specific ingredient(s), strength(s), and dose form',\n      'SBD': 'Semantic Branded Drug - A branded drug with specific ingredient(s), strength(s), and dose form',\n      'GPCK': 'Generic Pack - A collection of generic drugs in a package',\n      'BPCK': 'Branded Pack - A collection of branded drugs in a package',\n    };\n\n    if (!tty) return 'Drug type classification from RxNorm terminology';\n    \n    return explanations[tty.toUpperCase()] || `${tty} - Drug type classification`;\n  };\n\n  // Get clinical safety tooltip\n  const getClinicalSafetyTooltip = () => (\n    <div className=\"space-y-2 text-xs\">\n      <div className=\"font-semibold text-amber-200\">Clinical Safety:</div>\n      <ul className=\"space-y-1 list-disc list-inside\">\n        <li>Always verify drug name and strength</li>\n        <li>Check for patient allergies</li>\n        <li>Review contraindications</li>\n        <li>Consider drug interactions</li>\n      </ul>\n      <div className=\"mt-2 pt-2 border-t border-amber-200\">\n        <div className=\"text-amber-200\">Consult clinical guidelines and patient-specific factors</div>\n      </div>\n    </div>\n  );\n\n  const pinned = isPinned(drug.rxcui);\n\n  return (\n    <Card \n      className={`transition-all duration-200 ${\n        onClick \n          ? 'cursor-pointer hover:shadow-md hover:border-primary-300' \n          : ''\n      } ${className}`}\n      padding=\"md\"\n    >\n      <div className=\"flex items-start justify-between\" onClick={onClick ? handleClick : undefined}>\n        <div className=\"flex items-start space-x-3 flex-1\">\n          <div className=\"flex-shrink-0\">\n            <div className=\"w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center\">\n              <Pill className=\"w-5 h-5 text-primary-600\" />\n            </div>\n          </div>\n          \n          <div className=\"flex-1 min-w-0\">\n            <div className=\"flex items-center space-x-2\">\n              <h3 className=\"text-lg font-semibold text-gray-900 truncate\">\n                {drug.name}\n              </h3>\n              {pinned && (\n                <Tooltip content=\"Pinned\">\n                  <span className=\"inline-flex items-center px-1.5 py-0.5 rounded-full text-[10px] font-medium bg-yellow-100 text-yellow-800 border border-yellow-200\">\n                    <Star className=\"w-3 h-3 mr-1\" /> Pinned\n                  </span>\n                </Tooltip>\n              )}\n              {showTooltips && (\n                <Tooltip\n                  content={getDrugInfoTooltip()}\n                  type=\"info\"\n                  iconOnly\n                  position=\"top\"\n                  maxWidth=\"max-w-xs\"\n                />\n              )}\n            </div>\n            \n            {drug.synonym && drug.synonym !== drug.name && (\n              <p className=\"text-sm text-gray-600 mt-1\">\n                Also known as: {drug.synonym}\n              </p>\n            )}\n            \n            <div className=\"flex items-center space-x-4 mt-2\">\n              <div className=\"flex items-center space-x-1\">\n                <Tag className=\"w-3 h-3 text-gray-400\" />\n                <span className=\"text-xs text-gray-500\">RXCUI: {drug.rxcui}</span>\n                {showTooltips && (\n                  <Tooltip\n                    content=\"RxNorm Concept Unique Identifier - A unique identifier for this medication in the RxNorm database\"\n                    type=\"help\"\n                    iconOnly\n                    position=\"top\"\n                    maxWidth=\"max-w-xs\"\n                  />\n                )}\n              </div>\n              \n              {drug.tty && (\n                <Tooltip\n                  content={getTtyTooltip(drug.tty)}\n                  type=\"help\"\n                  disabled={!showTooltips}\n                  maxWidth=\"max-w-sm\"\n                >\n                  <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${getSeverityColor(drug.tty)}`}>\n                    {formatTty(drug.tty)}\n                  </span>\n                </Tooltip>\n              )}\n              \n              {showTooltips && (\n                <Tooltip\n                  content={getClinicalSafetyTooltip()}\n                  type=\"warning\"\n                  iconOnly\n                  position=\"top\"\n                  maxWidth=\"max-w-xs\"\n                >\n                  <AlertTriangle className=\"w-4 h-4 text-amber-500\" />\n                </Tooltip>\n              )}\n            </div>\n\n            {showDetails && (\n              <div className=\"mt-3 space-y-2\">\n                {drug.generic_name && drug.generic_name !== drug.name && (\n                  <div>\n                    <span className=\"text-sm font-medium text-gray-700\">Generic: </span>\n                    <span className=\"text-sm text-gray-600\">{drug.generic_name}</span>\n                  </div>\n                )}\n                \n                {drug.therapeutic_class && (\n                  <div>\n                    <span className=\"text-sm font-medium text-gray-700\">Class: </span>\n                    <span className=\"text-sm text-gray-600\">{drug.therapeutic_class}</span>\n                  </div>\n                )}\n                \n                {drug.indication && (\n                  <div>\n                    <span className=\"text-sm font-medium text-gray-700\">Indication: </span>\n                    <span className=\"text-sm text-gray-600\">{drug.indication}</span>\n                  </div>\n                )}\n\n                {drug.brand_names && drug.brand_names.length > 0 && (\n                  <div>\n                    <span className=\"text-sm font-medium text-gray-700\">Brand Names: </span>\n                    <span className=\"text-sm text-gray-600\">{drug.brand_names.join(', ')}</span>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        {onClick && (\n          <div className=\"flex-shrink-0 ml-4\">\n            <ChevronRight className=\"w-5 h-5 text-gray-400\" />\n          </div>\n        )}\n      </div>\n      {/* Quick actions */}\n      <div className=\"mt-3 flex flex-wrap gap-2\">\n        <Tooltip content={pinned ? 'Unpin this drug' : 'Pin this drug'}>\n          <button\n            type=\"button\"\n            onClick={() => { togglePin(drug.rxcui, drug.name); }}\n            className={`inline-flex items-center px-3 py-1.5 text-xs rounded ${pinned ? 'bg-yellow-100 text-yellow-800' : 'bg-gray-100 text-gray-700'} hover:bg-gray-200`}\n            aria-pressed={pinned}\n            aria-label={pinned ? 'Unpin drug' : 'Pin drug'}\n          >\n            <Star className={`w-3 h-3 mr-1 ${pinned ? '' : 'opacity-70'}`} /> {pinned ? 'Pinned' : 'Pin'}\n          </button>\n        </Tooltip>\n        <button\n          type=\"button\"\n          onClick={() => {\n            selection.addDrug(drug);\n            try { analytics.logSelection(drug.rxcui, drug.name, 'card_action_interactions'); } catch {}\n            navigate('/interactions');\n          }}\n          className=\"inline-flex items-center px-3 py-1.5 text-xs bg-gray-100 text-gray-700 rounded hover:bg-gray-200\"\n        >\n          <Activity className=\"w-3 h-3 mr-1\" /> Use in Interactions\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            selection.addDrug(drug);\n            try { analytics.logSelection(drug.rxcui, drug.name, 'card_action_genomics'); } catch {}\n            navigate('/genomics');\n          }}\n          className=\"inline-flex items-center px-3 py-1.5 text-xs bg-purple-100 text-purple-700 rounded hover:bg-purple-200\"\n        >\n          <Dna className=\"w-3 h-3 mr-1\" /> Analyze Genomics\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            selection.addDrug(drug);\n            const m = inferBiomarkerForDrug(drug.name);\n            try { analytics.logSelection(drug.rxcui, drug.name, 'card_action_trials'); } catch {}\n            if (m) navigate(`/trials?biomarker=${encodeURIComponent(m)}`);\n            else navigate('/trials');\n          }}\n          className=\"inline-flex items-center px-3 py-1.5 text-xs bg-green-100 text-green-700 rounded hover:bg-green-200\"\n        >\n          <MapPinned className=\"w-3 h-3 mr-1\" /> Find Trials\n        </button>\n        {onClick && (\n          <button\n            type=\"button\"\n            onClick={handleClick}\n            onMouseDown={() => { try { analytics.logSelection(drug.rxcui, drug.name, 'card_action_details'); } catch {} }}\n            className=\"inline-flex items-center px-3 py-1.5 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200\"\n          >\n            <Share2 className=\"w-3 h-3 mr-1\" /> View Details\n          </button>\n        )}\n      </div>\n    </Card>\n  );\n};\n\nexport default DrugCard;\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { Drug, DrugSearchResult } from '../../types';\nimport DrugCard from './DrugCard';\nimport Alert from '../UI/Alert';\nimport Tooltip from '../UI/Tooltip';\nimport { Database, Globe, Star, Pill, Filter, TrendingUp, Clock, Info } from 'lucide-react';\nimport { getPins } from '../../utils/pins';\n\ninterface DrugSearchResultsProps {\n  results: DrugSearchResult | null;\n  loading: boolean;\n  error: string | null;\n  onDrugSelect?: (drug: Drug) => void;\n  filters?: { onlyOncology?: boolean; tty?: Set<string> };\n}\n\n// Calculate relevance score based on query match\nfunction calculateRelevanceScore(drug: Drug, query: string): number {\n  const lowerQuery = (query || '').toLowerCase();\n  const lowerName = (drug.name || '').toLowerCase();\n  if (!lowerQuery) return 0;\n  if (lowerName === lowerQuery) return 100;\n  if (lowerName.startsWith(lowerQuery)) return 80;\n  if (lowerName.includes(lowerQuery)) return 60;\n  const similarity = calculateSimilarity(lowerName, lowerQuery);\n  return Math.floor(similarity * 40);\n}\n\n// Simple similarity calculation\nfunction calculateSimilarity(str1: string, str2: string): number {\n  const longer = str1.length > str2.length ? str1 : str2;\n  const shorter = str1.length > str2.length ? str2 : str1;\n  if (longer.length === 0) return 1.0;\n  const distance = levenshteinDistance(longer, shorter);\n  return (longer.length - distance) / longer.length;\n}\n\n// Levenshtein distance for fuzzy matching\nfunction levenshteinDistance(str1: string, str2: string): number {\n  const matrix = Array(str2.length + 1)\n    .fill(null)\n    .map(() => Array(str1.length + 1).fill(null));\n  for (let i = 0; i <= str1.length; i++) matrix[0][i] = i;\n  for (let j = 0; j <= str2.length; j++) matrix[j][0] = j;\n  for (let j = 1; j <= str2.length; j++) {\n    for (let i = 1; i <= str1.length; i++) {\n      const cost = str1[i - 1] === str2[j - 1] ? 0 : 1;\n      matrix[j][i] = Math.min(\n        (matrix[j][i - 1] as number) + 1,\n        (matrix[j - 1][i] as number) + 1,\n        (matrix[j - 1][i - 1] as number) + cost\n      );\n    }\n  }\n  return matrix[str2.length][str1.length] as number;\n}\n\nconst DrugSearchResults: React.FC<DrugSearchResultsProps> = ({\n  results,\n  loading,\n  error,\n  onDrugSelect,\n  filters,\n}) => {\n  // Popularity map from localStorage (incremented on selection elsewhere)\n  let popularity: Record<string, number> = {};\n  try { popularity = JSON.parse(localStorage.getItem('oncosaferx_popularity') || '{}'); } catch {}\n  // Categorize and rank results\n  const categorizedResults = useMemo(() => {\n    if (!results || !results.results.length) return null;\n\n    const categories: Record<string, Drug[]> = {\n      'Brand Names': [],\n      'Generic Names': [],\n      'Ingredients': [],\n      'Combinations': [],\n      'Other': [],\n    };\n\n    // Popular drug indicators\n    const popularDrugs = ['aspirin', 'ibuprofen', 'acetaminophen', 'warfarin', 'metformin', 'atorvastatin'];\n    const oncologyDrugs = ['pembrolizumab', 'nivolumab', 'fluorouracil', 'cisplatin', 'doxorubicin', 'paclitaxel'];\n\n    // Apply filters first (if any)\n    const baseList = results.results.filter(drug => {\n      const ttyOk = !filters?.tty || filters.tty.size === 0 || (drug.tty ? filters.tty.has(drug.tty) : false);\n      // oncology flag approximated by name matches; refined later by backend\n      const oncoNames = ['pembrolizumab','nivolumab','fluorouracil','cisplatin','doxorubicin','paclitaxel','tamoxifen','imatinib'];\n      const isOncologyApprox = oncoNames.some(n => (drug.name || '').toLowerCase().includes(n));\n      const oncoOk = !filters?.onlyOncology || isOncologyApprox;\n      return ttyOk && oncoOk;\n    });\n\n    baseList.forEach(drug => {\n      // Add popularity indicators\n      const isPopular = popularDrugs.some(popular => \n        drug.name.toLowerCase().includes(popular.toLowerCase())\n      );\n      const isOncology = oncologyDrugs.some(onco => \n        drug.name.toLowerCase().includes(onco.toLowerCase())\n      );\n\n      // Enhanced drug object with metadata\n      const enhancedDrug = {\n        ...drug,\n        isPopular,\n        isOncology,\n        relevanceScore: calculateRelevanceScore(drug, results.query || ''),\n        popularityScore: Number(popularity[drug.rxcui] || 0),\n      };\n\n      // Categorize by term type\n      switch (drug.tty) {\n        case 'BN':\n          categories['Brand Names'].push(enhancedDrug);\n          break;\n        case 'IN':\n        case 'PIN':\n          categories['Ingredients'].push(enhancedDrug);\n          break;\n        case 'MIN':\n          categories['Combinations'].push(enhancedDrug);\n          break;\n        case 'SCD':\n        case 'SBD':\n          categories['Generic Names'].push(enhancedDrug);\n          break;\n        default:\n          categories['Other'].push(enhancedDrug);\n          break;\n      }\n    });\n\n    // Sort each category by relevance score\n    Object.keys(categories).forEach(key => {\n      categories[key].sort((a, b) => {\n        // Prioritize popular and oncology drugs\n        if (a.isPopular && !b.isPopular) return -1;\n        if (!a.isPopular && b.isPopular) return 1;\n        if (a.isOncology && !b.isOncology) return -1;\n        if (!a.isOncology && b.isOncology) return 1;\n        // Then by dynamic popularity\n        if ((a as any).popularityScore !== (b as any).popularityScore) return (b as any).popularityScore - (a as any).popularityScore;\n        // Then by relevance score\n        return b.relevanceScore - a.relevanceScore;\n      });\n    });\n\n    return categories;\n  }, [results]);\n  const pins = useMemo(() => getPins(), [results]);\n\n  // Flattened list for keyboard navigation\n  const flatList = useMemo(() => {\n    if (!results || !results.results.length) return [] as Drug[];\n    if (!categorizedResults) return results.results as Drug[];\n    return Object.values(categorizedResults).flat();\n  }, [results, categorizedResults]);\n\n  const [highlighted, setHighlighted] = useState<number>(-1);\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    setHighlighted(-1);\n  }, [results, filters]);\n\n  const move = (delta: number) => {\n    if (flatList.length === 0) return;\n    setHighlighted((prev) => {\n      const next = prev < 0 ? (delta > 0 ? 0 : flatList.length - 1) : (prev + delta + flatList.length) % flatList.length;\n      return next;\n    });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'ArrowDown' || e.key.toLowerCase() === 'j') {\n      e.preventDefault();\n      move(1);\n    } else if (e.key === 'ArrowUp' || e.key.toLowerCase() === 'k') {\n      e.preventDefault();\n      move(-1);\n    } else if (e.key === 'Enter' && highlighted >= 0 && flatList[highlighted]) {\n      e.preventDefault();\n      const d = flatList[highlighted];\n      onDrugSelect?.(d);\n      try { const { rxcui, name } = d; (async () => (await import('../../utils/analytics')).analytics.logSelection(rxcui, name, 'search_results'))(); } catch {}\n    } else if (e.key.toLowerCase() === 'p' && highlighted >= 0 && flatList[highlighted]) {\n      // Toggle pin on highlighted item\n      e.preventDefault();\n      const d = flatList[highlighted];\n      try { togglePin(d.rxcui, d.name); setPinTick(t => t + 1); } catch {}\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-4\">\n        {Array.from({ length: 3 }).map((_, index) => (\n          <div key={index} className=\"animate-pulse\">\n            <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-10 h-10 bg-gray-200 rounded-lg\"></div>\n                <div className=\"flex-1 space-y-2\">\n                  <div className=\"h-5 bg-gray-200 rounded w-3/4\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded w-1/4\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert type=\"error\" title=\"Search Error\">\n        {error}\n      </Alert>\n    );\n  }\n\n  if (!results) {\n    return (\n      <div className=\"text-center py-12\">\n        <div className=\"text-gray-500\">\n          <Database className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n          <p className=\"text-lg font-medium\">Search for drugs</p>\n          <p className=\"text-sm\">Enter a drug name to search our database and external sources</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (results.count === 0) {\n    return (\n      <Alert type=\"info\" title=\"No Results Found\">\n        No drugs found matching your search query \"{results.query}\". Please try a different search term.\n      </Alert>\n    );\n  }\n\n  return (\n    <div\n      className=\"space-y-6 outline-none\"\n      tabIndex={0}\n      onKeyDown={handleKeyDown}\n      ref={containerRef}\n      role=\"listbox\"\n      aria-label=\"Drug search results\"\n      aria-activedescendant={highlighted >= 0 && flatList[highlighted] ? `drug-option-${flatList[highlighted].rxcui}` : undefined}\n    >\n      {/* Enhanced Search Summary */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900 flex items-center space-x-2\">\n              <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n              <span>Search Results for \"{results.query}\"</span>\n            </h3>\n            <p className=\"text-sm text-gray-600\">\n              Found {results.count} drug{results.count !== 1 ? 's' : ''} • Ranked by relevance and popularity\n            </p>\n          </div>\n          \n          {results.sources && (\n            <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n              <Tooltip content=\"Results from local OncoSafeRx database\">\n                <div className=\"flex items-center space-x-1 cursor-help\">\n                  <Database className=\"w-4 h-4\" />\n                  <span>Local: {results.sources.local}</span>\n                </div>\n              </Tooltip>\n              <Tooltip content=\"Results from RxNorm (National Library of Medicine) database\">\n                <div className=\"flex items-center space-x-1 cursor-help\">\n                  <Globe className=\"w-4 h-4\" />\n                  <span>RxNorm: {results.sources.rxnorm}</span>\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </div>\n\n        {/* Category Summary */}\n        {categorizedResults && (\n          <div className=\"flex flex-wrap gap-3 pt-3 border-t border-gray-100\">\n            {Object.entries(categorizedResults).map(([category, drugs]) => {\n              if (drugs.length === 0) return null;\n              \n              const getCategoryIcon = (cat: string) => {\n                switch (cat) {\n                  case 'Brand Names': return <Star className=\"w-3 h-3\" />;\n                  case 'Generic Names': return <Pill className=\"w-3 h-3\" />;\n                  case 'Ingredients': return <Filter className=\"w-3 h-3\" />;\n                  case 'Combinations': return <Database className=\"w-3 h-3\" />;\n                  default: return <Globe className=\"w-3 h-3\" />;\n                }\n              };\n\n              const getCategoryTooltip = (cat: string) => {\n                switch (cat) {\n                  case 'Brand Names': return 'Proprietary/commercial drug names (e.g., Tylenol, Advil)';\n                  case 'Generic Names': return 'Scientific/chemical drug names (e.g., acetaminophen, ibuprofen)';\n                  case 'Ingredients': return 'Active pharmaceutical ingredients and components';\n                  case 'Combinations': return 'Multi-ingredient formulations and combination products';\n                  default: return 'Other drug terminology types';\n                }\n              };\n\n              return (\n                <Tooltip key={category} content={getCategoryTooltip(category)}>\n                  <div className=\"flex items-center space-x-1 px-2 py-1 bg-gray-100 rounded-full text-xs text-gray-600 cursor-help\">\n                    {getCategoryIcon(category)}\n                    <span>{category}: {drugs.length}</span>\n                  </div>\n                </Tooltip>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      {/* Pinned Results */}\n      {Object.keys(pins).length > 0 && results && results.results.length > 0 && (\n        <div className=\"space-y-3\">\n          <div className={`inline-flex items-center space-x-2 px-3 py-2 rounded-lg border text-yellow-700 bg-yellow-50 border-yellow-200`}>\n            <Star className=\"w-4 h-4\" />\n            <h4 className=\"font-medium\">Pinned</h4>\n            <span className=\"text-sm\">({Object.keys(pins).filter(r => results.results.find(dr => dr.rxcui === r)).length})</span>\n          </div>\n          <div className=\"space-y-3\">\n            {results.results\n              .filter((d) => !!pins[d.rxcui])\n              .map((drug) => (\n                <div key={`${drug.rxcui}-${drug.tty}`} className=\"relative\">\n                  <DrugCard\n                    drug={drug}\n                    onClick={onDrugSelect}\n                    className={'ring-2 ring-yellow-200'}\n                  />\n                </div>\n              ))}\n          </div>\n        </div>\n      )}\n\n      {/* Categorized Results */}\n      {categorizedResults ? (\n        <div className=\"space-y-6\">\n          {Object.entries(categorizedResults).map(([category, drugs]) => {\n            if (drugs.length === 0) return null;\n\n            const getCategoryColor = (cat: string) => {\n              switch (cat) {\n                case 'Brand Names': return 'text-purple-600 bg-purple-50 border-purple-200';\n                case 'Generic Names': return 'text-blue-600 bg-blue-50 border-blue-200';\n                case 'Ingredients': return 'text-green-600 bg-green-50 border-green-200';\n                case 'Combinations': return 'text-orange-600 bg-orange-50 border-orange-200';\n                default: return 'text-gray-600 bg-gray-50 border-gray-200';\n              }\n            };\n\n            const getCategoryIcon = (cat: string) => {\n              switch (cat) {\n                case 'Brand Names': return <Star className=\"w-4 h-4\" />;\n                case 'Generic Names': return <Pill className=\"w-4 h-4\" />;\n                case 'Ingredients': return <Filter className=\"w-4 h-4\" />;\n                case 'Combinations': return <Database className=\"w-4 h-4\" />;\n                default: return <Globe className=\"w-4 h-4\" />;\n              }\n            };\n\n            return (\n              <div key={category} className=\"space-y-3\">\n                {/* Category Header */}\n                <div className={`inline-flex items-center space-x-2 px-3 py-2 rounded-lg border ${getCategoryColor(category)}`}>\n                  {getCategoryIcon(category)}\n                  <h4 className=\"font-medium\">{category}</h4>\n                  <span className=\"text-sm\">({drugs.length})</span>\n                </div>\n\n                {/* Category Results */}\n                <div className=\"space-y-3\">\n                  {drugs.map((drug) => (\n                    <div\n                      key={`${drug.rxcui}-${drug.tty}`}\n                      id={`drug-option-${drug.rxcui}`}\n                      className=\"relative\"\n                      role=\"option\"\n                      aria-selected={highlighted >= 0 && flatList[highlighted]?.rxcui === drug.rxcui}\n                    >\n                      {/* Pin toggle */}\n                      <Tooltip content={pins[drug.rxcui] ? 'Unpin this drug' : 'Pin this drug'}>\n                        <button\n                          type=\"button\"\n                          onClick={(e) => { e.stopPropagation(); togglePin(drug.rxcui, drug.name); setPinTick(t => t + 1); }}\n                          className={`absolute top-2 left-2 z-10 inline-flex items-center justify-center w-6 h-6 rounded-full border ${pins[drug.rxcui] ? 'bg-yellow-100 border-yellow-300 text-yellow-800' : 'bg-white border-gray-200 text-gray-500'} hover:bg-yellow-50`}\n                          aria-label={pins[drug.rxcui] ? 'Unpin' : 'Pin'}\n                        >\n                          <Star className=\"w-3 h-3\" />\n                        </button>\n                      </Tooltip>\n                      <DrugCard\n                        drug={drug}\n                        onClick={onDrugSelect}\n                        className={`${drug.isPopular ? 'ring-2 ring-yellow-200' : ''} ${drug.isOncology ? 'ring-2 ring-purple-200' : ''} ${highlighted >= 0 && flatList[highlighted]?.rxcui === drug.rxcui ? 'ring-2 ring-blue-300' : ''}`}\n                      />\n                      \n                      {/* Relevance and Special Indicators */}\n                      <div className=\"absolute top-2 right-2 flex items-center space-x-1\">\n                        {drug.isPopular && (\n                          <Tooltip content=\"Commonly prescribed medication with high usage frequency\">\n                            <div className=\"flex items-center space-x-1 px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full text-xs font-medium cursor-help\">\n                              <TrendingUp className=\"w-3 h-3\" />\n                              <span>Popular</span>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {drug.isOncology && (\n                          <Tooltip content=\"Oncology/cancer treatment medication - requires specialized handling and monitoring\">\n                            <div className=\"flex items-center space-x-1 px-2 py-1 bg-purple-100 text-purple-800 rounded-full text-xs font-medium cursor-help\">\n                              <Star className=\"w-3 h-3\" />\n                              <span>Oncology</span>\n                            </div>\n                          </Tooltip>\n                        )}\n                        {drug.relevanceScore >= 80 && (\n                          <Tooltip content=\"High relevance match based on search query similarity\">\n                            <div className=\"flex items-center space-x-1 px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs font-medium cursor-help\">\n                              <Clock className=\"w-3 h-3\" />\n                              <span>{drug.relevanceScore}% match</span>\n                            </div>\n                          </Tooltip>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        /* Fallback to simple list */\n        <div className=\"space-y-4\">\n          {results.results.map((drug) => (\n            <div key={`${drug.rxcui}-${drug.tty}`} className=\"relative\">\n              <Tooltip content={pins[drug.rxcui] ? 'Unpin this drug' : 'Pin this drug'}>\n                <button\n                  type=\"button\"\n                  onClick={(e) => { e.stopPropagation(); togglePin(drug.rxcui, drug.name); setPinTick(t => t + 1); }}\n                  className={`absolute top-2 left-2 z-10 inline-flex items-center justify-center w-6 h-6 rounded-full border ${pins[drug.rxcui] ? 'bg-yellow-100 border-yellow-300 text-yellow-800' : 'bg-white border-gray-200 text-gray-500'} hover:bg-yellow-50`}\n                  aria-label={pins[drug.rxcui] ? 'Unpin' : 'Pin'}\n                >\n                  <Star className=\"w-3 h-3\" />\n                </button>\n              </Tooltip>\n              <DrugCard\n                drug={drug}\n                onClick={onDrugSelect}\n                className={pins[drug.rxcui] ? 'ring-2 ring-yellow-200' : ''}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Load More (if needed) */}\n      {results.count > results.results.length && (\n        <div className=\"text-center\">\n          <button className=\"px-6 py-2 bg-primary-600 text-white text-sm font-medium rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 flex items-center space-x-2 mx-auto\">\n            <Database className=\"w-4 h-4\" />\n            <span>Load More Results ({results.count - results.results.length} remaining)</span>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DrugSearchResults;\n","import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport {\n  Search,\n  ChevronDown,\n  X,\n  Pill,\n  Target,\n  Zap,\n  Activity,\n  Heart,\n  Users,\n  AlertTriangle,\n  CheckCircle,\n  Star,\n  Clock,\n  Loader2\n} from 'lucide-react';\n\ninterface AutocompleteOption {\n  id: string;\n  label: string;\n  value: string;\n  type: 'drug' | 'indication' | 'mechanism' | 'biomarker' | 'class' | 'symptom' | 'gene';\n  category: string;\n  description?: string;\n  aliases?: string[];\n  frequency?: number;\n  fdaApproved?: boolean;\n  isOncology?: boolean;\n  targetGenes?: string[];\n  relatedTerms?: string[];\n}\n\ninterface AutocompleteSearchProps {\n  placeholder?: string;\n  onSelect: (option: AutocompleteOption) => void;\n  onInputChange?: (value: string) => void;\n  value?: string;\n  maxResults?: number;\n  showCategories?: boolean;\n  allowMultiple?: boolean;\n  selectedOptions?: AutocompleteOption[];\n  disabled?: boolean;\n  loading?: boolean;\n  className?: string;\n  onOfflineChange?: (offline: boolean) => void;\n}\n\n// Comprehensive drug and medical terms database\nconst COMPREHENSIVE_OPTIONS: AutocompleteOption[] = [\n  // Popular Cancer Drugs\n  {\n    id: 'pembrolizumab',\n    label: 'Pembrolizumab (Keytruda)',\n    value: 'pembrolizumab',\n    type: 'drug',\n    category: 'PD-1 Inhibitor',\n    description: 'Immune checkpoint inhibitor for various cancers',\n    aliases: ['keytruda', 'mk-3475'],\n    frequency: 95,\n    fdaApproved: true,\n    isOncology: true,\n    targetGenes: ['PD1', 'PDL1'],\n    relatedTerms: ['immunotherapy', 'checkpoint inhibitor', 'PD-1']\n  },\n  {\n    id: 'nivolumab',\n    label: 'Nivolumab (Opdivo)',\n    value: 'nivolumab',\n    type: 'drug',\n    category: 'PD-1 Inhibitor',\n    description: 'Anti-PD-1 monoclonal antibody',\n    aliases: ['opdivo', 'bms-936558'],\n    frequency: 88,\n    fdaApproved: true,\n    isOncology: true,\n    targetGenes: ['PD1'],\n    relatedTerms: ['immunotherapy', 'melanoma', 'lung cancer']\n  },\n  {\n    id: 'trastuzumab',\n    label: 'Trastuzumab (Herceptin)',\n    value: 'trastuzumab',\n    type: 'drug',\n    category: 'HER2 Inhibitor',\n    description: 'Monoclonal antibody targeting HER2',\n    aliases: ['herceptin'],\n    frequency: 92,\n    fdaApproved: true,\n    isOncology: true,\n    targetGenes: ['HER2', 'ERBB2'],\n    relatedTerms: ['breast cancer', 'HER2 positive', 'targeted therapy']\n  },\n  {\n    id: 'imatinib',\n    label: 'Imatinib (Gleevec)',\n    value: 'imatinib',\n    type: 'drug',\n    category: 'Tyrosine Kinase Inhibitor',\n    description: 'BCR-ABL tyrosine kinase inhibitor',\n    aliases: ['gleevec', 'sti571'],\n    frequency: 85,\n    fdaApproved: true,\n    isOncology: true,\n    targetGenes: ['BCR-ABL', 'KIT', 'PDGFR'],\n    relatedTerms: ['CML', 'leukemia', 'GIST']\n  },\n  {\n    id: 'osimertinib',\n    label: 'Osimertinib (Tagrisso)',\n    value: 'osimertinib',\n    type: 'drug',\n    category: 'EGFR Inhibitor',\n    description: 'Third-generation EGFR inhibitor',\n    aliases: ['tagrisso', 'azd9291'],\n    frequency: 82,\n    fdaApproved: true,\n    isOncology: true,\n    targetGenes: ['EGFR', 'T790M'],\n    relatedTerms: ['NSCLC', 'lung cancer', 'EGFR mutation']\n  },\n  {\n    id: 'bevacizumab',\n    label: 'Bevacizumab (Avastin)',\n    value: 'bevacizumab',\n    type: 'drug',\n    category: 'VEGF Inhibitor',\n    description: 'Anti-VEGF monoclonal antibody',\n    aliases: ['avastin'],\n    frequency: 89,\n    fdaApproved: true,\n    isOncology: true,\n    targetGenes: ['VEGF'],\n    relatedTerms: ['angiogenesis', 'colorectal cancer', 'anti-angiogenic']\n  },\n  {\n    id: 'rituximab',\n    label: 'Rituximab (Rituxan)',\n    value: 'rituximab',\n    type: 'drug',\n    category: 'CD20 Inhibitor',\n    description: 'Anti-CD20 monoclonal antibody',\n    aliases: ['rituxan', 'mabthera'],\n    frequency: 87,\n    fdaApproved: true,\n    isOncology: true,\n    targetGenes: ['CD20'],\n    relatedTerms: ['lymphoma', 'B-cell', 'hematologic malignancy']\n  },\n  {\n    id: 'paclitaxel',\n    label: 'Paclitaxel (Taxol)',\n    value: 'paclitaxel',\n    type: 'drug',\n    category: 'Taxane',\n    description: 'Microtubule stabilizing agent',\n    aliases: ['taxol'],\n    frequency: 91,\n    fdaApproved: true,\n    isOncology: true,\n    relatedTerms: ['chemotherapy', 'breast cancer', 'ovarian cancer']\n  },\n  {\n    id: 'doxorubicin',\n    label: 'Doxorubicin (Adriamycin)',\n    value: 'doxorubicin',\n    type: 'drug',\n    category: 'Anthracycline',\n    description: 'DNA intercalating agent',\n    aliases: ['adriamycin'],\n    frequency: 86,\n    fdaApproved: true,\n    isOncology: true,\n    relatedTerms: ['chemotherapy', 'cardiotoxicity', 'sarcoma']\n  },\n  {\n    id: 'carboplatin',\n    label: 'Carboplatin',\n    value: 'carboplatin',\n    type: 'drug',\n    category: 'Platinum Compound',\n    description: 'DNA crosslinking agent',\n    frequency: 84,\n    fdaApproved: true,\n    isOncology: true,\n    relatedTerms: ['chemotherapy', 'ovarian cancer', 'lung cancer']\n  },\n\n  // Common/OTC Drugs\n  {\n    id: 'aspirin',\n    label: 'Aspirin (Acetylsalicylic Acid)',\n    value: 'aspirin',\n    type: 'drug',\n    category: 'NSAID',\n    description: 'Anti-inflammatory, pain reliever, blood thinner',\n    aliases: ['acetylsalicylic acid', 'ASA', 'asa', 'asp'],\n    frequency: 99,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['pain relief', 'inflammation', 'heart disease', 'blood thinner', 'stroke prevention']\n  },\n  {\n    id: 'acetaminophen',\n    label: 'Acetaminophen (Tylenol)',\n    value: 'acetaminophen',\n    type: 'drug',\n    category: 'Analgesic',\n    description: 'Pain reliever and fever reducer',\n    aliases: ['tylenol', 'paracetamol', 'acet'],\n    frequency: 98,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['pain relief', 'fever', 'headache']\n  },\n  {\n    id: 'ibuprofen',\n    label: 'Ibuprofen (Advil, Motrin)',\n    value: 'ibuprofen',\n    type: 'drug',\n    category: 'NSAID',\n    description: 'Anti-inflammatory pain reliever',\n    aliases: ['advil', 'motrin', 'ibu'],\n    frequency: 97,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['pain relief', 'inflammation', 'fever', 'arthritis']\n  },\n  {\n    id: 'naproxen',\n    label: 'Naproxen (Aleve)',\n    value: 'naproxen',\n    type: 'drug',\n    category: 'NSAID',\n    description: 'Long-acting anti-inflammatory',\n    aliases: ['aleve', 'naprosyn'],\n    frequency: 85,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['pain relief', 'inflammation', 'arthritis']\n  },\n  {\n    id: 'diphenhydramine',\n    label: 'Diphenhydramine (Benadryl)',\n    value: 'diphenhydramine',\n    type: 'drug',\n    category: 'Antihistamine',\n    description: 'Allergy relief and sleep aid',\n    aliases: ['benadryl', 'dph'],\n    frequency: 82,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['allergy', 'sleep', 'antihistamine', 'itching']\n  },\n  {\n    id: 'loratadine',\n    label: 'Loratadine (Claritin)',\n    value: 'loratadine',\n    type: 'drug',\n    category: 'Antihistamine',\n    description: 'Non-drowsy allergy medication',\n    aliases: ['claritin'],\n    frequency: 78,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['allergy', 'antihistamine', 'non-drowsy']\n  },\n  {\n    id: 'cetirizine',\n    label: 'Cetirizine (Zyrtec)',\n    value: 'cetirizine',\n    type: 'drug',\n    category: 'Antihistamine',\n    description: 'Allergy and hives treatment',\n    aliases: ['zyrtec'],\n    frequency: 76,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['allergy', 'hives', 'antihistamine']\n  },\n  {\n    id: 'omeprazole',\n    label: 'Omeprazole (Prilosec)',\n    value: 'omeprazole',\n    type: 'drug',\n    category: 'PPI',\n    description: 'Proton pump inhibitor for acid reflux',\n    aliases: ['prilosec', 'ppi'],\n    frequency: 89,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['acid reflux', 'heartburn', 'GERD', 'stomach acid']\n  },\n  {\n    id: 'ranitidine',\n    label: 'Ranitidine (Zantac)',\n    value: 'ranitidine',\n    type: 'drug',\n    category: 'H2 Blocker',\n    description: 'Histamine H2 receptor antagonist',\n    aliases: ['zantac'],\n    frequency: 75,\n    fdaApproved: false,\n    isOncology: false,\n    relatedTerms: ['acid reflux', 'heartburn', 'H2 blocker']\n  },\n  {\n    id: 'simvastatin',\n    label: 'Simvastatin (Zocor)',\n    value: 'simvastatin',\n    type: 'drug',\n    category: 'Statin',\n    description: 'Cholesterol-lowering medication',\n    aliases: ['zocor'],\n    frequency: 88,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['cholesterol', 'statin', 'heart disease', 'lipids']\n  },\n\n  // Psychology & Mental Health Drugs\n  {\n    id: 'sertraline',\n    label: 'Sertraline (Zoloft)',\n    value: 'sertraline',\n    type: 'drug',\n    category: 'Antidepressant',\n    description: 'SSRI for depression and anxiety',\n    aliases: ['zoloft', 'lustral'],\n    frequency: 95,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['depression', 'anxiety', 'SSRI', 'mental health']\n  },\n  {\n    id: 'fluoxetine',\n    label: 'Fluoxetine (Prozac)',\n    value: 'fluoxetine',\n    type: 'drug',\n    category: 'Antidepressant',\n    description: 'SSRI for depression and OCD',\n    aliases: ['prozac'],\n    frequency: 93,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['depression', 'OCD', 'SSRI', 'mental health']\n  },\n  {\n    id: 'escitalopram',\n    label: 'Escitalopram (Lexapro)',\n    value: 'escitalopram',\n    type: 'drug',\n    category: 'Antidepressant',\n    description: 'SSRI for depression and anxiety disorders',\n    aliases: ['lexapro', 'cipralex'],\n    frequency: 91,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['depression', 'anxiety', 'SSRI', 'panic disorder']\n  },\n  {\n    id: 'alprazolam',\n    label: 'Alprazolam (Xanax)',\n    value: 'alprazolam',\n    type: 'drug',\n    category: 'Benzodiazepine',\n    description: 'Short-acting benzodiazepine for anxiety',\n    aliases: ['xanax'],\n    frequency: 89,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['anxiety', 'panic disorder', 'benzodiazepine']\n  },\n  {\n    id: 'lorazepam',\n    label: 'Lorazepam (Ativan)',\n    value: 'lorazepam',\n    type: 'drug',\n    category: 'Benzodiazepine',\n    description: 'Benzodiazepine for anxiety and seizures',\n    aliases: ['ativan'],\n    frequency: 87,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['anxiety', 'seizures', 'benzodiazepine']\n  },\n  {\n    id: 'risperidone',\n    label: 'Risperidone (Risperdal)',\n    value: 'risperidone',\n    type: 'drug',\n    category: 'Antipsychotic',\n    description: 'Atypical antipsychotic',\n    aliases: ['risperdal'],\n    frequency: 83,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['schizophrenia', 'bipolar', 'antipsychotic']\n  },\n  {\n    id: 'quetiapine',\n    label: 'Quetiapine (Seroquel)',\n    value: 'quetiapine',\n    type: 'drug',\n    category: 'Antipsychotic',\n    description: 'Atypical antipsychotic for bipolar and schizophrenia',\n    aliases: ['seroquel'],\n    frequency: 85,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['bipolar disorder', 'schizophrenia', 'antipsychotic']\n  },\n  {\n    id: 'bupropion',\n    label: 'Bupropion (Wellbutrin)',\n    value: 'bupropion',\n    type: 'drug',\n    category: 'Antidepressant',\n    description: 'Atypical antidepressant and smoking cessation aid',\n    aliases: ['wellbutrin', 'zyban'],\n    frequency: 88,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['depression', 'smoking cessation', 'NDRI']\n  },\n\n  // Neurology Drugs\n  {\n    id: 'levodopa',\n    label: 'Levodopa/Carbidopa (Sinemet)',\n    value: 'levodopa',\n    type: 'drug',\n    category: 'Neurological',\n    description: 'Dopamine precursor for Parkinson\\'s disease',\n    aliases: ['sinemet', 'l-dopa'],\n    frequency: 90,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['parkinsons', 'dopamine', 'movement disorder']\n  },\n  {\n    id: 'gabapentin',\n    label: 'Gabapentin (Neurontin)',\n    value: 'gabapentin',\n    type: 'drug',\n    category: 'Anticonvulsant',\n    description: 'Anticonvulsant for neuropathic pain and seizures',\n    aliases: ['neurontin'],\n    frequency: 92,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['neuropathic pain', 'seizures', 'epilepsy']\n  },\n  {\n    id: 'pregabalin',\n    label: 'Pregabalin (Lyrica)',\n    value: 'pregabalin',\n    type: 'drug',\n    category: 'Anticonvulsant',\n    description: 'Anticonvulsant for neuropathic pain and fibromyalgia',\n    aliases: ['lyrica'],\n    frequency: 89,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['neuropathic pain', 'fibromyalgia', 'seizures']\n  },\n  {\n    id: 'phenytoin',\n    label: 'Phenytoin (Dilantin)',\n    value: 'phenytoin',\n    type: 'drug',\n    category: 'Anticonvulsant',\n    description: 'Classic anticonvulsant for epilepsy',\n    aliases: ['dilantin'],\n    frequency: 85,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['epilepsy', 'seizures', 'anticonvulsant']\n  },\n  {\n    id: 'valproic_acid',\n    label: 'Valproic Acid (Depakote)',\n    value: 'valproic acid',\n    type: 'drug',\n    category: 'Anticonvulsant',\n    description: 'Anticonvulsant and mood stabilizer',\n    aliases: ['depakote', 'divalproex'],\n    frequency: 87,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['epilepsy', 'bipolar disorder', 'migraine prevention']\n  },\n  {\n    id: 'donepezil',\n    label: 'Donepezil (Aricept)',\n    value: 'donepezil',\n    type: 'drug',\n    category: 'Cholinesterase Inhibitor',\n    description: 'Cholinesterase inhibitor for Alzheimer\\'s disease',\n    aliases: ['aricept'],\n    frequency: 88,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['alzheimers', 'dementia', 'cognitive impairment']\n  },\n\n  // Pain Relief Drugs\n  {\n    id: 'morphine',\n    label: 'Morphine',\n    value: 'morphine',\n    type: 'drug',\n    category: 'Opioid',\n    description: 'Strong opioid for severe pain',\n    aliases: ['ms contin', 'kadian'],\n    frequency: 90,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['severe pain', 'opioid', 'cancer pain']\n  },\n  {\n    id: 'oxycodone',\n    label: 'Oxycodone (OxyContin)',\n    value: 'oxycodone',\n    type: 'drug',\n    category: 'Opioid',\n    description: 'Opioid for moderate to severe pain',\n    aliases: ['oxycontin', 'percocet', 'roxicodone'],\n    frequency: 89,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['moderate pain', 'severe pain', 'opioid']\n  },\n  {\n    id: 'hydrocodone',\n    label: 'Hydrocodone (Vicodin)',\n    value: 'hydrocodone',\n    type: 'drug',\n    category: 'Opioid',\n    description: 'Opioid for moderate pain',\n    aliases: ['vicodin', 'norco', 'lortab'],\n    frequency: 88,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['moderate pain', 'opioid', 'dental pain']\n  },\n  {\n    id: 'fentanyl',\n    label: 'Fentanyl',\n    value: 'fentanyl',\n    type: 'drug',\n    category: 'Opioid',\n    description: 'Potent opioid for severe pain',\n    aliases: ['duragesic', 'actiq'],\n    frequency: 85,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['severe pain', 'cancer pain', 'breakthrough pain']\n  },\n  {\n    id: 'tramadol',\n    label: 'Tramadol (Ultram)',\n    value: 'tramadol',\n    type: 'drug',\n    category: 'Opioid',\n    description: 'Mild opioid for moderate pain',\n    aliases: ['ultram', 'conzip'],\n    frequency: 87,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['moderate pain', 'chronic pain', 'weak opioid']\n  },\n  {\n    id: 'celecoxib',\n    label: 'Celecoxib (Celebrex)',\n    value: 'celecoxib',\n    type: 'drug',\n    category: 'COX-2 Inhibitor',\n    description: 'Selective COX-2 inhibitor for pain and inflammation',\n    aliases: ['celebrex'],\n    frequency: 86,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['arthritis', 'inflammation', 'COX-2', 'joint pain']\n  },\n  {\n    id: 'diclofenac',\n    label: 'Diclofenac (Voltaren)',\n    value: 'diclofenac',\n    type: 'drug',\n    category: 'NSAID',\n    description: 'NSAID for pain and inflammation',\n    aliases: ['voltaren', 'cataflam'],\n    frequency: 84,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['arthritis', 'inflammation', 'topical pain relief']\n  },\n\n  // Additional Depression/Anxiety Drugs\n  {\n    id: 'venlafaxine',\n    label: 'Venlafaxine (Effexor)',\n    value: 'venlafaxine',\n    type: 'drug',\n    category: 'SNRI',\n    description: 'SNRI for depression and anxiety',\n    aliases: ['effexor'],\n    frequency: 86,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['depression', 'anxiety', 'SNRI']\n  },\n  {\n    id: 'duloxetine',\n    label: 'Duloxetine (Cymbalta)',\n    value: 'duloxetine',\n    type: 'drug',\n    category: 'SNRI',\n    description: 'SNRI for depression and neuropathic pain',\n    aliases: ['cymbalta'],\n    frequency: 85,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['depression', 'neuropathic pain', 'fibromyalgia']\n  },\n  {\n    id: 'citalopram',\n    label: 'Citalopram (Celexa)',\n    value: 'citalopram',\n    type: 'drug',\n    category: 'Antidepressant',\n    description: 'SSRI for depression',\n    aliases: ['celexa'],\n    frequency: 83,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['depression', 'SSRI']\n  },\n  {\n    id: 'paroxetine',\n    label: 'Paroxetine (Paxil)',\n    value: 'paroxetine',\n    type: 'drug',\n    category: 'Antidepressant',\n    description: 'SSRI for depression and anxiety',\n    aliases: ['paxil'],\n    frequency: 82,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['depression', 'anxiety', 'SSRI']\n  },\n  {\n    id: 'lithium',\n    label: 'Lithium',\n    value: 'lithium',\n    type: 'drug',\n    category: 'Mood Stabilizer',\n    description: 'Mood stabilizer for bipolar disorder',\n    aliases: ['lithobid', 'eskalith'],\n    frequency: 81,\n    fdaApproved: true,\n    isOncology: false,\n    relatedTerms: ['bipolar disorder', 'mood stabilizer', 'mania']\n  },\n\n  // Cancer Indications\n  {\n    id: 'breast_cancer',\n    label: 'Breast Cancer',\n    value: 'breast cancer',\n    type: 'indication',\n    category: 'Solid Tumor',\n    description: 'Most common cancer in women',\n    frequency: 95,\n    relatedTerms: ['HER2', 'ER', 'PR', 'triple negative', 'ductal carcinoma']\n  },\n  {\n    id: 'lung_cancer',\n    label: 'Lung Cancer',\n    value: 'lung cancer',\n    type: 'indication',\n    category: 'Solid Tumor',\n    description: 'Leading cause of cancer death',\n    frequency: 93,\n    relatedTerms: ['NSCLC', 'SCLC', 'EGFR', 'ALK', 'smoking']\n  },\n  {\n    id: 'colorectal_cancer',\n    label: 'Colorectal Cancer',\n    value: 'colorectal cancer',\n    type: 'indication',\n    category: 'Solid Tumor',\n    description: 'Cancer of colon or rectum',\n    frequency: 88,\n    relatedTerms: ['KRAS', 'BRAF', 'MSI', 'CRC', 'adenocarcinoma']\n  },\n  {\n    id: 'melanoma',\n    label: 'Melanoma',\n    value: 'melanoma',\n    type: 'indication',\n    category: 'Skin Cancer',\n    description: 'Aggressive skin cancer',\n    frequency: 86,\n    relatedTerms: ['BRAF', 'MEK', 'immunotherapy', 'metastatic']\n  },\n  {\n    id: 'leukemia',\n    label: 'Leukemia',\n    value: 'leukemia',\n    type: 'indication',\n    category: 'Hematologic Malignancy',\n    description: 'Blood cancer affecting white blood cells',\n    frequency: 84,\n    relatedTerms: ['AML', 'CML', 'ALL', 'CLL', 'bone marrow']\n  },\n  {\n    id: 'lymphoma',\n    label: 'Lymphoma',\n    value: 'lymphoma',\n    type: 'indication',\n    category: 'Hematologic Malignancy',\n    description: 'Cancer of lymphatic system',\n    frequency: 82,\n    relatedTerms: ['Hodgkin', 'non-Hodgkin', 'B-cell', 'T-cell']\n  },\n  {\n    id: 'prostate_cancer',\n    label: 'Prostate Cancer',\n    value: 'prostate cancer',\n    type: 'indication',\n    category: 'Solid Tumor',\n    description: 'Most common cancer in men',\n    frequency: 89,\n    relatedTerms: ['PSA', 'androgen', 'hormone therapy', 'Gleason score']\n  },\n  {\n    id: 'ovarian_cancer',\n    label: 'Ovarian Cancer',\n    value: 'ovarian cancer',\n    type: 'indication',\n    category: 'Solid Tumor',\n    description: 'Gynecologic malignancy',\n    frequency: 78,\n    relatedTerms: ['BRCA', 'PARP', 'CA-125', 'serous carcinoma']\n  },\n  {\n    id: 'pancreatic_cancer',\n    label: 'Pancreatic Cancer',\n    value: 'pancreatic cancer',\n    type: 'indication',\n    category: 'Solid Tumor',\n    description: 'Aggressive digestive system cancer',\n    frequency: 75,\n    relatedTerms: ['KRAS', 'BRCA2', 'gemcitabine', 'poor prognosis']\n  },\n  {\n    id: 'renal_cell_carcinoma',\n    label: 'Renal Cell Carcinoma',\n    value: 'renal cell carcinoma',\n    type: 'indication',\n    category: 'Solid Tumor',\n    description: 'Most common kidney cancer',\n    frequency: 73,\n    relatedTerms: ['VHL', 'clear cell', 'sunitinib', 'immunotherapy']\n  },\n\n  // Mechanisms of Action\n  {\n    id: 'checkpoint_inhibitor',\n    label: 'Checkpoint Inhibitor',\n    value: 'checkpoint inhibitor',\n    type: 'mechanism',\n    category: 'Immunotherapy',\n    description: 'Blocks immune checkpoint proteins',\n    frequency: 92,\n    relatedTerms: ['PD-1', 'PD-L1', 'CTLA-4', 'immunotherapy']\n  },\n  {\n    id: 'tyrosine_kinase_inhibitor',\n    label: 'Tyrosine Kinase Inhibitor',\n    value: 'tyrosine kinase inhibitor',\n    type: 'mechanism',\n    category: 'Targeted Therapy',\n    description: 'Inhibits tyrosine kinase enzymes',\n    frequency: 90,\n    relatedTerms: ['EGFR', 'BCR-ABL', 'VEGFR', 'targeted therapy']\n  },\n  {\n    id: 'monoclonal_antibody',\n    label: 'Monoclonal Antibody',\n    value: 'monoclonal antibody',\n    type: 'mechanism',\n    category: 'Targeted Therapy',\n    description: 'Engineered antibodies targeting specific antigens',\n    frequency: 88,\n    relatedTerms: ['mAb', 'targeted therapy', 'binding', 'specificity']\n  },\n  {\n    id: 'alkylating_agent',\n    label: 'Alkylating Agent',\n    value: 'alkylating agent',\n    type: 'mechanism',\n    category: 'Chemotherapy',\n    description: 'Forms covalent bonds with DNA',\n    frequency: 85,\n    relatedTerms: ['DNA damage', 'cyclophosphamide', 'cisplatin']\n  },\n  {\n    id: 'antimetabolite',\n    label: 'Antimetabolite',\n    value: 'antimetabolite',\n    type: 'mechanism',\n    category: 'Chemotherapy',\n    description: 'Interferes with DNA/RNA synthesis',\n    frequency: 83,\n    relatedTerms: ['folate antagonist', 'purine analog', 'pyrimidine analog']\n  },\n  {\n    id: 'topoisomerase_inhibitor',\n    label: 'Topoisomerase Inhibitor',\n    value: 'topoisomerase inhibitor',\n    type: 'mechanism',\n    category: 'Chemotherapy',\n    description: 'Prevents DNA unwinding',\n    frequency: 81,\n    relatedTerms: ['topotecan', 'irinotecan', 'etoposide']\n  },\n  {\n    id: 'proteasome_inhibitor',\n    label: 'Proteasome Inhibitor',\n    value: 'proteasome inhibitor',\n    type: 'mechanism',\n    category: 'Targeted Therapy',\n    description: 'Blocks protein degradation pathway',\n    frequency: 76,\n    relatedTerms: ['bortezomib', 'carfilzomib', 'protein degradation']\n  },\n  {\n    id: 'angiogenesis_inhibitor',\n    label: 'Angiogenesis Inhibitor',\n    value: 'angiogenesis inhibitor',\n    type: 'mechanism',\n    category: 'Targeted Therapy',\n    description: 'Prevents blood vessel formation',\n    frequency: 79,\n    relatedTerms: ['VEGF', 'bevacizumab', 'anti-angiogenic']\n  },\n\n  // Biomarkers\n  {\n    id: 'her2_positive',\n    label: 'HER2 Positive',\n    value: 'HER2 positive',\n    type: 'biomarker',\n    category: 'Protein Expression',\n    description: 'Overexpression of HER2 protein',\n    frequency: 94,\n    relatedTerms: ['breast cancer', 'trastuzumab', 'pertuzumab']\n  },\n  {\n    id: 'er_pr_positive',\n    label: 'ER/PR Positive',\n    value: 'ER/PR positive',\n    type: 'biomarker',\n    category: 'Hormone Receptor',\n    description: 'Estrogen/Progesterone receptor positive',\n    frequency: 92,\n    relatedTerms: ['breast cancer', 'hormone therapy', 'tamoxifen']\n  },\n  {\n    id: 'triple_negative',\n    label: 'Triple Negative',\n    value: 'triple negative',\n    type: 'biomarker',\n    category: 'Receptor Status',\n    description: 'ER-, PR-, HER2- breast cancer',\n    frequency: 87,\n    relatedTerms: ['breast cancer', 'chemotherapy', 'BRCA']\n  },\n  {\n    id: 'egfr_mutation',\n    label: 'EGFR Mutation',\n    value: 'EGFR mutation',\n    type: 'biomarker',\n    category: 'Genetic Mutation',\n    description: 'Epidermal growth factor receptor mutations',\n    frequency: 89,\n    relatedTerms: ['lung cancer', 'osimertinib', 'erlotinib']\n  },\n  {\n    id: 'kras_mutation',\n    label: 'KRAS Mutation',\n    value: 'KRAS mutation',\n    type: 'biomarker',\n    category: 'Genetic Mutation',\n    description: 'Kirsten rat sarcoma viral oncogene mutations',\n    frequency: 85,\n    relatedTerms: ['colorectal cancer', 'lung cancer', 'pancreatic cancer']\n  },\n  {\n    id: 'brca_mutation',\n    label: 'BRCA Mutation',\n    value: 'BRCA mutation',\n    type: 'biomarker',\n    category: 'Genetic Mutation',\n    description: 'BRCA1/2 tumor suppressor gene mutations',\n    frequency: 88,\n    relatedTerms: ['breast cancer', 'ovarian cancer', 'PARP inhibitor']\n  },\n  {\n    id: 'pd_l1_positive',\n    label: 'PD-L1 Positive',\n    value: 'PD-L1 positive',\n    type: 'biomarker',\n    category: 'Protein Expression',\n    description: 'Programmed death-ligand 1 expression',\n    frequency: 86,\n    relatedTerms: ['immunotherapy', 'pembrolizumab', 'checkpoint inhibitor']\n  },\n  {\n    id: 'msi_high',\n    label: 'MSI-High',\n    value: 'MSI-high',\n    type: 'biomarker',\n    category: 'Molecular Feature',\n    description: 'Microsatellite instability high',\n    frequency: 83,\n    relatedTerms: ['colorectal cancer', 'immunotherapy', 'mismatch repair']\n  },\n  {\n    id: 'tmb_high',\n    label: 'TMB-High',\n    value: 'TMB-high',\n    type: 'biomarker',\n    category: 'Molecular Feature',\n    description: 'Tumor mutational burden high',\n    frequency: 81,\n    relatedTerms: ['immunotherapy', 'checkpoint inhibitor', 'mutation load']\n  },\n\n  // Gene Targets\n  {\n    id: 'braf',\n    label: 'BRAF',\n    value: 'BRAF',\n    type: 'gene',\n    category: 'Oncogene',\n    description: 'Proto-oncogene B-Raf',\n    frequency: 84,\n    relatedTerms: ['melanoma', 'colorectal cancer', 'dabrafenib']\n  },\n  {\n    id: 'alk',\n    label: 'ALK',\n    value: 'ALK',\n    type: 'gene',\n    category: 'Fusion Gene',\n    description: 'Anaplastic lymphoma kinase',\n    frequency: 78,\n    relatedTerms: ['lung cancer', 'crizotinib', 'alectinib']\n  },\n  {\n    id: 'ros1',\n    label: 'ROS1',\n    value: 'ROS1',\n    type: 'gene',\n    category: 'Fusion Gene',\n    description: 'ROS proto-oncogene 1',\n    frequency: 72,\n    relatedTerms: ['lung cancer', 'crizotinib', 'entrectinib']\n  },\n  {\n    id: 'ntrk',\n    label: 'NTRK',\n    value: 'NTRK',\n    type: 'gene',\n    category: 'Fusion Gene',\n    description: 'Neurotrophic tyrosine receptor kinase',\n    frequency: 68,\n    relatedTerms: ['solid tumors', 'larotrectinib', 'entrectinib']\n  },\n  {\n    id: 'ret',\n    label: 'RET',\n    value: 'RET',\n    type: 'gene',\n    category: 'Fusion Gene',\n    description: 'Rearranged during transfection',\n    frequency: 70,\n    relatedTerms: ['lung cancer', 'thyroid cancer', 'selpercatinib']\n  }\n];\n\nconst AutocompleteSearch: React.FC<AutocompleteSearchProps> = ({\n  placeholder = \"Search drugs, indications, mechanisms...\",\n  onSelect,\n  onInputChange,\n  value = \"\",\n  maxResults = 10,\n  showCategories = true,\n  allowMultiple = false,\n  selectedOptions = [],\n  disabled = false,\n  loading = false,\n  className = \"\",\n  onOfflineChange\n}) => {\n  const [inputValue, setInputValue] = useState(value);\n  const [isOpen, setIsOpen] = useState(false);\n  const [filteredOptions, setFilteredOptions] = useState<AutocompleteOption[]>([]);\n  const [highlightedIndex, setHighlightedIndex] = useState(-1);\n  const [recentSearches, setRecentSearches] = useState<string[]>([]);\n  const [serverOptions, setServerOptions] = useState<AutocompleteOption[]>([]);\n  const [serverOffline, setServerOffline] = useState<boolean>(false);\n  \n  const inputRef = useRef<HTMLInputElement>(null);\n  const listRef = useRef<HTMLUListElement>(null);\n\n  // Load recent searches from localStorage\n  useEffect(() => {\n    const saved = localStorage.getItem('oncosaferx_recent_searches');\n    if (saved) {\n      try {\n        setRecentSearches(JSON.parse(saved));\n      } catch (e) {\n        console.warn('Failed to parse recent searches:', e);\n      }\n    }\n  }, []);\n\n  // Fetch server suggestions when typing (debounced minimal)\n  useEffect(() => {\n    let abort = false;\n    if (inputValue.trim().length < 2) { setServerOptions([]); setServerOffline(false); return; }\n    const t = setTimeout(async () => {\n      try {\n        const resp = await fetch(`/api/drugs/search?q=${encodeURIComponent(inputValue)}`);\n        if (!resp.ok) throw new Error('suggestions failed');\n        const data = await resp.json();\n        const opts: AutocompleteOption[] = (data.results || []).slice(0, maxResults).map((s: any) => ({\n          id: s.id || s.rxcui || s.name,\n          label: s.name,\n          value: s.name,\n          type: 'drug',\n          category: 'Drug'\n        }));\n        if (!abort) {\n          setServerOptions(opts);\n          // Check if we're offline based on RxNorm data availability\n          const isOffline = !data.sources?.rxnorm || data.sources.rxnorm === 0;\n          setServerOffline(isOffline);\n          onOfflineChange?.(isOffline);\n        }\n      } catch {\n        if (!abort) { setServerOptions([]); }\n      }\n    }, 250);\n    return () => { abort = true; clearTimeout(t); };\n  }, [inputValue, maxResults, onOfflineChange]);\n\n  // Filter options based on input (combine server + local)\n  useEffect(() => {\n    if (!inputValue.trim()) {\n      // Show recent searches and popular options when empty\n      const popular = COMPREHENSIVE_OPTIONS\n        .filter(opt => opt.type === 'drug' && opt.frequency && opt.frequency > 80)\n        .sort((a, b) => (b.frequency || 0) - (a.frequency || 0))\n        .slice(0, maxResults);\n      setFilteredOptions(popular);\n      return;\n    }\n\n    const searchTerm = inputValue.toLowerCase().trim();\n    \n    // Enhanced fuzzy matching function\n    const fuzzyMatch = (text: string, search: string): { matches: boolean; score: number } => {\n      text = text.toLowerCase();\n      search = search.toLowerCase();\n      \n      // Exact match - highest score\n      if (text === search) return { matches: true, score: 100 };\n      \n      // Starts with - very high score\n      if (text.startsWith(search)) return { matches: true, score: 90 };\n      \n      // Contains - high score\n      if (text.includes(search)) return { matches: true, score: 80 };\n      \n      // Fuzzy matching for partial typing (e.g., \"a-s-p\" for \"aspirin\")\n      if (search.includes('-') || search.includes(' ') || search.includes('.')) {\n        const cleanSearch = search.replace(/[-\\s.]/g, '');\n        if (text.includes(cleanSearch)) return { matches: true, score: 70 };\n      }\n      \n      // Acronym matching (e.g., \"asp\" for \"aspirin\")\n      if (search.length >= 2) {\n        const words = text.split(/[\\s-()]/);\n        const acronym = words.map(word => word.charAt(0)).join('');\n        if (acronym.includes(search)) return { matches: true, score: 60 };\n        \n        // Check if search is prefix of first letters\n        let charIndex = 0;\n        for (const char of search) {\n          const foundIndex = text.indexOf(char, charIndex);\n          if (foundIndex === -1) break;\n          charIndex = foundIndex + 1;\n          if (charIndex >= text.length) break;\n        }\n        if (charIndex > 0 && search.length >= 3) {\n          return { matches: true, score: 50 };\n        }\n      }\n      \n      // Levenshtein-inspired partial matching\n      if (search.length >= 3) {\n        let matches = 0;\n        let lastIndex = -1;\n        for (const char of search) {\n          const index = text.indexOf(char, lastIndex + 1);\n          if (index > lastIndex) {\n            matches++;\n            lastIndex = index;\n          }\n        }\n        if (matches / search.length >= 0.7) {\n          return { matches: true, score: 40 };\n        }\n      }\n      \n      return { matches: false, score: 0 };\n    };\n\n    const matches = COMPREHENSIVE_OPTIONS.filter(option => {\n      // Only show drugs, not indications/cancer types\n      if (option.type !== 'drug') return false;\n      \n      // Check main label with fuzzy matching\n      const labelMatch = fuzzyMatch(option.label, searchTerm);\n      if (labelMatch.matches) return true;\n      \n      // Check value\n      const valueMatch = fuzzyMatch(option.value, searchTerm);\n      if (valueMatch.matches) return true;\n      \n      // Check aliases with fuzzy matching\n      if (option.aliases?.some(alias => fuzzyMatch(alias, searchTerm).matches)) return true;\n      \n      // Check related terms\n      if (option.relatedTerms?.some(term => fuzzyMatch(term, searchTerm).matches)) return true;\n      \n      // Check description\n      if (option.description && fuzzyMatch(option.description, searchTerm).matches) return true;\n      \n      // Check category\n      if (fuzzyMatch(option.category, searchTerm).matches) return true;\n      \n      return false;\n    }).map(option => {\n      // Calculate relevance score for sorting\n      const labelMatch = fuzzyMatch(option.label, searchTerm);\n      const valueMatch = fuzzyMatch(option.value, searchTerm);\n      const aliasMatch = option.aliases ? Math.max(...option.aliases.map(alias => fuzzyMatch(alias, searchTerm).score)) : 0;\n      const score = Math.max(labelMatch.score, valueMatch.score, aliasMatch);\n      \n      return { ...option, relevanceScore: score };\n    });\n\n    // Sort by relevance using fuzzy match scores\n    const sorted = matches.sort((a: any, b: any) => {\n      // Sort by relevance score first\n      if (a.relevanceScore !== b.relevanceScore) {\n        return b.relevanceScore - a.relevanceScore;\n      }\n      \n      // For equal relevance scores, prefer FDA approved drugs\n      if (a.type === 'drug' && b.type === 'drug') {\n        if (a.fdaApproved && !b.fdaApproved) return -1;\n        if (!a.fdaApproved && b.fdaApproved) return 1;\n      }\n      \n      // Then sort by frequency\n      return (b.frequency || 0) - (a.frequency || 0);\n    });\n\n    // Prefer server options when available; fallback to local sorted\n    const combined = serverOptions.length > 0 ? serverOptions.slice(0, maxResults) : sorted.slice(0, maxResults);\n    setFilteredOptions(combined);\n    setHighlightedIndex(-1);\n  }, [inputValue, maxResults, serverOptions]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value;\n    setInputValue(newValue);\n    onInputChange?.(newValue);\n    setIsOpen(true);\n  };\n\n  const handleOptionSelect = (option: AutocompleteOption) => {\n    if (allowMultiple) {\n      if (!selectedOptions.find(opt => opt.id === option.id)) {\n        onSelect(option);\n      }\n    } else {\n      setInputValue(option.label);\n      onSelect(option);\n    }\n    \n    // Save to recent searches\n    const updated = [option.value, ...recentSearches.filter(s => s !== option.value)].slice(0, 10);\n    setRecentSearches(updated);\n    localStorage.setItem('oncosaferx_recent_searches', JSON.stringify(updated));\n    \n    setIsOpen(false);\n    setHighlightedIndex(-1);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (!isOpen) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setHighlightedIndex(prev => \n          prev < filteredOptions.length - 1 ? prev + 1 : prev\n        );\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        setHighlightedIndex(prev => prev > 0 ? prev - 1 : prev);\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (highlightedIndex >= 0 && filteredOptions[highlightedIndex]) {\n          handleOptionSelect(filteredOptions[highlightedIndex]);\n        }\n        break;\n      case 'Escape':\n        setIsOpen(false);\n        setHighlightedIndex(-1);\n        inputRef.current?.blur();\n        break;\n    }\n  };\n\n  const getOptionIcon = (type: string) => {\n    switch (type) {\n      case 'drug': return <Pill className=\"h-4 w-4 text-blue-500\" />;\n      case 'indication': return <Target className=\"h-4 w-4 text-red-500\" />;\n      case 'mechanism': return <Zap className=\"h-4 w-4 text-purple-500\" />;\n      case 'biomarker': return <Activity className=\"h-4 w-4 text-green-500\" />;\n      case 'gene': return <Heart className=\"h-4 w-4 text-pink-500\" />;\n      case 'class': return <Users className=\"h-4 w-4 text-orange-500\" />;\n      default: return <Search className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  const removeSelectedOption = (optionId: string) => {\n    // This would be handled by parent component\n    console.log('Remove option:', optionId);\n  };\n\n  return (\n    <div className={`relative ${className}`}>\n      {/* Selected Options (for multiple selection) */}\n      {allowMultiple && selectedOptions.length > 0 && (\n        <div className=\"flex flex-wrap gap-2 mb-2\">\n          {selectedOptions.map(option => (\n            <div\n              key={option.id}\n              className=\"flex items-center space-x-1 px-3 py-1 bg-violet-100 text-violet-800 rounded-full text-sm\"\n            >\n              {getOptionIcon(option.type)}\n              <span>{option.label}</span>\n              <button\n                onClick={() => removeSelectedOption(option.id)}\n                className=\"text-violet-600 hover:text-violet-800\"\n              >\n                <X className=\"h-3 w-3\" />\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Search Input */}\n      <div className=\"relative\">\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n          onFocus={() => setIsOpen(true)}\n          onBlur={() => setTimeout(() => setIsOpen(false), 200)}\n          placeholder={placeholder}\n          disabled={disabled || loading}\n          className={`w-full pl-10 pr-10 py-3 text-lg border border-gray-300 rounded-xl focus:ring-2 focus:ring-violet-500 focus:border-violet-500 ${\n            disabled ? 'bg-gray-100 cursor-not-allowed' : 'bg-white'\n          }`}\n        />\n        \n        {loading && (\n          <Loader2 className=\"absolute right-8 top-1/2 transform -translate-y-1/2 h-5 w-5 text-violet-600 animate-spin\" />\n        )}\n        \n        <ChevronDown className={`absolute right-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400 transition-transform ${\n          isOpen ? 'rotate-180' : ''\n        }`} />\n      </div>\n\n      {/* Dropdown Options */}\n      {isOpen && (\n        <div className=\"absolute z-50 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg max-h-96 overflow-hidden\">\n          {/* Header */}\n          {inputValue.trim() === '' && (\n            <div className=\"px-4 py-2 bg-gray-50 border-b text-sm text-gray-600\">\n              {recentSearches.length > 0 ? 'Recent searches & Popular options' : 'Popular options'}\n            </div>\n          )}\n          \n          {filteredOptions.length > 0 ? (\n            <ul ref={listRef} className=\"max-h-80 overflow-y-auto\">\n              {filteredOptions.map((option, index) => (\n                <li key={option.id}>\n                  <button\n                    onClick={() => handleOptionSelect(option)}\n                    className={`w-full flex items-center space-x-3 px-4 py-3 text-left hover:bg-gray-50 ${\n                      index === highlightedIndex ? 'bg-violet-50 border-l-4 border-violet-500' : ''\n                    }`}\n                  >\n                    {getOptionIcon(option.type)}\n                    \n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center space-x-2 mb-1\">\n                        <span className=\"font-medium text-gray-900 truncate\">\n                          {option.label}\n                        </span>\n                        {option.fdaApproved && (\n                          <CheckCircle className=\"h-3 w-3 text-green-500 flex-shrink-0\" />\n                        )}\n                        {option.isOncology && (\n                          <Target className=\"h-3 w-3 text-red-500 flex-shrink-0\" />\n                        )}\n                      </div>\n                      \n                      {showCategories && (\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-xs text-gray-500 capitalize\">\n                            {option.type} • {option.category}\n                          </span>\n                          {option.frequency && option.frequency > 85 && (\n                            <div className=\"flex items-center space-x-1\">\n                              <Star className=\"h-3 w-3 text-yellow-500\" />\n                              <span className=\"text-xs text-yellow-600\">Popular</span>\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      \n                      {option.description && (\n                        <p className=\"text-xs text-gray-400 mt-1 truncate\">\n                          {option.description}\n                        </p>\n                      )}\n                    </div>\n                    \n                    {option.type === 'drug' && (\n                      <div className=\"text-right flex-shrink-0\">\n                        <div className=\"text-xs text-gray-500\">\n                          {option.fdaApproved ? 'FDA Approved' : 'Investigational'}\n                        </div>\n                      </div>\n                    )}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div className=\"px-4 py-6 text-center text-gray-500\">\n              <Search className=\"h-8 w-8 mx-auto mb-2 text-gray-300\" />\n              <p>No matches found</p>\n              <p className=\"text-xs mt-1\">Try a different search term</p>\n            </div>\n          )}\n          \n          {/* Footer */}\n          {filteredOptions.length > 0 && (\n            <div className=\"px-4 py-2 bg-gray-50 border-t text-xs text-gray-500 text-center\">\n              Showing {filteredOptions.length} result{filteredOptions.length !== 1 ? 's' : ''} \n              {inputValue.trim() && ` for \"${inputValue}\"`}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AutocompleteSearch;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { ChevronDown, X, Check, Search } from 'lucide-react';\n\ninterface FilterOption {\n  value: string;\n  label: string;\n  description?: string;\n  count?: number;\n  category?: string;\n  popular?: boolean;\n}\n\ninterface FilterAutocompleteProps {\n  options: FilterOption[];\n  selectedValues: string[];\n  onSelectionChange: (values: string[]) => void;\n  placeholder?: string;\n  label?: string;\n  maxSelection?: number;\n  searchable?: boolean;\n  showCounts?: boolean;\n  className?: string;\n}\n\n// Comprehensive filter options for each category\nconst THERAPEUTIC_CLASS_OPTIONS: FilterOption[] = [\n  { value: 'antineoplastic', label: 'Antineoplastic Agents', description: 'Drugs that inhibit or prevent cancer growth', count: 1247, popular: true },\n  { value: 'immunotherapy', label: 'Immunotherapy', description: 'Treatments that use the immune system', count: 324, popular: true },\n  { value: 'targeted_therapy', label: 'Targeted Therapy', description: 'Drugs targeting specific cancer mechanisms', count: 456, popular: true },\n  { value: 'chemotherapy', label: 'Chemotherapy', description: 'Traditional cytotoxic agents', count: 892, popular: true },\n  { value: 'hormone_therapy', label: 'Hormone Therapy', description: 'Treatments that block hormones', count: 156 },\n  { value: 'supportive_care', label: 'Supportive Care', description: 'Drugs for managing side effects', count: 234 },\n  { value: 'pain_management', label: 'Pain Management', description: 'Analgesics and pain control', count: 187 },\n  { value: 'antiemetic', label: 'Antiemetic', description: 'Anti-nausea medications', count: 89 },\n  { value: 'growth_factor', label: 'Growth Factor', description: 'Stimulate blood cell production', count: 67 },\n  { value: 'bisphosphonate', label: 'Bisphosphonate', description: 'Bone strengthening agents', count: 45 },\n  { value: 'radioprotective', label: 'Radioprotective', description: 'Protect from radiation damage', count: 23 },\n  { value: 'differentiation_agent', label: 'Differentiation Agent', description: 'Promote cell maturation', count: 34 }\n];\n\nconst MECHANISM_OPTIONS: FilterOption[] = [\n  { value: 'kinase_inhibitor', label: 'Kinase Inhibitor', description: 'Blocks protein kinase enzymes', count: 234, popular: true },\n  { value: 'monoclonal_antibody', label: 'Monoclonal Antibody', description: 'Engineered antibodies', count: 187, popular: true },\n  { value: 'checkpoint_inhibitor', label: 'Checkpoint Inhibitor', description: 'Immune checkpoint blockade', count: 45, popular: true },\n  { value: 'alkylating_agent', label: 'Alkylating Agent', description: 'DNA crosslinking compounds', count: 156 },\n  { value: 'antimetabolite', label: 'Antimetabolite', description: 'Interferes with DNA/RNA synthesis', count: 123 },\n  { value: 'topoisomerase_inhibitor', label: 'Topoisomerase Inhibitor', description: 'Prevents DNA unwinding', count: 98 },\n  { value: 'proteasome_inhibitor', label: 'Proteasome Inhibitor', description: 'Blocks protein degradation', count: 34 },\n  { value: 'angiogenesis_inhibitor', label: 'Angiogenesis Inhibitor', description: 'Prevents blood vessel formation', count: 67 },\n  { value: 'histone_deacetylase_inhibitor', label: 'HDAC Inhibitor', description: 'Epigenetic modifier', count: 29 },\n  { value: 'mtor_inhibitor', label: 'mTOR Inhibitor', description: 'Blocks mTOR pathway', count: 23 },\n  { value: 'cyclin_dependent_kinase_inhibitor', label: 'CDK Inhibitor', description: 'Cell cycle inhibitor', count: 18 },\n  { value: 'poly_adp_ribose_polymerase_inhibitor', label: 'PARP Inhibitor', description: 'DNA repair inhibitor', count: 12 }\n];\n\nconst INDICATION_OPTIONS: FilterOption[] = [\n  { value: 'breast_cancer', label: 'Breast Cancer', description: 'Malignant breast tumors', count: 456, popular: true },\n  { value: 'lung_cancer', label: 'Lung Cancer', description: 'Non-small cell and small cell', count: 423, popular: true },\n  { value: 'colorectal_cancer', label: 'Colorectal Cancer', description: 'Colon and rectal cancers', count: 234, popular: true },\n  { value: 'melanoma', label: 'Melanoma', description: 'Malignant skin cancer', count: 156, popular: true },\n  { value: 'leukemia', label: 'Leukemia', description: 'Blood cancer varieties', count: 189 },\n  { value: 'lymphoma', label: 'Lymphoma', description: 'Lymphatic system cancers', count: 167 },\n  { value: 'prostate_cancer', label: 'Prostate Cancer', description: 'Male reproductive cancer', count: 145 },\n  { value: 'ovarian_cancer', label: 'Ovarian Cancer', description: 'Female reproductive cancer', count: 123 },\n  { value: 'pancreatic_cancer', label: 'Pancreatic Cancer', description: 'Digestive system cancer', count: 98 },\n  { value: 'renal_cell_carcinoma', label: 'Renal Cell Carcinoma', description: 'Kidney cancer', count: 87 },\n  { value: 'hepatocellular_carcinoma', label: 'Hepatocellular Carcinoma', description: 'Liver cancer', count: 76 },\n  { value: 'glioblastoma', label: 'Glioblastoma', description: 'Aggressive brain tumor', count: 65 },\n  { value: 'sarcoma', label: 'Sarcoma', description: 'Connective tissue cancer', count: 54 },\n  { value: 'multiple_myeloma', label: 'Multiple Myeloma', description: 'Plasma cell cancer', count: 43 },\n  { value: 'bladder_cancer', label: 'Bladder Cancer', description: 'Urinary system cancer', count: 32 }\n];\n\nconst BIOMARKER_OPTIONS: FilterOption[] = [\n  { value: 'her2_positive', label: 'HER2 Positive', description: 'HER2 protein overexpression', count: 234, popular: true },\n  { value: 'er_pr_positive', label: 'ER/PR Positive', description: 'Hormone receptor positive', count: 198, popular: true },\n  { value: 'triple_negative', label: 'Triple Negative', description: 'ER-, PR-, HER2- breast cancer', count: 123, popular: true },\n  { value: 'egfr_mutation', label: 'EGFR Mutation', description: 'EGFR gene alterations', count: 187, popular: true },\n  { value: 'kras_mutation', label: 'KRAS Mutation', description: 'KRAS oncogene mutations', count: 156 },\n  { value: 'brca_mutation', label: 'BRCA Mutation', description: 'BRCA1/2 gene mutations', count: 89 },\n  { value: 'pd_l1_positive', label: 'PD-L1 Positive', description: 'PD-L1 expression ≥1%', count: 167 },\n  { value: 'msi_high', label: 'MSI-High', description: 'Microsatellite instability', count: 78 },\n  { value: 'tmb_high', label: 'TMB-High', description: 'High tumor mutation burden', count: 67 },\n  { value: 'braf_mutation', label: 'BRAF Mutation', description: 'BRAF V600E mutations', count: 98 },\n  { value: 'alk_fusion', label: 'ALK Fusion', description: 'ALK gene rearrangements', count: 45 },\n  { value: 'ros1_fusion', label: 'ROS1 Fusion', description: 'ROS1 gene fusions', count: 23 },\n  { value: 'ntrk_fusion', label: 'NTRK Fusion', description: 'NTRK gene fusions', count: 18 },\n  { value: 'ret_fusion', label: 'RET Fusion', description: 'RET gene rearrangements', count: 34 },\n  { value: 'met_amplification', label: 'MET Amplification', description: 'MET gene amplification', count: 29 }\n];\n\nconst APPROVAL_STATUS_OPTIONS: FilterOption[] = [\n  { value: 'fda_approved', label: 'FDA Approved', description: 'Full FDA approval', count: 1456, popular: true },\n  { value: 'accelerated_approval', label: 'Accelerated Approval', description: 'FDA accelerated pathway', count: 89 },\n  { value: 'breakthrough_therapy', label: 'Breakthrough Therapy', description: 'FDA breakthrough designation', count: 67 },\n  { value: 'fast_track', label: 'Fast Track', description: 'FDA fast track status', count: 123 },\n  { value: 'orphan_drug', label: 'Orphan Drug', description: 'Rare disease designation', count: 234 },\n  { value: 'priority_review', label: 'Priority Review', description: 'Expedited FDA review', count: 156 },\n  { value: 'ema_approved', label: 'EMA Approved', description: 'European approval', count: 1234 },\n  { value: 'conditional_approval', label: 'Conditional Approval', description: 'Conditional marketing authorization', count: 45 },\n  { value: 'investigational', label: 'Investigational', description: 'In clinical trials', count: 567 }\n];\n\nconst CLINICAL_TRIAL_PHASE_OPTIONS: FilterOption[] = [\n  { value: 'approved', label: 'FDA Approved', description: 'Marketed drugs', count: 1456, popular: true },\n  { value: 'phase_4', label: 'Phase IV', description: 'Post-marketing surveillance', count: 234 },\n  { value: 'phase_3', label: 'Phase III', description: 'Large-scale efficacy trials', count: 345, popular: true },\n  { value: 'phase_2', label: 'Phase II', description: 'Dose-finding and efficacy', count: 567 },\n  { value: 'phase_1', label: 'Phase I', description: 'First-in-human safety', count: 789 },\n  { value: 'phase_1_2', label: 'Phase I/II', description: 'Combined early phases', count: 123 },\n  { value: 'phase_2_3', label: 'Phase II/III', description: 'Combined late phases', count: 89 },\n  { value: 'investigational', label: 'Investigational', description: 'All trial phases', count: 1234 }\n];\n\nconst FilterAutocomplete: React.FC<FilterAutocompleteProps> = ({\n  options,\n  selectedValues,\n  onSelectionChange,\n  placeholder = \"Select options...\",\n  label,\n  maxSelection,\n  searchable = true,\n  showCounts = true,\n  className = \"\"\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  \n  const containerRef = useRef<HTMLDivElement>(null);\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!searchTerm.trim()) {\n      // Show popular options first when no search\n      const sorted = [...options].sort((a, b) => {\n        if (a.popular && !b.popular) return -1;\n        if (!a.popular && b.popular) return 1;\n        return (b.count || 0) - (a.count || 0);\n      });\n      setFilteredOptions(sorted);\n    } else {\n      const filtered = options.filter(option =>\n        option.label.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        option.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        option.value.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n      setFilteredOptions(filtered);\n    }\n  }, [searchTerm, options]);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (containerRef.current && !containerRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const handleOptionToggle = (value: string) => {\n    const isSelected = selectedValues.includes(value);\n    let newValues: string[];\n\n    if (isSelected) {\n      newValues = selectedValues.filter(v => v !== value);\n    } else {\n      if (maxSelection && selectedValues.length >= maxSelection) {\n        return; // Don't add if max selection reached\n      }\n      newValues = [...selectedValues, value];\n    }\n\n    onSelectionChange(newValues);\n  };\n\n  const removeValue = (value: string) => {\n    onSelectionChange(selectedValues.filter(v => v !== value));\n  };\n\n  const clearAll = () => {\n    onSelectionChange([]);\n  };\n\n  const getSelectedLabels = () => {\n    return selectedValues.map(value => {\n      const option = options.find(opt => opt.value === value);\n      return option?.label || value;\n    });\n  };\n\n  return (\n    <div ref={containerRef} className={`relative ${className}`}>\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n          {label}\n        </label>\n      )}\n      \n      {/* Selected Values Display */}\n      {selectedValues.length > 0 && (\n        <div className=\"flex flex-wrap gap-1 mb-2\">\n          {selectedValues.map(value => {\n            const option = options.find(opt => opt.value === value);\n            return (\n              <span\n                key={value}\n                className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-violet-100 text-violet-800\"\n              >\n                {option?.label || value}\n                <button\n                  onClick={() => removeValue(value)}\n                  className=\"ml-1 text-violet-600 hover:text-violet-800\"\n                >\n                  <X className=\"h-3 w-3\" />\n                </button>\n              </span>\n            );\n          })}\n          {selectedValues.length > 1 && (\n            <button\n              onClick={clearAll}\n              className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100 text-gray-600 hover:bg-gray-200\"\n            >\n              Clear all\n            </button>\n          )}\n        </div>\n      )}\n\n      {/* Trigger Button */}\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"w-full flex items-center justify-between px-3 py-2 border border-gray-300 rounded-lg bg-white hover:bg-gray-50 focus:ring-2 focus:ring-violet-500 focus:border-violet-500\"\n      >\n        <span className={`text-sm ${selectedValues.length === 0 ? 'text-gray-500' : 'text-gray-900'}`}>\n          {selectedValues.length === 0 \n            ? placeholder \n            : `${selectedValues.length} selected`\n          }\n        </span>\n        <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${isOpen ? 'rotate-180' : ''}`} />\n      </button>\n\n      {/* Dropdown */}\n      {isOpen && (\n        <div className=\"absolute z-50 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg max-h-80 overflow-hidden\">\n          {/* Search Input */}\n          {searchable && (\n            <div className=\"p-3 border-b\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <input\n                  ref={searchInputRef}\n                  type=\"text\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  placeholder=\"Search options...\"\n                  className=\"w-full pl-9 pr-3 py-2 text-sm border border-gray-300 rounded-md focus:ring-2 focus:ring-violet-500 focus:border-violet-500\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Options List */}\n          <div className=\"max-h-60 overflow-y-auto\">\n            {filteredOptions.length > 0 ? (\n              filteredOptions.map(option => (\n                <button\n                  key={option.value}\n                  onClick={() => handleOptionToggle(option.value)}\n                  className=\"w-full flex items-center justify-between px-3 py-2 text-left hover:bg-gray-50 focus:bg-gray-50\"\n                  disabled={maxSelection && selectedValues.length >= maxSelection && !selectedValues.includes(option.value)}\n                >\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center space-x-2\">\n                      <span className={`text-sm font-medium ${\n                        selectedValues.includes(option.value) ? 'text-violet-700' : 'text-gray-900'\n                      }`}>\n                        {option.label}\n                      </span>\n                      {option.popular && (\n                        <span className=\"px-1.5 py-0.5 text-xs bg-yellow-100 text-yellow-800 rounded-full\">\n                          Popular\n                        </span>\n                      )}\n                    </div>\n                    {option.description && (\n                      <p className=\"text-xs text-gray-500 mt-0.5 truncate\">\n                        {option.description}\n                      </p>\n                    )}\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2 ml-2\">\n                    {showCounts && option.count && (\n                      <span className=\"text-xs text-gray-400\">\n                        {option.count}\n                      </span>\n                    )}\n                    {selectedValues.includes(option.value) && (\n                      <Check className=\"h-4 w-4 text-violet-600\" />\n                    )}\n                  </div>\n                </button>\n              ))\n            ) : (\n              <div className=\"px-3 py-4 text-center text-gray-500\">\n                <Search className=\"h-6 w-6 mx-auto mb-2 text-gray-300\" />\n                <p className=\"text-sm\">No options found</p>\n              </div>\n            )}\n          </div>\n\n          {/* Footer */}\n          {filteredOptions.length > 0 && (\n            <div className=\"px-3 py-2 bg-gray-50 border-t text-xs text-gray-500 text-center\">\n              {selectedValues.length > 0 && (\n                <span>{selectedValues.length} selected • </span>\n              )}\n              {filteredOptions.length} option{filteredOptions.length !== 1 ? 's' : ''}\n              {maxSelection && (\n                <span> • Max {maxSelection}</span>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FilterAutocomplete;\nexport {\n  THERAPEUTIC_CLASS_OPTIONS,\n  MECHANISM_OPTIONS,\n  INDICATION_OPTIONS,\n  BIOMARKER_OPTIONS,\n  APPROVAL_STATUS_OPTIONS,\n  CLINICAL_TRIAL_PHASE_OPTIONS\n};","import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  Search,\n  Brain,\n  Target,\n  Zap,\n  Activity,\n  Microscope,\n  Pill,\n  Heart,\n  Shield,\n  Sparkles,\n  Filter,\n  TrendingUp,\n  Clock,\n  CheckCircle,\n  AlertTriangle,\n  BookOpen,\n  BarChart3,\n  Users,\n  Globe,\n  RefreshCw,\n  Download,\n  Upload,\n  Settings,\n  Info,\n  Star,\n  ChevronDown,\n  ChevronUp,\n  X,\n  Plus,\n  Minus\n} from 'lucide-react';\nimport Card from '../UI/Card';\nimport AutocompleteSearch from './AutocompleteSearch';\nimport FilterAutocomplete, {\n  THERAPEUTIC_CLASS_OPTIONS,\n  MECHANISM_OPTIONS,\n  INDICATION_OPTIONS,\n  BIOMARKER_OPTIONS,\n  APPROVAL_STATUS_OPTIONS,\n  CLINICAL_TRIAL_PHASE_OPTIONS\n} from './FilterAutocomplete';\n\ninterface DrugSearchFilters {\n  query: string;\n  drugType: string[];\n  therapeuticClass: string[];\n  mechanismOfAction: string[];\n  indication: string[];\n  biomarker: string[];\n  approvalStatus: string[];\n  clinicalTrialPhase: string[];\n  hasInteractions: boolean;\n  hasGenomicFactors: boolean;\n  requiresMonitoring: boolean;\n  isOncologyDrug: boolean;\n  isOrphanDrug: boolean;\n  hasBlackBoxWarning: boolean;\n}\n\ninterface AISearchSuggestion {\n  type: 'drug' | 'indication' | 'mechanism' | 'biomarker' | 'class' | 'symptom';\n  text: string;\n  confidence: number;\n  category: string;\n  description?: string;\n  relevantDrugs?: string[];\n  alternativeTerms?: string[];\n}\n\ninterface SmartRecommendation {\n  id: string;\n  title: string;\n  description: string;\n  type: 'similar_drugs' | 'alternative_therapy' | 'combination' | 'monitoring' | 'contraindication';\n  confidence: number;\n  evidence_level: 'high' | 'moderate' | 'low';\n  drug_suggestions?: string[];\n  reasoning: string;\n}\n\nconst ImprovedDrugSearch: React.FC<{ onOfflineChange?: (offline: boolean) => void }> = ({ onOfflineChange }) => {\n  const [filters, setFilters] = useState<DrugSearchFilters>({\n    query: '',\n    drugType: [],\n    therapeuticClass: [],\n    mechanismOfAction: [],\n    indication: [],\n    biomarker: [],\n    approvalStatus: [],\n    clinicalTrialPhase: [],\n    hasInteractions: false,\n    hasGenomicFactors: false,\n    requiresMonitoring: false,\n    isOncologyDrug: false,\n    isOrphanDrug: false,\n    hasBlackBoxWarning: false\n  });\n\n  const [searchSuggestions, setSearchSuggestions] = useState<AISearchSuggestion[]>([]);\n  const [recommendations, setRecommendations] = useState<SmartRecommendation[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);\n  const [aiMode, setAiMode] = useState<'search' | 'recommend' | 'analyze'>('search');\n  const [activeTab, setActiveTab] = useState('therapeutic');\n  const [serverSuggestions, setServerSuggestions] = useState<Array<{ name: string; rxcui?: string | null }>>([]);\n  const [serverSuggestionsOffline, setServerSuggestionsOffline] = useState<boolean>(false);\n  const [serverSuggestionsLoading, setServerSuggestionsLoading] = useState<boolean>(false);\n\n  const filterOptions = {\n    drugType: [\n      { value: 'brand', label: 'Brand Name' },\n      { value: 'generic', label: 'Generic' },\n      { value: 'biosimilar', label: 'Biosimilar' },\n      { value: 'combination', label: 'Combination' },\n      { value: 'investigational', label: 'Investigational' }\n    ],\n    therapeuticClass: [\n      { value: 'antineoplastic', label: 'Antineoplastic Agents' },\n      { value: 'immunotherapy', label: 'Immunotherapy' },\n      { value: 'targeted_therapy', label: 'Targeted Therapy' },\n      { value: 'chemotherapy', label: 'Chemotherapy' },\n      { value: 'hormone_therapy', label: 'Hormone Therapy' },\n      { value: 'supportive_care', label: 'Supportive Care' },\n      { value: 'pain_management', label: 'Pain Management' },\n      { value: 'antiemetic', label: 'Antiemetic' }\n    ],\n    mechanismOfAction: [\n      { value: 'kinase_inhibitor', label: 'Kinase Inhibitor' },\n      { value: 'monoclonal_antibody', label: 'Monoclonal Antibody' },\n      { value: 'checkpoint_inhibitor', label: 'Checkpoint Inhibitor' },\n      { value: 'alkylating_agent', label: 'Alkylating Agent' },\n      { value: 'antimetabolite', label: 'Antimetabolite' },\n      { value: 'topoisomerase_inhibitor', label: 'Topoisomerase Inhibitor' },\n      { value: 'proteasome_inhibitor', label: 'Proteasome Inhibitor' },\n      { value: 'angiogenesis_inhibitor', label: 'Angiogenesis Inhibitor' }\n    ],\n    indication: [\n      { value: 'breast_cancer', label: 'Breast Cancer' },\n      { value: 'lung_cancer', label: 'Lung Cancer' },\n      { value: 'colorectal_cancer', label: 'Colorectal Cancer' },\n      { value: 'melanoma', label: 'Melanoma' },\n      { value: 'leukemia', label: 'Leukemia' },\n      { value: 'lymphoma', label: 'Lymphoma' },\n      { value: 'prostate_cancer', label: 'Prostate Cancer' },\n      { value: 'ovarian_cancer', label: 'Ovarian Cancer' },\n      { value: 'pancreatic_cancer', label: 'Pancreatic Cancer' },\n      { value: 'brain_tumor', label: 'Brain Tumor' }\n    ],\n    biomarker: [\n      { value: 'her2_positive', label: 'HER2+' },\n      { value: 'er_pr_positive', label: 'ER/PR+' },\n      { value: 'triple_negative', label: 'Triple Negative' },\n      { value: 'egfr_mutation', label: 'EGFR Mutation' },\n      { value: 'kras_mutation', label: 'KRAS Mutation' },\n      { value: 'brca_mutation', label: 'BRCA1/2 Mutation' },\n      { value: 'pd_l1_positive', label: 'PD-L1+' },\n      { value: 'msi_high', label: 'MSI-H' },\n      { value: 'tmb_high', label: 'TMB-H' }\n    ],\n    approvalStatus: [\n      { value: 'fda_approved', label: 'FDA Approved' },\n      { value: 'ema_approved', label: 'EMA Approved' },\n      { value: 'breakthrough_therapy', label: 'Breakthrough Therapy' },\n      { value: 'fast_track', label: 'Fast Track' },\n      { value: 'orphan_drug', label: 'Orphan Drug' },\n      { value: 'conditional_approval', label: 'Conditional Approval' }\n    ],\n    clinicalTrialPhase: [\n      { value: 'phase_1', label: 'Phase I' },\n      { value: 'phase_2', label: 'Phase II' },\n      { value: 'phase_3', label: 'Phase III' },\n      { value: 'phase_4', label: 'Phase IV' },\n      { value: 'post_marketing', label: 'Post-Marketing' }\n    ]\n  };\n\n  const generateAISuggestions = async (query: string): Promise<AISearchSuggestion[]> => {\n    if (!query || query.length < 2) return [];\n\n    const mockSuggestions: AISearchSuggestion[] = [\n      {\n        type: 'drug',\n        text: 'pembrolizumab',\n        confidence: 0.95,\n        category: 'PD-1 Inhibitor',\n        description: 'Checkpoint inhibitor for multiple cancer types',\n        relevantDrugs: ['nivolumab', 'atezolizumab'],\n        alternativeTerms: ['Keytruda', 'PD-1 inhibitor']\n      },\n      {\n        type: 'indication',\n        text: 'non-small cell lung cancer',\n        confidence: 0.88,\n        category: 'Oncology',\n        description: 'Most common type of lung cancer',\n        relevantDrugs: ['osimertinib', 'erlotinib', 'gefitinib']\n      },\n      {\n        type: 'mechanism',\n        text: 'EGFR tyrosine kinase inhibitor',\n        confidence: 0.82,\n        category: 'Targeted Therapy',\n        description: 'Targets EGFR signaling pathway',\n        relevantDrugs: ['osimertinib', 'erlotinib', 'afatinib']\n      }\n    ];\n\n    return mockSuggestions.filter(s => \n      s.text.toLowerCase().includes(query.toLowerCase()) ||\n      s.category.toLowerCase().includes(query.toLowerCase()) ||\n      s.alternativeTerms?.some(term => term.toLowerCase().includes(query.toLowerCase()))\n    );\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(async () => {\n      if (filters.query) {\n        const suggestions = await generateAISuggestions(filters.query);\n        setSearchSuggestions(suggestions);\n      }\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [filters.query]);\n\n  // Fetch server suggestions for the visible query (debounced)\n  useEffect(() => {\n    let abort = false;\n    if (!filters.query || filters.query.trim().length < 2) {\n      setServerSuggestions([]);\n      setServerSuggestionsOffline(false);\n      return;\n    }\n    setServerSuggestionsLoading(true);\n    const t = setTimeout(async () => {\n      try {\n        const resp = await fetch(`/api/drugs/suggestions?q=${encodeURIComponent(filters.query)}&limit=8`);\n        if (!resp.ok) throw new Error('suggestions failed');\n        const data = await resp.json();\n        if (abort) return;\n        setServerSuggestions((data.suggestions || []).map((s: any) => ({ name: s.name, rxcui: s.rxcui })));\n        setServerSuggestionsOffline(!!data.offline);\n        onOfflineChange?.(!!data.offline);\n      } catch {\n        if (!abort) { setServerSuggestions([]); setServerSuggestionsOffline(false); }\n      } finally {\n        if (!abort) setServerSuggestionsLoading(false);\n      }\n    }, 300);\n    return () => { abort = true; clearTimeout(t); };\n  }, [filters.query, onOfflineChange]);\n\n  const handleFilterChange = (category: keyof DrugSearchFilters, value: any) => {\n    setFilters(prev => ({\n      ...prev,\n      [category]: value\n    }));\n  };\n\n  const handleMultiSelectFilter = (category: keyof DrugSearchFilters, value: string) => {\n    setFilters(prev => {\n      const currentValues = prev[category] as string[];\n      const newValues = currentValues.includes(value)\n        ? currentValues.filter(v => v !== value)\n        : [...currentValues, value];\n      \n      return {\n        ...prev,\n        [category]: newValues\n      };\n    });\n  };\n\n  const clearAllFilters = () => {\n    setFilters({\n      query: '',\n      drugType: [],\n      therapeuticClass: [],\n      mechanismOfAction: [],\n      indication: [],\n      biomarker: [],\n      approvalStatus: [],\n      clinicalTrialPhase: [],\n      hasInteractions: false,\n      hasGenomicFactors: false,\n      requiresMonitoring: false,\n      isOncologyDrug: false,\n      isOrphanDrug: false,\n      hasBlackBoxWarning: false\n    });\n  };\n\n  const getActiveFiltersCount = () => {\n    let count = 0;\n    Object.entries(filters).forEach(([key, value]) => {\n      if (key === 'query') return;\n      if (Array.isArray(value) && value.length > 0) count++;\n      if (typeof value === 'boolean' && value) count++;\n    });\n    return count;\n  };\n\n  const renderEnhancedFilter = (\n    category: keyof DrugSearchFilters,\n    options: any[],\n    title: string,\n    icon: React.ReactNode\n  ) => {\n    const selectedValues = filters[category] as string[];\n    \n    return (\n      <Card className=\"p-4\">\n        <div className=\"flex items-center space-x-2 mb-3\">\n          {icon}\n          <h4 className=\"font-medium text-gray-900\">{title}</h4>\n        </div>\n        <FilterAutocomplete\n          options={options}\n          selectedValues={selectedValues}\n          onSelectionChange={(values) => {\n            setFilters(prev => ({ ...prev, [category]: values }));\n          }}\n          placeholder={`Select ${title.toLowerCase()}...`}\n          searchable={true}\n          showCounts={true}\n          maxSelection={5}\n        />\n      </Card>\n    );\n  };\n\n  const TabButton = ({ isActive, onClick, children }: { isActive: boolean; onClick: () => void; children: React.ReactNode }) => (\n    <button\n      onClick={onClick}\n      className={`px-4 py-2 text-sm font-medium rounded-lg ${\n        isActive \n          ? 'bg-violet-100 text-violet-700 border border-violet-200' \n          : 'text-gray-600 hover:text-gray-800 hover:bg-gray-100'\n      }`}\n    >\n      {children}\n    </button>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* AI-Powered Search Interface */}\n      <Card className=\"border-violet-200 bg-gradient-to-r from-violet-50 to-indigo-50\">\n        <div className=\"p-6\">\n          <div className=\"flex items-center space-x-2 mb-4\">\n            <Brain className=\"h-6 w-6 text-violet-600\" />\n            <h2 className=\"text-xl font-bold text-violet-800\">AI-Enhanced Drug Search</h2>\n            <span className=\"px-3 py-1 bg-violet-100 text-violet-800 rounded-full text-sm font-medium\">\n              Neural Engine v2.0\n            </span>\n          </div>\n          \n          {/* Main Search Input with Autocomplete */}\n          <div className=\"mb-4\">\n            <AutocompleteSearch\n              placeholder=\"Search by drug name, indication, mechanism, biomarker, or ask a question...\"\n              onSelect={(option) => {\n                handleFilterChange('query', option.value);\n                // Auto-set relevant filters based on selection type\n                if (option.type === 'indication') {\n                  handleMultiSelectFilter('indication', option.value);\n                } else if (option.type === 'mechanism') {\n                  handleMultiSelectFilter('mechanismOfAction', option.value);\n                } else if (option.type === 'biomarker') {\n                  handleMultiSelectFilter('biomarker', option.value);\n                }\n              }}\n              onInputChange={(value) => handleFilterChange('query', value)}\n              value={filters.query}\n              loading={isLoading}\n              maxResults={12}\n              showCategories={true}\n              className=\"w-full\"\n              onOfflineChange={onOfflineChange}\n            />\n          </div>\n\n          {/* Server suggestions panel */}\n          {filters.query.trim().length >= 2 && (\n            <div className=\"bg-white border border-gray-200 rounded-lg shadow-sm mb-4\">\n              <div className=\"px-3 py-2 border-b flex items-center justify-between\">\n                <div className=\"text-sm font-medium text-gray-700\">Top matches</div>\n                {serverSuggestionsOffline && (\n                  <div className=\"text-[11px] text-gray-500\">Using offline suggestions</div>\n                )}\n              </div>\n              <div className=\"p-2\">\n                {serverSuggestionsLoading ? (\n                  <div className=\"text-xs text-gray-500 px-2 py-1\">Analyzing…</div>\n                ) : serverSuggestions.length > 0 ? (\n                  <div className=\"flex flex-wrap gap-2\">\n                    {serverSuggestions.map((s, i) => (\n                      <button\n                        key={`${s.rxcui || s.name}-${i}`}\n                        onClick={() => handleFilterChange('query', s.name)}\n                        className=\"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800 hover:bg-gray-200\"\n                        title={s.rxcui ? `RXCUI ${s.rxcui}` : s.name}\n                      >\n                        {s.name}\n                      </button>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"text-xs text-gray-500 px-2 py-1\">No matches</div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* AI Search Suggestions */}\n          {searchSuggestions.length > 0 && (\n            <div className=\"bg-white border border-gray-200 rounded-lg shadow-lg mb-4\">\n              <div className=\"p-3 border-b border-gray-100\">\n                <div className=\"flex items-center space-x-2\">\n                  <Sparkles className=\"h-4 w-4 text-violet-600\" />\n                  <span className=\"text-sm font-medium text-gray-700\">AI Suggestions</span>\n                </div>\n              </div>\n              <div className=\"max-h-64 overflow-y-auto\">\n                {searchSuggestions.map((suggestion, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleFilterChange('query', suggestion.text)}\n                    className=\"w-full flex items-center space-x-3 p-3 hover:bg-gray-50 text-left\"\n                  >\n                    <div className=\"flex-shrink-0\">\n                      {suggestion.type === 'drug' && <Pill className=\"h-4 w-4 text-blue-500\" />}\n                      {suggestion.type === 'indication' && <Target className=\"h-4 w-4 text-red-500\" />}\n                      {suggestion.type === 'mechanism' && <Zap className=\"h-4 w-4 text-purple-500\" />}\n                      {suggestion.type === 'biomarker' && <Activity className=\"h-4 w-4 text-green-500\" />}\n                    </div>\n                    <div className=\"flex-1\">\n                      <div className=\"font-medium text-gray-900\">{suggestion.text}</div>\n                      <div className=\"text-xs text-gray-500\">{suggestion.category}</div>\n                      {suggestion.description && (\n                        <div className=\"text-xs text-gray-400 mt-1\">{suggestion.description}</div>\n                      )}\n                    </div>\n                    <div className=\"text-xs text-gray-400\">\n                      {Math.round(suggestion.confidence * 100)}%\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* AI Mode Selector */}\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm font-medium text-gray-700\">AI Mode:</span>\n            <div className=\"flex bg-gray-100 rounded-lg p-1\">\n              {[\n                { mode: 'search', label: 'Smart Search', icon: Search },\n                { mode: 'recommend', label: 'Recommendations', icon: Target },\n                { mode: 'analyze', label: 'Deep Analysis', icon: BarChart3 }\n              ].map(({ mode, label, icon: Icon }) => (\n                <button\n                  key={mode}\n                  onClick={() => setAiMode(mode as typeof aiMode)}\n                  className={`flex items-center space-x-2 px-3 py-1 rounded-md text-sm font-medium transition-all ${\n                    aiMode === mode\n                      ? 'bg-white text-violet-600 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-800'\n                  }`}\n                >\n                  <Icon className=\"h-4 w-4\" />\n                  <span>{label}</span>\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </Card>\n\n      {/* Advanced Filters */}\n      <Card>\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Filter className=\"h-5 w-5 text-gray-600\" />\n              <h2 className=\"text-xl font-bold text-gray-900\">Advanced Filters</h2>\n              {getActiveFiltersCount() > 0 && (\n                <span className=\"px-2 py-1 bg-violet-100 text-violet-800 rounded-full text-sm font-medium\">\n                  {getActiveFiltersCount()} active\n                </span>\n              )}\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={clearAllFilters}\n                className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-50\"\n              >\n                Clear All\n              </button>\n              <button\n                onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}\n                className=\"px-3 py-2 text-sm text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-50 flex items-center space-x-1\"\n              >\n                {showAdvancedFilters ? <ChevronUp className=\"h-4 w-4\" /> : <ChevronDown className=\"h-4 w-4\" />}\n                <span>{showAdvancedFilters ? 'Hide' : 'Show'} Filters</span>\n              </button>\n            </div>\n          </div>\n          \n          {showAdvancedFilters && (\n            <div className=\"space-y-4\">\n              <div className=\"flex space-x-2 mb-4\">\n                <TabButton isActive={activeTab === 'therapeutic'} onClick={() => setActiveTab('therapeutic')}>\n                  Therapeutic\n                </TabButton>\n                <TabButton isActive={activeTab === 'molecular'} onClick={() => setActiveTab('molecular')}>\n                  Molecular\n                </TabButton>\n                <TabButton isActive={activeTab === 'clinical'} onClick={() => setActiveTab('clinical')}>\n                  Clinical\n                </TabButton>\n                <TabButton isActive={activeTab === 'regulatory'} onClick={() => setActiveTab('regulatory')}>\n                  Regulatory\n                </TabButton>\n                <TabButton isActive={activeTab === 'safety'} onClick={() => setActiveTab('safety')}>\n                  Safety\n                </TabButton>\n              </div>\n\n              {activeTab === 'therapeutic' && (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {renderEnhancedFilter(\n                    'therapeuticClass',\n                    THERAPEUTIC_CLASS_OPTIONS,\n                    'Therapeutic Class',\n                    <Heart className=\"h-4 w-4 text-red-500\" />\n                  )}\n                  {renderEnhancedFilter(\n                    'indication',\n                    INDICATION_OPTIONS,\n                    'Cancer Indication',\n                    <Target className=\"h-4 w-4 text-blue-500\" />\n                  )}\n                  {renderEnhancedFilter(\n                    'mechanismOfAction',\n                    MECHANISM_OPTIONS,\n                    'Mechanism of Action',\n                    <Zap className=\"h-4 w-4 text-purple-500\" />\n                  )}\n                </div>\n              )}\n\n              {activeTab === 'molecular' && (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {renderEnhancedFilter(\n                    'biomarker',\n                    BIOMARKER_OPTIONS,\n                    'Biomarker Targets',\n                    <Activity className=\"h-4 w-4 text-green-500\" />\n                  )}\n                  <Card className=\"p-4\">\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Microscope className=\"h-4 w-4 text-blue-500\" />\n                        <h4 className=\"font-medium text-gray-900\">Molecular Features</h4>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <label className=\"flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={filters.hasGenomicFactors}\n                            onChange={(e) => handleFilterChange('hasGenomicFactors', e.target.checked)}\n                            className=\"rounded border-gray-300 text-violet-600 focus:ring-violet-500\"\n                          />\n                          <span className=\"text-sm text-gray-700\">Has Genomic Factors</span>\n                        </label>\n                        <label className=\"flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={filters.hasInteractions}\n                            onChange={(e) => handleFilterChange('hasInteractions', e.target.checked)}\n                            className=\"rounded border-gray-300 text-violet-600 focus:ring-violet-500\"\n                          />\n                          <span className=\"text-sm text-gray-700\">Has Drug Interactions</span>\n                        </label>\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n              )}\n\n              {activeTab === 'clinical' && (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {renderEnhancedFilter(\n                    'clinicalTrialPhase',\n                    CLINICAL_TRIAL_PHASE_OPTIONS,\n                    'Clinical Trial Phase',\n                    <Clock className=\"h-4 w-4 text-orange-500\" />\n                  )}\n                  <Card className=\"p-4\">\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Users className=\"h-4 w-4 text-purple-500\" />\n                        <h4 className=\"font-medium text-gray-900\">Patient Factors</h4>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <label className=\"flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={filters.requiresMonitoring}\n                            onChange={(e) => handleFilterChange('requiresMonitoring', e.target.checked)}\n                            className=\"rounded border-gray-300 text-violet-600 focus:ring-violet-500\"\n                          />\n                          <span className=\"text-sm text-gray-700\">Requires Monitoring</span>\n                        </label>\n                        <label className=\"flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={filters.isOncologyDrug}\n                            onChange={(e) => handleFilterChange('isOncologyDrug', e.target.checked)}\n                            className=\"rounded border-gray-300 text-violet-600 focus:ring-violet-500\"\n                          />\n                          <span className=\"text-sm text-gray-700\">Oncology Drugs Only</span>\n                        </label>\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n              )}\n\n              {activeTab === 'regulatory' && (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {renderEnhancedFilter(\n                    'approvalStatus',\n                    APPROVAL_STATUS_OPTIONS,\n                    'Approval Status',\n                    <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                  )}\n                  <Card className=\"p-4\">\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Globe className=\"h-4 w-4 text-blue-500\" />\n                        <h4 className=\"font-medium text-gray-900\">Regulatory Features</h4>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <label className=\"flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={filters.isOrphanDrug}\n                            onChange={(e) => handleFilterChange('isOrphanDrug', e.target.checked)}\n                            className=\"rounded border-gray-300 text-violet-600 focus:ring-violet-500\"\n                          />\n                          <span className=\"text-sm text-gray-700\">Orphan Drug Status</span>\n                        </label>\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n              )}\n\n              {activeTab === 'safety' && (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  <Card className=\"p-4\">\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Shield className=\"h-4 w-4 text-red-500\" />\n                        <h4 className=\"font-medium text-gray-900\">Safety Alerts</h4>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <label className=\"flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={filters.hasBlackBoxWarning}\n                            onChange={(e) => handleFilterChange('hasBlackBoxWarning', e.target.checked)}\n                            className=\"rounded border-gray-300 text-violet-600 focus:ring-violet-500\"\n                          />\n                          <span className=\"text-sm text-gray-700\">Black Box Warning</span>\n                        </label>\n                      </div>\n                    </div>\n                  </Card>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </Card>\n\n      {/* Search Actions */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <button className=\"bg-gradient-to-r from-violet-600 to-indigo-600 text-white px-6 py-3 rounded-lg hover:from-violet-700 hover:to-indigo-700 flex items-center space-x-2\">\n            <Search className=\"h-4 w-4\" />\n            <span>Search Drugs</span>\n          </button>\n          <button className=\"border border-gray-300 text-gray-700 px-4 py-3 rounded-lg hover:bg-gray-50 flex items-center space-x-2\">\n            <Brain className=\"h-4 w-4\" />\n            <span>Get AI Recommendations</span>\n          </button>\n          <button className=\"border border-gray-300 text-gray-700 px-4 py-3 rounded-lg hover:bg-gray-50 flex items-center space-x-2\">\n            <Download className=\"h-4 w-4\" />\n            <span>Export Results</span>\n          </button>\n        </div>\n        <div className=\"text-sm text-gray-500\">\n          Powered by OncoSafeRx Neural Engine\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImprovedDrugSearch;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\ntype SerializableValue = string | number | boolean | null | undefined;\ntype StateValue = SerializableValue | SerializableValue[] | Record<string, SerializableValue>;\n\ninterface UseUrlStateOptions {\n  defaultValue?: StateValue;\n  serialize?: (value: StateValue) => string;\n  deserialize?: (value: string) => StateValue;\n  replace?: boolean; // Use replace instead of push for navigation\n}\n\n/**\n * Hook for managing state in URL search parameters\n * Automatically syncs state with URL and provides type-safe updates\n */\nexport function useUrlState<T extends StateValue>(\n  key: string,\n  options: UseUrlStateOptions = {}\n): [T, (value: T | ((prev: T) => T)) => void] {\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  const {\n    defaultValue,\n    serialize = defaultSerialize,\n    deserialize = defaultDeserialize,\n    replace = false\n  } = options;\n\n  // Get initial value from URL or use default\n  const getInitialValue = useCallback((): T => {\n    const searchParams = new URLSearchParams(location.search);\n    const urlValue = searchParams.get(key);\n    \n    if (urlValue !== null) {\n      try {\n        return deserialize(urlValue) as T;\n      } catch (error) {\n        console.warn(`Failed to deserialize URL parameter \"${key}\":`, error);\n      }\n    }\n    \n    return (defaultValue ?? null) as T;\n  }, [key, location.search, defaultValue, deserialize]);\n\n  const [state, setState] = useState<T>(getInitialValue);\n\n  // Update URL when state changes\n  const updateUrl = useCallback((newValue: T) => {\n    const searchParams = new URLSearchParams(location.search);\n    \n    if (newValue === null || newValue === undefined || newValue === '') {\n      searchParams.delete(key);\n    } else {\n      try {\n        const serialized = serialize(newValue);\n        searchParams.set(key, serialized);\n      } catch (error) {\n        console.warn(`Failed to serialize value for URL parameter \"${key}\":`, error);\n        return;\n      }\n    }\n    \n    const newSearch = searchParams.toString();\n    const newUrl = `${location.pathname}${newSearch ? `?${newSearch}` : ''}`;\n    \n    if (replace) {\n      navigate(newUrl, { replace: true });\n    } else {\n      navigate(newUrl);\n    }\n  }, [key, location.pathname, location.search, navigate, replace, serialize]);\n\n  // Sync state with URL when location changes\n  useEffect(() => {\n    const newValue = getInitialValue();\n    setState(newValue);\n  }, [getInitialValue]);\n\n  // Update function that also updates URL\n  const updateState = useCallback((value: T | ((prev: T) => T)) => {\n    setState(prevState => {\n      const newValue = typeof value === 'function' ? (value as (prev: T) => T)(prevState) : value;\n      // Defer URL update to avoid setState during render\n      setTimeout(() => updateUrl(newValue), 0);\n      return newValue;\n    });\n  }, [updateUrl]);\n\n  return [state, updateState];\n}\n\n// Default serializers\nfunction defaultSerialize(value: StateValue): string {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  \n  if (typeof value === 'string') {\n    return value;\n  }\n  \n  if (typeof value === 'number' || typeof value === 'boolean') {\n    return String(value);\n  }\n  \n  if (Array.isArray(value) || typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  \n  return String(value);\n}\n\nfunction defaultDeserialize(value: string): StateValue {\n  if (!value) {\n    return null;\n  }\n  \n  // Try to parse as JSON first\n  try {\n    return JSON.parse(value);\n  } catch {\n    // If JSON parsing fails, try other formats\n    if (value === 'true') return true;\n    if (value === 'false') return false;\n    if (!isNaN(Number(value)) && value !== '') return Number(value);\n    return value;\n  }\n}\n\n/**\n * Hook for managing filter state with URL persistence\n */\nexport function useUrlFilters<T extends Record<string, StateValue>>(\n  defaultFilters: T,\n  options: { replace?: boolean } = {}\n): [T, (filters: Partial<T> | ((prev: T) => Partial<T>)) => void, () => void] {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { replace = true } = options;\n\n  const getFiltersFromUrl = useCallback((): T => {\n    const searchParams = new URLSearchParams(location.search);\n    const filters = { ...defaultFilters };\n    \n    Object.keys(defaultFilters).forEach(key => {\n      const urlValue = searchParams.get(key);\n      if (urlValue !== null) {\n        try {\n          filters[key as keyof T] = defaultDeserialize(urlValue) as T[keyof T];\n        } catch (error) {\n          console.warn(`Failed to parse filter \"${key}\" from URL:`, error);\n        }\n      }\n    });\n    \n    return filters;\n  }, [location.search]);\n\n  const [filters, setFilters] = useState<T>(getFiltersFromUrl);\n\n  // Update URL when filters change\n  const updateUrl = useCallback((newFilters: T) => {\n    const searchParams = new URLSearchParams(location.search);\n    \n    Object.entries(newFilters).forEach(([key, value]) => {\n      if (value === null || value === undefined || value === '' || \n          (Array.isArray(value) && value.length === 0) ||\n          value === defaultFilters[key as keyof T]) {\n        searchParams.delete(key);\n      } else {\n        try {\n          searchParams.set(key, defaultSerialize(value));\n        } catch (error) {\n          console.warn(`Failed to serialize filter \"${key}\":`, error);\n        }\n      }\n    });\n    \n    const newSearch = searchParams.toString();\n    const newUrl = `${location.pathname}${newSearch ? `?${newSearch}` : ''}`;\n    \n    if (replace) {\n      navigate(newUrl, { replace: true });\n    } else {\n      navigate(newUrl);\n    }\n  }, [location.pathname, location.search, navigate, replace]);\n\n  // Sync filters with URL changes\n  useEffect(() => {\n    const newFilters = getFiltersFromUrl();\n    setFilters(newFilters);\n  }, [getFiltersFromUrl]);\n\n  // Update filters function\n  const updateFilters = useCallback((newFilters: Partial<T> | ((prev: T) => Partial<T>)) => {\n    setFilters(prevFilters => {\n      const updates = typeof newFilters === 'function' ? newFilters(prevFilters) : newFilters;\n      const updatedFilters = { ...prevFilters, ...updates };\n      // Defer URL update to avoid setState during render\n      setTimeout(() => updateUrl(updatedFilters), 0);\n      return updatedFilters;\n    });\n  }, [updateUrl]);\n\n  // Clear all filters\n  const clearFilters = useCallback(() => {\n    setFilters(defaultFilters);\n    // Defer URL update to avoid setState during render\n    setTimeout(() => updateUrl(defaultFilters), 0);\n  }, [updateUrl, defaultFilters]);\n\n  return [filters, updateFilters, clearFilters];\n}\n\n/**\n * Hook for managing pagination state with URL persistence\n */\nexport function useUrlPagination(defaultPage: number = 1, defaultPageSize: number = 20) {\n  const [page, setPage] = useUrlState<number>('page', { \n    defaultValue: defaultPage,\n    replace: true \n  });\n  const [pageSize, setPageSize] = useUrlState<number>('pageSize', { \n    defaultValue: defaultPageSize,\n    replace: true \n  });\n\n  const resetPagination = useCallback(() => {\n    setPage(defaultPage);\n  }, [setPage, defaultPage]);\n\n  return {\n    page: page || defaultPage,\n    pageSize: pageSize || defaultPageSize,\n    setPage,\n    setPageSize,\n    resetPagination\n  };\n}\n\n/**\n * Hook for managing sort state with URL persistence\n */\nexport function useUrlSort<T extends string>(defaultSort?: T, defaultDirection: 'asc' | 'desc' = 'asc') {\n  const [sortBy, setSortBy] = useUrlState<T | null>('sortBy', { \n    defaultValue: defaultSort || null,\n    replace: true \n  });\n  const [sortDirection, setSortDirection] = useUrlState<'asc' | 'desc'>('sortDirection', { \n    defaultValue: defaultDirection,\n    replace: true \n  });\n\n  const updateSort = useCallback((field: T | null, direction?: 'asc' | 'desc') => {\n    setSortBy(field);\n    if (direction) {\n      setSortDirection(direction);\n    } else if (field === sortBy) {\n      // Toggle direction if same field\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      // Default to asc for new field\n      setSortDirection('asc');\n    }\n  }, [sortBy, sortDirection, setSortBy, setSortDirection]);\n\n  return {\n    sortBy,\n    sortDirection: sortDirection || defaultDirection,\n    updateSort,\n    setSortBy,\n    setSortDirection\n  };\n}","import { useState, useEffect, useCallback } from 'react';\n\ntype SetValue<T> = T | ((val: T) => T);\n\n/**\n * Hook for managing state with localStorage persistence\n * Automatically syncs with localStorage and handles JSON serialization\n */\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T,\n  options: {\n    serialize?: (value: T) => string;\n    deserialize?: (value: string) => T;\n    syncAcrossTabs?: boolean;\n  } = {}\n): [T, (value: SetValue<T>) => void, () => void] {\n  const {\n    serialize = JSON.stringify,\n    deserialize = JSON.parse,\n    syncAcrossTabs = true\n  } = options;\n\n  // Get value from localStorage or use initial value\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      if (item !== null) {\n        return deserialize(item);\n      }\n      return initialValue;\n    } catch (error) {\n      console.warn(`Error reading localStorage key \"${key}\":`, error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that persists to localStorage\n  const setValue = useCallback((value: SetValue<T>) => {\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      \n      // Save state\n      setStoredValue(valueToStore);\n      \n      // Save to localStorage\n      if (valueToStore === undefined) {\n        window.localStorage.removeItem(key);\n      } else {\n        window.localStorage.setItem(key, serialize(valueToStore));\n      }\n    } catch (error) {\n      console.warn(`Error setting localStorage key \"${key}\":`, error);\n    }\n  }, [key, serialize, storedValue]);\n\n  // Remove from localStorage\n  const removeValue = useCallback(() => {\n    try {\n      window.localStorage.removeItem(key);\n      setStoredValue(initialValue);\n    } catch (error) {\n      console.warn(`Error removing localStorage key \"${key}\":`, error);\n    }\n  }, [key, initialValue]);\n\n  // Listen for changes to localStorage from other tabs\n  useEffect(() => {\n    if (!syncAcrossTabs) return;\n\n    const handleStorageChange = (e: StorageEvent) => {\n      if (e.key === key && e.newValue !== null) {\n        try {\n          setStoredValue(deserialize(e.newValue));\n        } catch (error) {\n          console.warn(`Error parsing localStorage change for key \"${key}\":`, error);\n        }\n      } else if (e.key === key && e.newValue === null) {\n        setStoredValue(initialValue);\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, [key, deserialize, initialValue, syncAcrossTabs]);\n\n  return [storedValue, setValue, removeValue];\n}\n\n/**\n * Hook for managing user preferences with localStorage\n */\nexport function useUserPreferences<T extends Record<string, any>>(\n  defaultPreferences: T,\n  storageKey: string = 'user_preferences'\n) {\n  const [preferences, setPreferences, clearPreferences] = useLocalStorage(\n    storageKey,\n    defaultPreferences\n  );\n\n  const updatePreference = useCallback(<K extends keyof T>(\n    key: K,\n    value: T[K]\n  ) => {\n    setPreferences(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  }, [setPreferences]);\n\n  const updatePreferences = useCallback((updates: Partial<T>) => {\n    setPreferences(prev => ({\n      ...prev,\n      ...updates\n    }));\n  }, [setPreferences]);\n\n  const resetPreferences = useCallback(() => {\n    setPreferences(defaultPreferences);\n  }, [setPreferences, defaultPreferences]);\n\n  return {\n    preferences,\n    updatePreference,\n    updatePreferences,\n    resetPreferences,\n    clearPreferences\n  };\n}\n\n/**\n * Hook for managing recent searches with localStorage\n */\nexport function useRecentSearches(\n  maxItems: number = 10,\n  storageKey: string = 'recent_searches'\n) {\n  const [searches, setSearches] = useLocalStorage<string[]>(storageKey, []);\n\n  const addSearch = useCallback((search: string) => {\n    const trimmedSearch = search.trim();\n    if (!trimmedSearch) return;\n\n    setSearches(prev => {\n      const filtered = prev.filter(s => s !== trimmedSearch);\n      return [trimmedSearch, ...filtered].slice(0, maxItems);\n    });\n  }, [setSearches, maxItems]);\n\n  const removeSearch = useCallback((search: string) => {\n    setSearches(prev => prev.filter(s => s !== search));\n  }, [setSearches]);\n\n  const clearSearches = useCallback(() => {\n    setSearches([]);\n  }, [setSearches]);\n\n  return {\n    searches,\n    addSearch,\n    removeSearch,\n    clearSearches\n  };\n}\n\n/**\n * Hook for managing view state (collapsed panels, table columns, etc.)\n */\nexport function useViewState<T extends Record<string, any>>(\n  defaultState: T,\n  storageKey: string\n) {\n  const [viewState, setViewState] = useLocalStorage(storageKey, defaultState);\n\n  const updateViewState = useCallback(<K extends keyof T>(\n    key: K,\n    value: T[K]\n  ) => {\n    setViewState(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  }, [setViewState]);\n\n  const toggleViewState = useCallback(<K extends keyof T>(key: K) => {\n    setViewState(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n  }, [setViewState]);\n\n  const resetViewState = useCallback(() => {\n    setViewState(defaultState);\n  }, [setViewState, defaultState]);\n\n  return {\n    viewState,\n    updateViewState,\n    toggleViewState,\n    resetViewState\n  };\n}\n\n/**\n * Hook for managing form state with localStorage backup\n */\nexport function useFormState<T extends Record<string, any>>(\n  formId: string,\n  defaultValues: T,\n  options: {\n    autosave?: boolean;\n    debounceMs?: number;\n  } = {}\n) {\n  const { autosave = true, debounceMs = 1000 } = options;\n  const storageKey = `form_state_${formId}`;\n  \n  const [values, setValues] = useLocalStorage(storageKey, defaultValues);\n  const [isDirty, setIsDirty] = useState(false);\n\n  // Update form value\n  const setValue = useCallback(<K extends keyof T>(\n    key: K,\n    value: T[K]\n  ) => {\n    setValues(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    setIsDirty(true);\n  }, [setValues]);\n\n  // Update multiple values\n  const setValues_ = useCallback((updates: Partial<T>) => {\n    setValues(prev => ({\n      ...prev,\n      ...updates\n    }));\n    setIsDirty(true);\n  }, [setValues]);\n\n  // Reset form to default values\n  const resetForm = useCallback(() => {\n    setValues(defaultValues);\n    setIsDirty(false);\n  }, [setValues, defaultValues]);\n\n  // Clear saved form state\n  const clearSavedState = useCallback(() => {\n    window.localStorage.removeItem(storageKey);\n    setValues(defaultValues);\n    setIsDirty(false);\n  }, [storageKey, setValues, defaultValues]);\n\n  // Mark form as saved\n  const markSaved = useCallback(() => {\n    setIsDirty(false);\n  }, []);\n\n  return {\n    values,\n    setValue,\n    setValues: setValues_,\n    resetForm,\n    clearSavedState,\n    markSaved,\n    isDirty\n  };\n}","import React, { useEffect, useMemo, useState } from 'react';\nimport { Drug, DrugSearchResult } from '../types';\nimport { drugService } from '../services/api';\nimport SimpleDrugSearch from '../components/DrugSearch/SimpleDrugSearch';\nimport PredictiveSearchBar from '../components/DrugSearch/PredictiveSearchBar';\nimport DrugSearchResults from '../components/DrugSearch/DrugSearchResults';\nimport DrugCard from '../components/DrugSearch/DrugCard';\nimport SearchWithFavorites from '../components/Search/SearchWithFavorites';\nimport ImprovedDrugSearch from '../components/DrugSearch/ImprovedDrugSearch';\nimport AutocompleteSearch from '../components/DrugSearch/AutocompleteSearch';\nimport FeatureErrorBoundary from '../components/ErrorBoundary/FeatureErrorBoundary';\nimport Card from '../components/UI/Card';\nimport Alert from '../components/UI/Alert';\nimport { useToast } from '../components/UI/Toast';\n// Using existing UI components instead of shadcn\nimport { \n  Search, History, Star, Database, Filter, X, Brain, Zap, Target, \n  Activity, TrendingUp, Clock, CheckCircle, AlertTriangle, \n  BookOpen, Microscope, Pill, Heart, Shield, Sparkles,\n  ChevronDown, ChevronUp, BarChart3, Users, Globe,\n  RefreshCw, Download, Upload, Settings, Info\n} from 'lucide-react';\nimport { useSelection } from '../context/SelectionContext';\nimport { analytics } from '../utils/analytics';\nimport { getPins, clearPins, togglePin, reorderPins } from '../utils/pins';\nimport { SearchFilter as AdvancedSearchFilter } from '../hooks/useAdvancedSearch';\nimport { useUrlState, useUrlFilters, useUrlPagination, useUrlSort } from '../hooks/useUrlState';\nimport { useUserPreferences, useRecentSearches } from '../hooks/useLocalStorage';\n\ninterface SearchFilters {\n  drugType?: string;\n  category?: string;\n  hasInteractions?: boolean;\n  hasGenomics?: boolean;\n  approvalStatus?: string;\n  sortBy?: string;\n}\n\nconst DrugSearchInner: React.FC = () => {\n  const selection = useSelection();\n  \n  // Search state with URL persistence\n  const [searchQuery, setSearchQuery] = useUrlState<string>('q', { defaultValue: '' });\n  \n  // Filter state with URL persistence\n  const [filters, updateFilters, clearFilters] = useUrlFilters({\n    onlyOncology: false,\n    onlyPinned: false,\n    drugType: '',\n    category: '',\n    hasInteractions: false,\n    hasGenomics: false,\n    approvalStatus: '',\n    BN: false,\n    SCD: false,\n    SBD: false,\n    IN: false,\n    MIN: false\n  });\n  \n  // Pagination with URL persistence\n  const { page, pageSize, setPage, setPageSize, resetPagination } = useUrlPagination(1, 20);\n  \n  // Sort state with URL persistence\n  const { sortBy, sortDirection, updateSort } = useUrlSort<string>('relevance', 'desc');\n  \n  // User preferences in localStorage\n  const { preferences, updatePreference } = useUserPreferences({\n    defaultPageSize: 20,\n    showDescriptions: true,\n    compactView: false\n  }, 'drug_search_preferences');\n  \n  // Recent searches in localStorage\n  const { searches: searchHistory, addSearch } = useRecentSearches(10, 'drug_search_history');\n  \n  // Component state\n  const [searchResults, setSearchResults] = useState<DrugSearchResult | null>(null);\n  const [selectedDrug, setSelectedDrug] = useState<Drug | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [pinsTick, setPinsTick] = useState(0);\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);\n  const [searchMode, setSearchMode] = useState<'basic' | 'advanced' | 'ai'>('advanced');\n  const [aiInsights, setAiInsights] = useState<any>(null);\n  const [drugAnalytics, setDrugAnalytics] = useState<any>(null);\n  const [searchSuggestions, setSearchSuggestions] = useState<string[]>([]);\n  const [recentInteractions, setRecentInteractions] = useState<any[]>([]);\n  const [rxnormOfflineToast, setRxnormOfflineToast] = useState<boolean>(false);\n  const [rxnormToastDismissed, setRxnormToastDismissed] = useState<boolean>(false);\n  const { showToast } = useToast();\n  const [connStatus, setConnStatus] = useState<'unknown'|'online'|'offline'|'error'>('unknown');\n  const [connTesting, setConnTesting] = useState<boolean>(false);\n  const [connCheckedAt, setConnCheckedAt] = useState<string | null>(null);\n  const [basicSuggestions, setBasicSuggestions] = useState<Array<{ name: string; rxcui?: string | null }>>([]);\n  const [basicSuggestionsOffline, setBasicSuggestionsOffline] = useState<boolean>(false);\n  const [basicSuggestionsLoading, setBasicSuggestionsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    const dismissed = localStorage.getItem('rxnorm_offline_toast_dismissed') === '1';\n    setRxnormToastDismissed(dismissed);\n    // Test connectivity on component mount\n    testConnectivity();\n  }, []);\n\n  async function testConnectivity() {\n    try {\n      setConnTesting(true);\n      const resp = await fetch(`/api/drugs/search?q=aspirin`, { method: 'GET' });\n      if (!resp.ok) {\n        setConnStatus('error');\n      } else {\n        const data = await resp.json();\n        // Check if we have RxNorm data (online) or local data only (offline)\n        const isOnline = data?.sources?.rxnorm > 0;\n        setConnStatus(isOnline ? 'online' : 'offline');\n      }\n      setConnCheckedAt(new Date().toLocaleTimeString());\n    } catch (e) {\n      console.error('Connectivity test failed:', e);\n      setConnStatus('error');\n      setConnCheckedAt(new Date().toLocaleTimeString());\n    } finally {\n      setConnTesting(false);\n    }\n  }\n  \n  // Derived state\n  const activeTtySet = useMemo(() => new Set(\n    Object.entries(filters)\n      .filter(([key, value]) => ['BN', 'SCD', 'SBD', 'IN', 'MIN'].includes(key) && value)\n      .map(([key]) => key)\n  ), [filters]);\n  const pinnedList = useMemo(() => Object.entries(getPins()).map(([rxcui, v]) => ({ rxcui, name: v.name })), [pinsTick]);\n\n  const handleAdvancedSearch = async (query: string, advancedFilters?: AdvancedSearchFilter) => {\n    // Update URL state\n    setSearchQuery(query);\n    \n    // Add to search history\n    if (query && String(query).trim()) {\n      addSearch(String(query).trim());\n    }\n    \n    // Reset pagination when searching\n    resetPagination();\n    \n    // Convert advanced filters to our search filters format and update state\n    if (advancedFilters?.category) {\n      updateFilters({ category: advancedFilters.category });\n    }\n    \n    return handleSearch(query);\n  };\n\n  const handleSearch = async (query: string) => {\n    setLoading(true);\n    setError(null);\n    setSelectedDrug(null);\n\n    try {\n      // Build search parameters with filters\n      const searchParams = new URLSearchParams({ q: query });\n      \n      if (filters?.drugType) searchParams.append('type', filters.drugType);\n      if (filters?.category) searchParams.append('category', filters.category);\n      if (filters?.hasInteractions) searchParams.append('hasInteractions', 'true');\n      if (filters?.hasGenomics) searchParams.append('hasGenomics', 'true');\n      if (filters?.sortBy) searchParams.append('sort', filters.sortBy);\n\n      const results = await drugService.searchDrugs(query);\n      \n      // Apply client-side filtering and sorting if needed\n      let filteredResults = results.results;\n      \n      // Sort results based on filter\n      if (filters?.sortBy) {\n        switch (filters.sortBy) {\n          case 'name':\n            filteredResults.sort((a, b) => a.name.localeCompare(b.name));\n            break;\n          case 'recent':\n            // This would require additional backend support\n            break;\n          case 'popular':\n            // This would require usage statistics\n            break;\n          default:\n            // Keep default relevance order\n            break;\n        }\n      }\n      \n      const finalResults = { ...results, results: filteredResults };\n      setSearchResults(finalResults);\n      try { analytics.logSearch(query, finalResults?.count); } catch {}\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to search drugs');\n      setSearchResults(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDrugSelectFromSearch = (drug: Drug) => {\n    // When user selects from autocomplete, show detailed view directly\n    handleDrugSelect(drug);\n  };\n\n\n  const handleDrugSelect = async (drug: Drug) => {\n    setSelectedDrug(drug);\n    selection.addDrug(drug);\n    setLoading(true);\n    \n    // Try to get detailed information\n    try {\n      const details = await drugService.getDrugDetails(drug.rxcui);\n      setSelectedDrug({ ...drug, ...details });\n    } catch (err) {\n      console.warn('Failed to load drug details:', err);\n      // Keep the basic drug info from search results\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBackToResults = () => {\n    setSelectedDrug(null);\n  };\n\n  // Keyboard shortcuts: \"/\" to focus input, Esc clears view\n  useEffect(() => {\n    const handler = (e: KeyboardEvent) => {\n      if (e.key === '/') {\n        const el = document.getElementById('drug-search-input') as HTMLInputElement | null;\n        if (el) { e.preventDefault(); el.focus(); }\n      } else if (e.key === 'Escape') {\n        setSelectedDrug(null);\n        setSearchResults(null);\n      } else if (e.key.toLowerCase() === 'r' && !e.metaKey && !e.ctrlKey) {\n        // Reset filters\n        updateFilters({ BN: false, SCD: false, SBD: false, IN: false, MIN: false, onlyOncology: false });\n      } else if (e.key.toLowerCase() === 'o' && !e.metaKey && !e.ctrlKey) {\n        // Toggle oncology filter\n        updateFilters({ onlyOncology: !filters.onlyOncology });\n      }\n    };\n    window.addEventListener('keydown', handler);\n    return () => window.removeEventListener('keydown', handler);\n  }, []);\n\n  // Fetch suggestions for basic mode panel\n  useEffect(() => {\n    let abort = false;\n    if (searchMode !== 'basic' || !searchQuery || String(searchQuery).trim().length < 2) {\n      setBasicSuggestions([]);\n      setBasicSuggestionsOffline(false);\n      return;\n    }\n    setBasicSuggestionsLoading(true);\n    const t = setTimeout(async () => {\n      try {\n        const resp = await fetch(`/api/drugs/search?q=${encodeURIComponent(searchQuery)}`);\n        if (!resp.ok) throw new Error('suggestions failed');\n        const data = await resp.json();\n        if (abort) return;\n        setBasicSuggestions((data.results || []).slice(0, 8).map((s: any) => ({ name: s.name, rxcui: s.rxcui })));\n        setBasicSuggestionsOffline(!data.sources?.rxnorm || data.sources.rxnorm === 0);\n      } catch {\n        if (!abort) { setBasicSuggestions([]); setBasicSuggestionsOffline(false); }\n      } finally {\n        if (!abort) setBasicSuggestionsLoading(false);\n      }\n    }, 300);\n    return () => { abort = true; clearTimeout(t); };\n  }, [searchMode, searchQuery]);\n\n  const handleQuickSearch = (query: string) => {\n    handleSearch(query);\n  };\n\n  if (selectedDrug) {\n    return (\n      <div className=\"space-y-6\">\n        {/* Success Banner */}\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-3\">\n            <CheckCircle className=\"h-6 w-6 text-green-600\" />\n            <div>\n              <h3 className=\"font-medium text-green-800\">Drug Selected Successfully!</h3>\n              <p className=\"text-sm text-green-700\">\n                You've selected <strong>{selectedDrug.name}</strong>. Explore the options below to analyze interactions, genomics, or clinical protocols.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Back Button */}\n        <button\n          onClick={handleBackToResults}\n          className=\"flex items-center space-x-2 text-primary-600 hover:text-primary-700 font-medium\"\n        >\n          <span>←</span>\n          <span>Back to Search Results</span>\n        </button>\n\n        {/* Drug Details */}\n        {loading ? (\n          <Card>\n            <div className=\"flex items-center justify-center p-8\">\n              <div className=\"text-center\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600 mx-auto mb-4\"></div>\n                <p className=\"text-gray-600\">Loading drug details...</p>\n              </div>\n            </div>\n          </Card>\n        ) : (\n          <DrugCard drug={selectedDrug} showDetails={true} />\n        )}\n\n        {/* Additional Actions */}\n        <div className=\"grid md:grid-cols-3 gap-4\">\n          <Card padding=\"sm\" className=\"text-center\">\n            <div className=\"text-primary-600 mb-2\">\n              <Search className=\"w-6 h-6 mx-auto\" />\n            </div>\n            <h3 className=\"font-medium text-gray-900 mb-1\">View Interactions</h3>\n            <p className=\"text-sm text-gray-600 mb-3\">Check drug-drug interactions</p>\n            <button \n              onClick={() => window.open(`/interactions?drug=${selectedDrug.rxcui}`, '_blank')}\n              className=\"text-sm text-primary-600 hover:text-primary-700 font-medium\"\n            >\n              Check Interactions →\n            </button>\n          </Card>\n\n          <Card padding=\"sm\" className=\"text-center\">\n            <div className=\"text-purple-600 mb-2\">\n              <Star className=\"w-6 h-6 mx-auto\" />\n            </div>\n            <h3 className=\"font-medium text-gray-900 mb-1\">Genomic Analysis</h3>\n            <p className=\"text-sm text-gray-600 mb-3\">View pharmacogenomic factors</p>\n            <button \n              onClick={() => window.open(`/genomics?drug=${selectedDrug.rxcui}`, '_blank')}\n              className=\"text-sm text-purple-600 hover:text-purple-700 font-medium\"\n            >\n              Analyze Genomics →\n            </button>\n          </Card>\n\n          <Card padding=\"sm\" className=\"text-center\">\n            <div className=\"text-green-600 mb-2\">\n              <History className=\"w-6 h-6 mx-auto\" />\n            </div>\n            <h3 className=\"font-medium text-gray-900 mb-1\">Clinical Trials</h3>\n            <p className=\"text-sm text-gray-600 mb-3\">Find relevant studies</p>\n            <button \n              onClick={() => window.open(`/protocols?drug=${selectedDrug.name}`, '_blank')}\n              className=\"text-sm text-green-600 hover:text-green-700 font-medium\"\n            >\n              View Trials →\n            </button>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      {/* RxNorm Offline Toast (one-time) */}\n      {rxnormOfflineToast && !rxnormToastDismissed && (() => { showToast('warning', 'RxNorm offline: using limited suggestions'); setRxnormOfflineToast(false); return null; })()}\n      {/* Enhanced Header with AI Insights */}\n      <div className=\"relative\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-violet-600/10 via-blue-600/10 to-indigo-600/10 rounded-2xl\" />\n        <div className=\"relative p-8 text-center\">\n          <div className=\"flex items-center justify-center space-x-3 mb-6\">\n            <div className=\"p-3 bg-gradient-to-r from-violet-600 to-indigo-600 rounded-xl\">\n              <Database className=\"w-8 h-8 text-white\" />\n            </div>\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-violet-600 to-indigo-600 bg-clip-text text-transparent\">\n              Intelligent Drug Discovery\n            </h1>\n            <div className=\"flex items-center space-x-2\">\n              <Brain className=\"w-6 h-6 text-violet-600\" />\n              <span className=\"px-3 py-1 bg-violet-100 text-violet-800 rounded-full text-sm font-medium\">\n                AI-Powered\n              </span>\n            </div>\n          </div>\n          <p className=\"text-xl text-gray-600 max-w-4xl mx-auto mb-6\">\n            Advanced drug search with AI-powered insights, molecular analysis, and personalized recommendations\n          </p>\n          \n          {/* Quick Stats */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 max-w-4xl mx-auto\">\n            <div className=\"bg-white/80 backdrop-blur-sm rounded-lg p-4 border border-violet-200\">\n              <div className=\"flex items-center space-x-2 text-violet-600 mb-2\">\n                <Pill className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Drug Database</span>\n              </div>\n              <div className=\"text-2xl font-bold text-gray-900\">50,000+</div>\n              <div className=\"text-sm text-gray-600\">Medications</div>\n            </div>\n            <div className=\"bg-white/80 backdrop-blur-sm rounded-lg p-4 border border-blue-200\">\n              <div className=\"flex items-center space-x-2 text-blue-600 mb-2\">\n                <Activity className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Interactions</span>\n              </div>\n              <div className=\"text-2xl font-bold text-gray-900\">2.5M+</div>\n              <div className=\"text-sm text-gray-600\">Drug Pairs</div>\n            </div>\n            <div className=\"bg-white/80 backdrop-blur-sm rounded-lg p-4 border border-green-200\">\n              <div className=\"flex items-center space-x-2 text-green-600 mb-2\">\n                <Microscope className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Clinical Trials</span>\n              </div>\n              <div className=\"text-2xl font-bold text-gray-900\">25,000+</div>\n              <div className=\"text-sm text-gray-600\">Active Studies</div>\n            </div>\n            <div className=\"bg-white/80 backdrop-blur-sm rounded-lg p-4 border border-purple-200\">\n              <div className=\"flex items-center space-x-2 text-purple-600 mb-2\">\n                <Heart className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Oncology Focus</span>\n              </div>\n              <div className=\"text-2xl font-bold text-gray-900\">5,000+</div>\n              <div className=\"text-sm text-gray-600\">Cancer Drugs</div>\n            </div>\n          </div>\n          \n          {pinnedList.length > 0 && (\n            <div className=\"mt-6 flex items-center justify-center space-x-2\">\n              <Star className=\"w-5 h-5 text-yellow-500\" />\n              <span className=\"text-lg font-medium text-gray-700\">\n                {pinnedList.length} Pinned Medication{pinnedList.length !== 1 ? 's' : ''}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Connectivity status + test */}\n      <div className=\"flex items-center justify-center mt-2\">\n        <div className=\"inline-flex items-center gap-3 text-xs text-gray-600 bg-gray-50 border border-gray-200 rounded px-3 py-2\">\n          <div className=\"inline-flex items-center gap-2\">\n            <span className={`inline-block w-2.5 h-2.5 rounded-full ${\n              connStatus === 'online' ? 'bg-green-500' : connStatus === 'offline' ? 'bg-amber-500' : connStatus === 'error' ? 'bg-red-500' : 'bg-gray-400'\n            }`} />\n            <span>\n              {connStatus === 'online' && 'RxNorm connectivity: Online'}\n              {connStatus === 'offline' && 'RxNorm connectivity: Offline (fallback)'}\n              {connStatus === 'error' && 'RxNorm connectivity: Error'}\n              {connStatus === 'unknown' && 'RxNorm connectivity: Unknown'}\n              {connCheckedAt ? ` • Checked ${connCheckedAt}` : ''}\n            </span>\n          </div>\n          <button\n            onClick={testConnectivity}\n            disabled={connTesting}\n            className=\"text-blue-700 hover:text-blue-800 underline disabled:opacity-60\"\n          >\n            {connTesting ? 'Testing…' : 'Test connectivity'}\n          </button>\n        </div>\n      </div>\n\n      {/* Search Mode Selector */}\n      <div className=\"flex items-center justify-center space-x-4\">\n        <div className=\"flex bg-gray-100 rounded-lg p-1\">\n          {[\n            { mode: 'basic', label: 'Basic Search', icon: Search },\n            { mode: 'advanced', label: 'Advanced Filters', icon: Filter },\n            { mode: 'ai', label: 'AI Assistant', icon: Brain }\n          ].map(({ mode, label, icon: Icon }) => (\n            <button\n              key={mode}\n              onClick={() => setSearchMode(mode as typeof searchMode)}\n              className={`flex items-center space-x-2 px-4 py-2 rounded-md text-sm font-medium transition-all ${\n                searchMode === mode\n                  ? 'bg-white text-violet-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon className=\"w-4 h-4\" />\n              <span>{label}</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Search Interface Based on Mode */}\n      {searchMode === 'basic' && (\n        <div className=\"max-w-4xl mx-auto\">\n          <AutocompleteSearch\n            placeholder=\"Search drugs by name, indication, or mechanism...\"\n            onSelect={(option) => {\n              setSearchQuery(option.value);\n              // If this is a drug option, treat it as a direct drug selection\n              if (option.type === 'drug') {\n                // Create a drug object from the autocomplete option\n                const drug: Drug = {\n                  rxcui: option.id,\n                  name: option.label,\n                  synonym: option.value,\n                  tty: 'SBD'\n                };\n                handleDrugSelect(drug);\n              } else {\n                // For non-drug options (indications, mechanisms), do a search\n                handleSearch(option.value);\n              }\n            }}\n            onInputChange={(value) => setSearchQuery(value)}\n            value={searchQuery}\n            loading={loading}\n            maxResults={8}\n            showCategories={true}\n            className=\"w-full\"\n            onOfflineChange={(offline) => {\n              if (offline) {\n                if (!rxnormToastDismissed) setRxnormOfflineToast(true);\n              } else {\n                setRxnormOfflineToast(false);\n              }\n            }}\n          />\n          <div className=\"flex items-center justify-center mt-4\">\n            <button \n              onClick={() => handleSearch(searchQuery)}\n              disabled={loading || !searchQuery || !String(searchQuery).trim()}\n              className=\"bg-gradient-to-r from-violet-600 to-indigo-600 text-white px-8 py-3 text-lg rounded-lg hover:from-violet-700 hover:to-indigo-700 disabled:opacity-50 flex items-center space-x-2\"\n            >\n              <Search className=\"h-5 w-5\" />\n              <span>Search Drugs</span>\n            </button>\n          </div>\n          {/* Top matches after analyzing */}\n          {searchQuery && String(searchQuery).trim().length >= 2 && (\n            <div className=\"mt-4 bg-white border border-gray-200 rounded-lg shadow-sm\">\n              <div className=\"px-3 py-2 border-b flex items-center justify-between\">\n                <div className=\"text-sm font-medium text-gray-700\">Top matches</div>\n                {basicSuggestionsOffline && (\n                  <div className=\"text-[11px] text-gray-500\">Using offline suggestions</div>\n                )}\n              </div>\n              <div className=\"p-3\">\n                {basicSuggestionsLoading ? (\n                  <div className=\"text-xs text-gray-500\">Analyzing…</div>\n                ) : basicSuggestions.length > 0 ? (\n                  <div className=\"flex flex-wrap gap-2\">\n                    {basicSuggestions.map((s, i) => (\n                      <button\n                        key={`${s.rxcui || s.name}-${i}`}\n                        onClick={() => setSearchQuery(s.name)}\n                        className=\"px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800 hover:bg-gray-200\"\n                        title={s.rxcui ? `RXCUI ${s.rxcui}` : s.name}\n                      >\n                        {s.name}\n                      </button>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"text-xs text-gray-500\">No matches</div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n      \n      {searchMode === 'advanced' && (\n        <ImprovedDrugSearch onOfflineChange={(offline) => {\n          if (offline) {\n            if (!rxnormToastDismissed) setRxnormOfflineToast(true);\n          } else {\n            setRxnormOfflineToast(false);\n          }\n        }} />\n      )}\n      \n      {searchMode === 'ai' && (\n        <div className=\"space-y-6\">\n          <Card className=\"border-violet-200 bg-gradient-to-r from-violet-50 to-indigo-50\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center space-x-2 mb-6\">\n                <Brain className=\"h-6 w-6 text-violet-600\" />\n                <h2 className=\"text-xl font-bold text-violet-800\">AI Drug Discovery Assistant</h2>\n                <span className=\"px-2 py-1 bg-violet-100 text-violet-800 rounded-full text-sm font-medium\">\n                  Beta\n                </span>\n              </div>\n              \n              <div className=\"text-center mb-6\">\n                <div className=\"flex items-center justify-center space-x-2 mb-4\">\n                  <Sparkles className=\"h-8 w-8 text-violet-600\" />\n                  <span className=\"text-2xl font-bold text-violet-800\">Ask the AI</span>\n                </div>\n                <p className=\"text-gray-600 mb-6\">\n                  Describe your patient case, treatment goals, or ask questions about drug therapy\n                </p>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n                <div className=\"p-4 cursor-pointer hover:bg-blue-50 border border-blue-200 rounded-lg bg-white\">\n                  <div className=\"flex items-center space-x-2 text-blue-600 mb-2\">\n                    <Target className=\"h-5 w-5\" />\n                    <span className=\"font-medium\">Find Similar Drugs</span>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    \"Find drugs similar to pembrolizumab for lung cancer\"\n                  </p>\n                </div>\n                \n                <div className=\"p-4 cursor-pointer hover:bg-green-50 border border-green-200 rounded-lg bg-white\">\n                  <div className=\"flex items-center space-x-2 text-green-600 mb-2\">\n                    <Activity className=\"h-5 w-5\" />\n                    <span className=\"font-medium\">Biomarker Matching</span>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    \"What drugs target HER2-positive breast cancer?\"\n                  </p>\n                </div>\n                \n                <div className=\"p-4 cursor-pointer hover:bg-purple-50 border border-purple-200 rounded-lg bg-white\">\n                  <div className=\"flex items-center space-x-2 text-purple-600 mb-2\">\n                    <Zap className=\"h-5 w-5\" />\n                    <span className=\"font-medium\">Drug Interactions</span>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    \"Check interactions between warfarin and chemotherapy\"\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"relative\">\n                <textarea\n                  id=\"ai-input\"\n                  placeholder=\"Describe your patient case or ask a question about drug therapy...\"\n                  className=\"w-full p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-violet-500 focus:border-violet-500 h-32 resize-none\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n                <div className=\"flex items-center justify-between mt-4\">\n                  <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n                    <Info className=\"h-4 w-4\" />\n                    <span>AI responses are for educational purposes only</span>\n                  </div>\n                  <button \n                    onClick={() => {\n                      if (searchQuery && String(searchQuery).trim()) {\n                        setAiInsights({ \n                          query: searchQuery,\n                          response: \"AI assistant is currently in development. For now, please use the basic or advanced search modes to find specific drugs and their interactions.\",\n                          suggestions: [\n                            \"Try searching for specific drug names\",\n                            \"Use the advanced filters to narrow your search\",\n                            \"Check drug interactions in the interaction checker\"\n                          ]\n                        });\n                      }\n                    }}\n                    disabled={!searchQuery || !String(searchQuery).trim() || loading}\n                    className=\"bg-gradient-to-r from-violet-600 to-indigo-600 text-white px-4 py-2 rounded-lg hover:from-violet-700 hover:to-indigo-700 flex items-center space-x-2 disabled:opacity-50\"\n                  >\n                    <Brain className=\"h-4 w-4\" />\n                    <span>Ask AI Assistant</span>\n                  </button>\n                </div>\n              </div>\n              \n              {/* AI Response */}\n              {aiInsights && (\n                <div className=\"mt-6 p-4 bg-violet-50 border border-violet-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-2 mb-3\">\n                    <Brain className=\"h-5 w-5 text-violet-600\" />\n                    <span className=\"font-medium text-violet-800\">AI Response</span>\n                  </div>\n                  <p className=\"text-gray-700 mb-4\">{aiInsights.response}</p>\n                  {aiInsights.suggestions && (\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 mb-2\">Suggestions:</h4>\n                      <ul className=\"list-disc list-inside space-y-1\">\n                        {aiInsights.suggestions.map((suggestion, index) => (\n                          <li key={index} className=\"text-sm text-gray-600\">{suggestion}</li>\n                        ))}\n                      </ul>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </Card>\n        </div>\n      )}\n\n      {/* Quick Access Pills and Filters - Only show for basic/advanced modes */}\n      {(searchMode === 'basic' || searchMode === 'advanced') && (\n        <div className=\"space-y-4\">\n        {/* Pinned quick access chips */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex flex-wrap gap-2 items-center\">\n            <span className=\"text-sm text-gray-600 mr-1\">Pinned:</span>\n            {pinnedList.length === 0 ? (\n              <span className=\"text-xs text-gray-400\">No pinned drugs yet</span>\n            ) : (\n              pinnedList.slice(0, 10).map((p, idx) => (\n                <div\n                  key={p.rxcui}\n                  className=\"inline-flex items-center pl-2 pr-1 py-1 rounded-full text-xs bg-yellow-50 text-yellow-800 border border-yellow-200\"\n                  title={`Pinned: ${p.name}`}\n                  draggable\n                  onDragStart={(e) => { e.dataTransfer.setData('text/plain', p.rxcui); e.dataTransfer.effectAllowed = 'move'; }}\n                  onDragOver={(e) => { e.preventDefault(); e.dataTransfer.dropEffect = 'move'; }}\n                  onDrop={(e) => {\n                    e.preventDefault();\n                    const dragged = e.dataTransfer.getData('text/plain');\n                    if (!dragged || dragged === p.rxcui) return;\n                    const list = pinnedList.slice(0, 10).map(x => x.rxcui);\n                    const from = list.indexOf(dragged);\n                    const to = idx;\n                    if (from === -1 || to === -1) return;\n                    list.splice(to, 0, list.splice(from, 1)[0]);\n                    reorderPins(list);\n                    setPinsTick(x => x + 1);\n                  }}\n                >\n                  <button\n                    onClick={() => handleSearch(p.name)}\n                    className=\"px-0.5 mr-1 hover:underline\"\n                    aria-label={`Search for ${p.name}`}\n                  >\n                    {p.name}\n                  </button>\n                  <button\n                    onClick={(e) => { e.stopPropagation(); togglePin(p.rxcui, p.name); setPinsTick((x) => x + 1); }}\n                    className=\"ml-1 inline-flex items-center justify-center w-4 h-4 rounded-full hover:bg-yellow-100\"\n                    aria-label={`Unpin ${p.name}`}\n                    title=\"Unpin\"\n                  >\n                    <X className=\"w-3 h-3\" />\n                  </button>\n                </div>\n              ))\n            )}\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            <button\n              type=\"button\"\n              className={`text-xs px-2 py-1 rounded-full border ${filters.onlyPinned ? 'bg-yellow-100 text-yellow-800 border-yellow-200' : 'text-gray-600 bg-gray-50 border-gray-200 hover:text-gray-800'}`}\n              onClick={() => updateFilters({ onlyPinned: !filters.onlyPinned })}\n              aria-pressed={filters.onlyPinned}\n              aria-label={`Show only pinned ${filters.onlyPinned ? 'on' : 'off'}`}\n              title=\"Show only pinned in results\"\n            >\n              Show only pinned\n            </button>\n            <button\n              type=\"button\"\n              className=\"text-xs text-gray-500 hover:text-gray-700 underline\"\n              onClick={() => {\n                if (!searchResults || !Array.isArray(searchResults.results)) return;\n                const pins = getPins();\n                const oncoNames = ['pembrolizumab','nivolumab','fluorouracil','cisplatin','doxorubicin','paclitaxel','tamoxifen','imatinib'];\n                const visible = searchResults.results.filter((drug) => {\n                  const ttyOk = activeTtySet.size === 0 || (drug.tty ? activeTtySet.has(drug.tty) : false);\n                  const isOnco = oncoNames.some(n => (drug.name || '').toLowerCase().includes(n));\n                  const oncoOk = !filters.onlyOncology || isOnco;\n                  return ttyOk && oncoOk && pins[drug.rxcui];\n                });\n                visible.forEach(d => { if (pins[d.rxcui]) togglePin(d.rxcui, d.name); });\n                setPinsTick(x => x + 1);\n              }}\n              aria-label=\"Unpin all shown results\"\n              title=\"Unpin all shown in results\"\n            >\n              Unpin Shown\n            </button>\n            <button\n              type=\"button\"\n              className=\"text-xs text-gray-500 hover:text-gray-700 underline\"\n              onClick={() => { clearPins(); setPinsTick((x) => x + 1); }}\n              aria-label=\"Clear pinned drugs\"\n            >\n              Clear Pins\n            </button>\n          </div>\n        </div>\n        \n        </div>\n      )}\n\n      {/* Filter chips */}\n      <div className=\"flex flex-wrap gap-2 items-center\">\n        <span className=\"text-sm text-gray-600 mr-1\">Filters:</span>\n        {['BN','SCD','SBD','IN','MIN'].map((tty) => (\n          <button\n            key={tty}\n            type=\"button\"\n            onClick={() => updateFilters({ [tty]: !filters[tty as keyof typeof filters] })}\n            className={`px-2 py-1 rounded-full text-xs border ${filters[tty as keyof typeof filters] ? 'bg-blue-100 text-blue-700 border-blue-200' : 'bg-gray-50 text-gray-600 border-gray-200'}`}\n            aria-pressed={filters[tty as keyof typeof filters]}\n            aria-label={`Filter ${tty} ${filters[tty as keyof typeof filters] ? 'on' : 'off'}`}\n          >\n            {tty}\n          </button>\n        ))}\n        <button\n          type=\"button\"\n          onClick={() => updateFilters({ onlyOncology: !filters.onlyOncology })}\n          className={`px-2 py-1 rounded-full text-xs border ${filters.onlyOncology ? 'bg-purple-100 text-purple-700 border-purple-200' : 'bg-gray-50 text-gray-600 border-gray-200'}`}\n          aria-pressed={filters.onlyOncology}\n          aria-label={`Oncology filter ${filters.onlyOncology ? 'on' : 'off'}`}\n        >\n          Oncology\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => updateFilters({ onlyPinned: !filters.onlyPinned })}\n          className={`px-2 py-1 rounded-full text-xs border ${filters.onlyPinned ? 'bg-yellow-100 text-yellow-800 border-yellow-200' : 'bg-gray-50 text-gray-600 border-gray-200'}`}\n          aria-pressed={filters.onlyPinned}\n          aria-label={`Pinned filter ${filters.onlyPinned ? 'on' : 'off'}`}\n        >\n          Pinned only\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => updateFilters({ BN: false, SCD: false, SBD: false, IN: false, MIN: false, onlyOncology: false })}\n          className=\"px-2 py-1 rounded-full text-xs border bg-gray-50 text-gray-600 border-gray-200\"\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            if (!searchResults || !Array.isArray(searchResults.results)) return;\n            const pins = getPins();\n            const oncoNames = ['pembrolizumab','nivolumab','fluorouracil','cisplatin','doxorubicin','paclitaxel','tamoxifen','imatinib'];\n            const visible = searchResults.results.filter((drug) => {\n              const ttyOk = activeTtySet.size === 0 || (drug.tty ? activeTtySet.has(drug.tty) : false);\n              const isOnco = oncoNames.some(n => (drug.name || '').toLowerCase().includes(n));\n              const oncoOk = !filters.onlyOncology || isOnco;\n              return ttyOk && oncoOk;\n            });\n            visible.forEach(d => { if (!pins[d.rxcui]) togglePin(d.rxcui, d.name); });\n            setPinsTick((x) => x + 1);\n          }}\n          className=\"px-2 py-1 rounded-full text-xs border bg-yellow-50 text-yellow-800 border-yellow-200 hover:bg-yellow-100\"\n          aria-label=\"Pin all shown results\"\n        >\n          Pin All Shown\n        </button>\n      </div>\n\n      {/* Search Results - Only show if we have results */}\n      {searchResults && (\n        <div className={`grid ${selectedDrug ? 'md:grid-cols-2 gap-6' : ''}`}>\n          <div>\n            <DrugSearchResults\n              results={searchResults}\n              loading={loading}\n              error={error}\n              onDrugSelect={handleDrugSelect}\n              filters={{ onlyOncology: filters.onlyOncology, onlyPinned: filters.onlyPinned, tty: activeTtySet }}\n              pinVersion={pinsTick}\n            />\n          </div>\n          {selectedDrug && (\n            <div>\n              <DrugCard drug={selectedDrug} showDetails={true} />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Help Section */}\n      {!searchResults && !loading && (\n        <Card className=\"bg-gradient-to-r from-blue-50 to-indigo-50 border-blue-200\">\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Database className=\"w-5 h-5 text-blue-600\" />\n              <h3 className=\"text-lg font-semibold text-blue-900\">Search Features</h3>\n            </div>\n            <div className=\"grid md:grid-cols-2 gap-6 text-sm text-blue-800\">\n              <div>\n                <h4 className=\"font-medium mb-2 flex items-center space-x-1\">\n                  <Search className=\"w-4 h-4\" />\n                  <span>Search Capabilities</span>\n                </h4>\n                <ul className=\"space-y-1\">\n                  <li>• Search by generic or brand name</li>\n                  <li>• Partial name matching supported</li>\n                  <li>• Case-insensitive search</li>\n                  <li>• Search by drug categories</li>\n                </ul>\n              </div>\n              <div>\n                <h4 className=\"font-medium mb-2 flex items-center space-x-1\">\n                  <Star className=\"w-4 h-4\" />\n                  <span>Quick Access</span>\n                </h4>\n                <ul className=\"space-y-1\">\n                  <li>• Organized drug shortcuts by category</li>\n                  <li>• Common medications readily available</li>\n                  <li>• Oncology drugs for cancer care</li>\n                  <li>• Cardiovascular medications</li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"mt-4 p-3 bg-blue-100 rounded-lg\">\n              <p className=\"text-blue-800 text-sm\">\n                <strong>Tip:</strong> Use the quick access buttons above for common medications, or search directly by typing the drug name.\n              </p>\n            </div>\n          </div>\n        </Card>\n      )}\n\n      {/* Data Sources */}\n      <Alert type=\"info\" title=\"Data Sources\">\n        Drug information is sourced from RxNorm (National Library of Medicine), FDA's DailyMed database, \n        and our curated database of oncology medications. Data is regularly updated to ensure accuracy.\n      </Alert>\n    </div>\n  );\n};\n\nconst DrugSearch: React.FC = () => {\n  return (\n    <FeatureErrorBoundary \n      featureName=\"Drug Search\"\n      fallbackMessage=\"The drug search feature is temporarily unavailable. This may be due to database connectivity or processing issues.\"\n    >\n      <DrugSearchInner />\n    </FeatureErrorBoundary>\n  );\n};\n\nexport default DrugSearch;\n"],"file":"assets/DrugSearch-Dc31tXab.js"}