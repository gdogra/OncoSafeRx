{"version":3,"file":"TreatmentOutcomesEngine-CYnIbhuG.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-down.js","../../node_modules/lucide-react/dist/esm/icons/arrow-up.js","../../src/components/Predictive/TreatmentOutcomesEngine.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 5v14\", key: \"s699le\" }],\n  [\"path\", { d: \"m19 12-7 7-7-7\", key: \"1idqje\" }]\n];\nconst ArrowDown = createLucideIcon(\"arrow-down\", __iconNode);\n\nexport { __iconNode, ArrowDown as default };\n//# sourceMappingURL=arrow-down.js.map\n","/**\n * @license lucide-react v0.544.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m5 12 7-7 7 7\", key: \"hav0vg\" }],\n  [\"path\", { d: \"M12 19V5\", key: \"x0mq9r\" }]\n];\nconst ArrowUp = createLucideIcon(\"arrow-up\", __iconNode);\n\nexport { __iconNode, ArrowUp as default };\n//# sourceMappingURL=arrow-up.js.map\n","import React, { useState, useEffect } from 'react';\nimport { usePatient } from '../../context/PatientContext';\nimport Card from '../UI/Card';\nimport Alert from '../UI/Alert';\nimport Tooltip from '../UI/Tooltip';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { \n  Brain, \n  Target,\n  TrendingUp,\n  TrendingDown,\n  Activity,\n  Calendar,\n  Clock,\n  Users,\n  Star,\n  BarChart3,\n  LineChart,\n  PieChart,\n  Zap,\n  Shield,\n  AlertTriangle,\n  CheckCircle,\n  Eye,\n  Microscope,\n  Dna,\n  Pill,\n  Heart,\n  Stethoscope,\n  Timer,\n  Award,\n  ArrowRight,\n  ArrowUp,\n  ArrowDown,\n  Minus,\n  Plus,\n  Info,\n  Filter,\n  Download,\n  Sparkles\n} from 'lucide-react';\n\ninterface PredictionModel {\n  id: string;\n  name: string;\n  type: 'survival' | 'response' | 'toxicity' | 'recurrence' | 'quality_of_life';\n  version: string;\n  accuracy: number;\n  last_trained: string;\n  training_size: number;\n  features_used: string[];\n  validation_method: string;\n  performance_metrics: {\n    auc: number;\n    sensitivity: number;\n    specificity: number;\n    precision: number;\n    recall: number;\n  };\n}\n\ninterface TreatmentPrediction {\n  id: string;\n  model_id: string;\n  patient_id: string;\n  treatment_option: {\n    name: string;\n    regimen: string;\n    duration_weeks: number;\n    administration: string;\n  };\n  predictions: {\n    overall_survival_months: number;\n    progression_free_survival_months: number;\n    response_probability: number;\n    complete_response_probability: number;\n    toxicity_risk: {\n      grade_3_4_probability: number;\n      specific_toxicities: {\n        name: string;\n        probability: number;\n        severity: 'mild' | 'moderate' | 'severe';\n      }[];\n    };\n    quality_of_life_score: number;\n    biomarker_response: {\n      marker: string;\n      predicted_change: number;\n      confidence: number;\n    }[];\n  };\n  confidence_interval: {\n    lower: number;\n    upper: number;\n  };\n  risk_factors: {\n    factor: string;\n    impact: 'positive' | 'negative' | 'neutral';\n    weight: number;\n  }[];\n  similar_patients: {\n    count: number;\n    characteristics: string[];\n    outcomes: {\n      median_survival: number;\n      response_rate: number;\n    };\n  };\n  recommendations: {\n    level: 'strong' | 'moderate' | 'weak';\n    rationale: string;\n    considerations: string[];\n  };\n  uncertainty_factors: string[];\n  generated_at: string;\n}\n\ninterface PopulationComparison {\n  metric: string;\n  patient_value: number;\n  population_median: number;\n  population_range: [number, number];\n  percentile: number;\n  cohort_size: number;\n  status: 'better' | 'similar' | 'worse';\n}\n\ninterface ClinicalTrial {\n  id: string;\n  title: string;\n  phase: '1' | '2' | '3' | '4';\n  status: 'recruiting' | 'active' | 'completed';\n  eligibility_match: number;\n  primary_endpoint: string;\n  estimated_completion: string;\n  location: string;\n  sponsor: string;\n  predicted_benefit: number;\n}\n\nconst TreatmentOutcomesEngine: React.FC = () => {\n  const { state } = usePatient();\n  const { currentPatient } = state;\n  const [predictions, setPredictions] = useState<TreatmentPrediction[]>([]);\n  const [models, setModels] = useState<PredictionModel[]>([]);\n  const [selectedPrediction, setSelectedPrediction] = useState<string | null>(null);\n  const [populationComparisons, setPopulationComparisons] = useState<PopulationComparison[]>([]);\n  const [clinicalTrials, setClinicalTrials] = useState<ClinicalTrial[]>([]);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [selectedTimeframe, setSelectedTimeframe] = useState<'3m' | '6m' | '1y' | '2y' | '5y'>('1y');\n  const [riskProfile, setRiskProfile] = useState<'conservative' | 'moderate' | 'aggressive'>('moderate');\n\n  useEffect(() => {\n    if (currentPatient) {\n      initializePredictiveData();\n    }\n  }, [currentPatient]);\n\n  const initializePredictiveData = () => {\n    if (!currentPatient) return;\n\n    // Initialize AI models\n    const aiModels: PredictionModel[] = [\n      {\n        id: 'model-1',\n        name: 'OncoPredict Survival Model',\n        type: 'survival',\n        version: '3.2.1',\n        accuracy: 0.87,\n        last_trained: '2024-01-15',\n        training_size: 15840,\n        features_used: ['age', 'stage', 'biomarkers', 'genomics', 'comorbidities', 'performance_status'],\n        validation_method: 'Cross-validation',\n        performance_metrics: {\n          auc: 0.89,\n          sensitivity: 0.84,\n          specificity: 0.91,\n          precision: 0.86,\n          recall: 0.84\n        }\n      },\n      {\n        id: 'model-2',\n        name: 'ToxiGuard Risk Predictor',\n        type: 'toxicity',\n        version: '2.8.4',\n        accuracy: 0.82,\n        last_trained: '2024-01-20',\n        training_size: 23150,\n        features_used: ['genetics', 'prior_treatments', 'organ_function', 'drug_interactions'],\n        validation_method: 'External validation',\n        performance_metrics: {\n          auc: 0.85,\n          sensitivity: 0.79,\n          specificity: 0.88,\n          precision: 0.83,\n          recall: 0.79\n        }\n      },\n      {\n        id: 'model-3',\n        name: 'ResponseNet Predictor',\n        type: 'response',\n        version: '4.1.0',\n        accuracy: 0.91,\n        last_trained: '2024-01-25',\n        training_size: 18920,\n        features_used: ['tumor_markers', 'imaging', 'genomic_profile', 'immune_status'],\n        validation_method: 'Prospective validation',\n        performance_metrics: {\n          auc: 0.93,\n          sensitivity: 0.89,\n          specificity: 0.94,\n          precision: 0.92,\n          recall: 0.89\n        }\n      }\n    ];\n\n    // Generate treatment predictions\n    const treatmentPredictions: TreatmentPrediction[] = [\n      {\n        id: 'pred-1',\n        model_id: 'model-1',\n        patient_id: currentPatient.id,\n        treatment_option: {\n          name: 'FOLFOX + Bevacizumab',\n          regimen: '5-FU, Leucovorin, Oxaliplatin + Bevacizumab',\n          duration_weeks: 24,\n          administration: 'IV every 2 weeks'\n        },\n        predictions: {\n          overall_survival_months: 28.4,\n          progression_free_survival_months: 12.8,\n          response_probability: 0.72,\n          complete_response_probability: 0.18,\n          toxicity_risk: {\n            grade_3_4_probability: 0.34,\n            specific_toxicities: [\n              { name: 'Peripheral neuropathy', probability: 0.42, severity: 'moderate' },\n              { name: 'Neutropenia', probability: 0.28, severity: 'severe' },\n              { name: 'Diarrhea', probability: 0.35, severity: 'mild' }\n            ]\n          },\n          quality_of_life_score: 7.2,\n          biomarker_response: [\n            { marker: 'CEA', predicted_change: -65, confidence: 0.85 },\n            { marker: 'CA 19-9', predicted_change: -48, confidence: 0.78 }\n          ]\n        },\n        confidence_interval: { lower: 22.1, upper: 34.7 },\n        risk_factors: [\n          { factor: 'Age > 65', impact: 'negative', weight: 0.15 },\n          { factor: 'Good performance status', impact: 'positive', weight: 0.25 },\n          { factor: 'MSI-High tumor', impact: 'positive', weight: 0.35 },\n          { factor: 'Stage IV disease', impact: 'negative', weight: 0.40 }\n        ],\n        similar_patients: {\n          count: 1247,\n          characteristics: ['Stage IV colorectal cancer', 'MSI-High', 'Age 60-70'],\n          outcomes: {\n            median_survival: 26.8,\n            response_rate: 0.68\n          }\n        },\n        recommendations: {\n          level: 'strong',\n          rationale: 'High predicted response rate and favorable genetic profile',\n          considerations: [\n            'Monitor for peripheral neuropathy',\n            'Consider prophylactic antiemetics',\n            'Regular liver function monitoring'\n          ]\n        },\n        uncertainty_factors: [\n          'Limited data for this specific genetic subtype',\n          'Potential drug interactions not fully modeled'\n        ],\n        generated_at: new Date().toISOString()\n      },\n      {\n        id: 'pred-2',\n        model_id: 'model-2',\n        patient_id: currentPatient.id,\n        treatment_option: {\n          name: 'Pembrolizumab Monotherapy',\n          regimen: 'Pembrolizumab 200mg',\n          duration_weeks: 48,\n          administration: 'IV every 3 weeks'\n        },\n        predictions: {\n          overall_survival_months: 32.1,\n          progression_free_survival_months: 18.6,\n          response_probability: 0.84,\n          complete_response_probability: 0.28,\n          toxicity_risk: {\n            grade_3_4_probability: 0.18,\n            specific_toxicities: [\n              { name: 'Immune-related pneumonitis', probability: 0.08, severity: 'severe' },\n              { name: 'Thyroiditis', probability: 0.15, severity: 'mild' },\n              { name: 'Fatigue', probability: 0.45, severity: 'moderate' }\n            ]\n          },\n          quality_of_life_score: 8.1,\n          biomarker_response: [\n            { marker: 'PD-L1 expression', predicted_change: -75, confidence: 0.92 },\n            { marker: 'Tumor mutational burden', predicted_change: -45, confidence: 0.87 }\n          ]\n        },\n        confidence_interval: { lower: 26.8, upper: 37.4 },\n        risk_factors: [\n          { factor: 'MSI-High tumor', impact: 'positive', weight: 0.45 },\n          { factor: 'High PD-L1 expression', impact: 'positive', weight: 0.35 },\n          { factor: 'No prior immunotherapy', impact: 'positive', weight: 0.20 }\n        ],\n        similar_patients: {\n          count: 894,\n          characteristics: ['MSI-High colorectal cancer', 'PD-L1 positive', 'Treatment-naive'],\n          outcomes: {\n            median_survival: 30.5,\n            response_rate: 0.81\n          }\n        },\n        recommendations: {\n          level: 'strong',\n          rationale: 'Excellent predicted response due to MSI-High status and high PD-L1 expression',\n          considerations: [\n            'Monitor for immune-related adverse events',\n            'Baseline thyroid function assessment',\n            'Patient education on immune toxicities'\n          ]\n        },\n        uncertainty_factors: [\n          'Individual immune system variability',\n          'Long-term durability data still maturing'\n        ],\n        generated_at: new Date().toISOString()\n      },\n      {\n        id: 'pred-3',\n        model_id: 'model-3',\n        patient_id: currentPatient.id,\n        treatment_option: {\n          name: 'FOLFIRI + Cetuximab',\n          regimen: '5-FU, Leucovorin, Irinotecan + Cetuximab',\n          duration_weeks: 20,\n          administration: 'IV every 2 weeks'\n        },\n        predictions: {\n          overall_survival_months: 24.2,\n          progression_free_survival_months: 10.4,\n          response_probability: 0.58,\n          complete_response_probability: 0.12,\n          toxicity_risk: {\n            grade_3_4_probability: 0.41,\n            specific_toxicities: [\n              { name: 'Skin rash', probability: 0.78, severity: 'moderate' },\n              { name: 'Diarrhea', probability: 0.52, severity: 'severe' },\n              { name: 'Hypomagnesemia', probability: 0.38, severity: 'mild' }\n            ]\n          },\n          quality_of_life_score: 6.8,\n          biomarker_response: [\n            { marker: 'EGFR expression', predicted_change: -58, confidence: 0.76 },\n            { marker: 'KRAS wild-type benefit', predicted_change: 25, confidence: 0.89 }\n          ]\n        },\n        confidence_interval: { lower: 19.8, upper: 28.6 },\n        risk_factors: [\n          { factor: 'KRAS wild-type', impact: 'positive', weight: 0.40 },\n          { factor: 'Left-sided primary', impact: 'positive', weight: 0.25 },\n          { factor: 'Multiple metastatic sites', impact: 'negative', weight: 0.30 }\n        ],\n        similar_patients: {\n          count: 756,\n          characteristics: ['KRAS wild-type', 'Left-sided primary', 'Multiple organ involvement'],\n          outcomes: {\n            median_survival: 23.1,\n            response_rate: 0.55\n          }\n        },\n        recommendations: {\n          level: 'moderate',\n          rationale: 'Reasonable option for KRAS wild-type tumors but higher toxicity profile',\n          considerations: [\n            'Prophylactic skin care regimen',\n            'Aggressive anti-diarrheal management',\n            'Regular electrolyte monitoring'\n          ]\n        },\n        uncertainty_factors: [\n          'Skin toxicity tolerance varies significantly',\n          'Prior anti-EGFR exposure not fully accounted for'\n        ],\n        generated_at: new Date().toISOString()\n      }\n    ];\n\n    // Population comparisons\n    const comparisons: PopulationComparison[] = [\n      {\n        metric: 'Predicted Overall Survival',\n        patient_value: 28.4,\n        population_median: 22.8,\n        population_range: [12.5, 48.2],\n        percentile: 72,\n        cohort_size: 3247,\n        status: 'better'\n      },\n      {\n        metric: 'Response Probability',\n        patient_value: 0.72,\n        population_median: 0.65,\n        population_range: [0.35, 0.92],\n        percentile: 68,\n        cohort_size: 2891,\n        status: 'better'\n      },\n      {\n        metric: 'Toxicity Risk',\n        patient_value: 0.34,\n        population_median: 0.41,\n        population_range: [0.18, 0.72],\n        percentile: 35,\n        cohort_size: 2654,\n        status: 'better'\n      }\n    ];\n\n    // Clinical trials\n    const trials: ClinicalTrial[] = [\n      {\n        id: 'trial-1',\n        title: 'Phase III Study of Novel Immunotherapy Combination',\n        phase: '3',\n        status: 'recruiting',\n        eligibility_match: 0.91,\n        primary_endpoint: 'Overall Survival',\n        estimated_completion: '2026-12-31',\n        location: 'UCSF Medical Center',\n        sponsor: 'Bristol Myers Squibb',\n        predicted_benefit: 0.78\n      },\n      {\n        id: 'trial-2',\n        title: 'Personalized CAR-T Cell Therapy Study',\n        phase: '2',\n        status: 'recruiting',\n        eligibility_match: 0.84,\n        primary_endpoint: 'Progression-Free Survival',\n        estimated_completion: '2025-08-15',\n        location: 'Stanford Medical Center',\n        sponsor: 'Novartis',\n        predicted_benefit: 0.85\n      }\n    ];\n\n    setModels(aiModels);\n    setPredictions(treatmentPredictions);\n    setSelectedPrediction(treatmentPredictions[0].id);\n    setPopulationComparisons(comparisons);\n    setClinicalTrials(trials);\n  };\n\n  const generateNewPredictions = async () => {\n    setIsGenerating(true);\n    // Simulate AI prediction generation\n    await new Promise(resolve => setTimeout(resolve, 3000));\n    \n    // Refresh predictions with updated data\n    initializePredictiveData();\n    setIsGenerating(false);\n  };\n\n  const getPredictionIcon = (type: string) => {\n    switch (type) {\n      case 'survival': return <Timer className=\"w-5 h-5\" />;\n      case 'response': return <Target className=\"w-5 h-5\" />;\n      case 'toxicity': return <Shield className=\"w-5 h-5\" />;\n      case 'recurrence': return <Activity className=\"w-5 h-5\" />;\n      case 'quality_of_life': return <Heart className=\"w-5 h-5\" />;\n      default: return <Brain className=\"w-5 h-5\" />;\n    }\n  };\n\n  const getRecommendationColor = (level: string) => {\n    switch (level) {\n      case 'strong': return 'bg-green-100 text-green-800 border-green-200';\n      case 'moderate': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'weak': return 'bg-red-100 text-red-800 border-red-200';\n      default: return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const getImpactIcon = (impact: string) => {\n    switch (impact) {\n      case 'positive': return <ArrowUp className=\"w-4 h-4 text-green-600\" />;\n      case 'negative': return <ArrowDown className=\"w-4 h-4 text-red-600\" />;\n      case 'neutral': return <Minus className=\"w-4 h-4 text-gray-600\" />;\n      default: return <Activity className=\"w-4 h-4 text-gray-600\" />;\n    }\n  };\n\n  const getComparisonIcon = (status: string) => {\n    switch (status) {\n      case 'better': return <TrendingUp className=\"w-4 h-4 text-green-600\" />;\n      case 'worse': return <TrendingDown className=\"w-4 h-4 text-red-600\" />;\n      case 'similar': return <Minus className=\"w-4 h-4 text-gray-600\" />;\n      default: return <Activity className=\"w-4 h-4 text-gray-600\" />;\n    }\n  };\n\n  const selectedPredictionData = selectedPrediction \n    ? predictions.find(p => p.id === selectedPrediction) \n    : null;\n\n  if (!currentPatient) {\n    return (\n      <Card>\n        <div className=\"text-center py-12\">\n          <Brain className=\"w-16 h-16 mx-auto mb-4 text-gray-300\" />\n          <h3 className=\"text-xl font-semibold text-gray-500 mb-2\">Predictive Analytics Engine</h3>\n          <p className=\"text-gray-400 max-w-md mx-auto\">\n            Select a patient to generate AI-powered treatment outcome predictions and personalized recommendations\n          </p>\n        </div>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <Card className=\"bg-gradient-to-r from-purple-50 to-blue-50 border-purple-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center\">\n              <Brain className=\"w-6 h-6 text-purple-600\" />\n            </div>\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Predictive Analytics Engine</h1>\n              <p className=\"text-gray-600\">\n                AI-powered treatment outcome predictions for {currentPatient.demographics.firstName} {currentPatient.demographics.lastName}\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={generateNewPredictions}\n              disabled={isGenerating}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:bg-gray-400\"\n            >\n              {isGenerating ? <LoadingSpinner size=\"sm\" /> : <Sparkles className=\"w-4 h-4\" />}\n              <span>{isGenerating ? 'Generating...' : 'Generate Predictions'}</span>\n            </button>\n          </div>\n        </div>\n      </Card>\n\n      {/* AI Models Overview */}\n      <Card>\n        <div className=\"flex items-center space-x-2 mb-6\">\n          <Microscope className=\"w-6 h-6 text-blue-500\" />\n          <h2 className=\"text-xl font-semibold text-gray-900\">AI Models Performance</h2>\n        </div>\n        <div className=\"grid md:grid-cols-3 gap-4\">\n          {models.map((model) => (\n            <div key={model.id} className=\"border border-gray-200 rounded-lg p-4\">\n              <div className=\"flex items-center space-x-2 mb-3\">\n                {getPredictionIcon(model.type)}\n                <h3 className=\"font-semibold text-gray-900\">{model.name}</h3>\n              </div>\n              \n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Accuracy:</span>\n                  <span className=\"font-medium\">{(model.accuracy * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">AUC:</span>\n                  <span className=\"font-medium\">{model.performance_metrics.auc.toFixed(3)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Training Size:</span>\n                  <span className=\"font-medium\">{model.training_size.toLocaleString()}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Version:</span>\n                  <span className=\"font-medium\">v{model.version}</span>\n                </div>\n              </div>\n              \n              <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                <div className=\"text-xs text-gray-600 mb-1\">Key Features:</div>\n                <div className=\"flex flex-wrap gap-1\">\n                  {model.features_used.slice(0, 3).map((feature, idx) => (\n                    <span key={idx} className=\"px-2 py-1 bg-blue-100 text-blue-600 rounded text-xs\">\n                      {feature}\n                    </span>\n                  ))}\n                  {model.features_used.length > 3 && (\n                    <span className=\"px-2 py-1 bg-gray-100 text-gray-600 rounded text-xs\">\n                      +{model.features_used.length - 3}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Card>\n\n      {/* Treatment Predictions */}\n      <Card>\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center space-x-2\">\n            <Target className=\"w-6 h-6 text-green-500\" />\n            <h2 className=\"text-xl font-semibold text-gray-900\">Treatment Outcome Predictions</h2>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <select\n              value={selectedTimeframe}\n              onChange={(e) => setSelectedTimeframe(e.target.value as any)}\n              className=\"border border-gray-300 rounded-md px-3 py-1 text-sm focus:ring-2 focus:ring-purple-500 focus:border-purple-500\"\n            >\n              <option value=\"3m\">3 Months</option>\n              <option value=\"6m\">6 Months</option>\n              <option value=\"1y\">1 Year</option>\n              <option value=\"2y\">2 Years</option>\n              <option value=\"5y\">5 Years</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"grid md:grid-cols-3 gap-4 mb-6\">\n          {predictions.map((prediction) => (\n            <div\n              key={prediction.id}\n              onClick={() => setSelectedPrediction(prediction.id)}\n              className={`border rounded-lg p-4 cursor-pointer transition-all hover:shadow-md ${\n                selectedPrediction === prediction.id ? 'ring-2 ring-purple-500 bg-purple-50' : 'border-gray-200'\n              }`}\n            >\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"font-semibold text-gray-900\">{prediction.treatment_option.name}</h3>\n                <div className={`px-2 py-1 rounded-full text-xs font-medium border ${getRecommendationColor(prediction.recommendations.level)}`}>\n                  {prediction.recommendations.level}\n                </div>\n              </div>\n              \n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Overall Survival:</span>\n                  <span className=\"font-medium\">{prediction.predictions.overall_survival_months.toFixed(1)} months</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Response Rate:</span>\n                  <span className=\"font-medium\">{(prediction.predictions.response_probability * 100).toFixed(0)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Toxicity Risk:</span>\n                  <span className={`font-medium ${\n                    prediction.predictions.toxicity_risk.grade_3_4_probability < 0.3 ? 'text-green-600' :\n                    prediction.predictions.toxicity_risk.grade_3_4_probability < 0.5 ? 'text-yellow-600' : 'text-red-600'\n                  }`}>\n                    {(prediction.predictions.toxicity_risk.grade_3_4_probability * 100).toFixed(0)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">QoL Score:</span>\n                  <span className=\"font-medium\">{prediction.predictions.quality_of_life_score}/10</span>\n                </div>\n              </div>\n              \n              <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                <div className=\"text-xs text-gray-600 mb-1\">Regimen:</div>\n                <p className=\"text-xs text-gray-800\">{prediction.treatment_option.regimen}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Detailed Prediction View */}\n        {selectedPredictionData && (\n          <div className=\"border-t border-gray-200 pt-6\">\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {/* Prediction Details */}\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Detailed Predictions</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"bg-blue-50 p-4 rounded-lg\">\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <Timer className=\"w-5 h-5 text-blue-600\" />\n                      <h4 className=\"font-medium text-blue-900\">Survival Outcomes</h4>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                      <div>\n                        <div className=\"text-gray-600\">Overall Survival:</div>\n                        <div className=\"font-semibold text-blue-900\">\n                          {selectedPredictionData.predictions.overall_survival_months.toFixed(1)} months\n                        </div>\n                        <div className=\"text-xs text-gray-500\">\n                          95% CI: {selectedPredictionData.confidence_interval.lower.toFixed(1)}-{selectedPredictionData.confidence_interval.upper.toFixed(1)}\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-600\">Progression-Free:</div>\n                        <div className=\"font-semibold text-blue-900\">\n                          {selectedPredictionData.predictions.progression_free_survival_months.toFixed(1)} months\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-green-50 p-4 rounded-lg\">\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <Target className=\"w-5 h-5 text-green-600\" />\n                      <h4 className=\"font-medium text-green-900\">Response Predictions</h4>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                      <div>\n                        <div className=\"text-gray-600\">Overall Response:</div>\n                        <div className=\"font-semibold text-green-900\">\n                          {(selectedPredictionData.predictions.response_probability * 100).toFixed(0)}%\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"text-gray-600\">Complete Response:</div>\n                        <div className=\"font-semibold text-green-900\">\n                          {(selectedPredictionData.predictions.complete_response_probability * 100).toFixed(0)}%\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <Shield className=\"w-5 h-5 text-yellow-600\" />\n                      <h4 className=\"font-medium text-yellow-900\">Toxicity Risk</h4>\n                    </div>\n                    <div className=\"mb-3\">\n                      <div className=\"text-sm text-gray-600\">Grade 3-4 Toxicity Risk:</div>\n                      <div className=\"font-semibold text-yellow-900\">\n                        {(selectedPredictionData.predictions.toxicity_risk.grade_3_4_probability * 100).toFixed(0)}%\n                      </div>\n                    </div>\n                    <div className=\"space-y-2\">\n                      {selectedPredictionData.predictions.toxicity_risk.specific_toxicities.map((toxicity, idx) => (\n                        <div key={idx} className=\"flex justify-between text-sm\">\n                          <span className=\"text-gray-600\">{toxicity.name}:</span>\n                          <span className={`font-medium ${\n                            toxicity.severity === 'mild' ? 'text-green-600' :\n                            toxicity.severity === 'moderate' ? 'text-yellow-600' : 'text-red-600'\n                          }`}>\n                            {(toxicity.probability * 100).toFixed(0)}%\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Risk Factors & Recommendations */}\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Risk Factors & Recommendations</h3>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Key Risk Factors</h4>\n                    <div className=\"space-y-2\">\n                      {selectedPredictionData.risk_factors.map((factor, idx) => (\n                        <div key={idx} className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                          <div className=\"flex items-center space-x-2\">\n                            {getImpactIcon(factor.impact)}\n                            <span className=\"text-sm text-gray-800\">{factor.factor}</span>\n                          </div>\n                          <div className=\"text-sm font-medium\">\n                            Weight: {(factor.weight * 100).toFixed(0)}%\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className={`p-4 rounded-lg border ${getRecommendationColor(selectedPredictionData.recommendations.level)}`}>\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <Star className=\"w-5 h-5\" />\n                      <h4 className=\"font-medium\">Clinical Recommendation</h4>\n                    </div>\n                    <p className=\"text-sm mb-3\">{selectedPredictionData.recommendations.rationale}</p>\n                    <div className=\"space-y-1\">\n                      {selectedPredictionData.recommendations.considerations.map((consideration, idx) => (\n                        <div key={idx} className=\"flex items-start space-x-2 text-sm\">\n                          <ArrowRight className=\"w-3 h-3 mt-1 flex-shrink-0\" />\n                          <span>{consideration}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Similar Patients Outcomes</h4>\n                    <div className=\"bg-gray-50 p-3 rounded\">\n                      <div className=\"text-sm\">\n                        <div className=\"flex justify-between mb-1\">\n                          <span className=\"text-gray-600\">Cohort Size:</span>\n                          <span className=\"font-medium\">{selectedPredictionData.similar_patients.count} patients</span>\n                        </div>\n                        <div className=\"flex justify-between mb-1\">\n                          <span className=\"text-gray-600\">Median Survival:</span>\n                          <span className=\"font-medium\">{selectedPredictionData.similar_patients.outcomes.median_survival} months</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-gray-600\">Response Rate:</span>\n                          <span className=\"font-medium\">{(selectedPredictionData.similar_patients.outcomes.response_rate * 100).toFixed(0)}%</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Card>\n\n      {/* Population Comparison */}\n      <Card>\n        <div className=\"flex items-center space-x-2 mb-6\">\n          <Users className=\"w-6 h-6 text-orange-500\" />\n          <h2 className=\"text-xl font-semibold text-gray-900\">Population Comparison</h2>\n        </div>\n        <div className=\"grid md:grid-cols-3 gap-4\">\n          {populationComparisons.map((comparison, index) => (\n            <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"font-medium text-gray-900\">{comparison.metric}</h3>\n                {getComparisonIcon(comparison.status)}\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-gray-600\">Patient:</span>\n                  <span className=\"font-semibold\">{comparison.patient_value}</span>\n                </div>\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-gray-600\">Population:</span>\n                  <span className=\"font-medium\">{comparison.population_median}</span>\n                </div>\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-gray-600\">Percentile:</span>\n                  <span className={`font-medium ${\n                    comparison.percentile > 70 ? 'text-green-600' :\n                    comparison.percentile > 30 ? 'text-yellow-600' : 'text-red-600'\n                  }`}>\n                    {comparison.percentile}th\n                  </span>\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  Cohort: {comparison.cohort_size.toLocaleString()} patients\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Card>\n\n      {/* Clinical Trials Matching */}\n      <Card>\n        <div className=\"flex items-center space-x-2 mb-6\">\n          <Stethoscope className=\"w-6 h-6 text-indigo-500\" />\n          <h2 className=\"text-xl font-semibold text-gray-900\">Matching Clinical Trials</h2>\n        </div>\n        <div className=\"space-y-4\">\n          {clinicalTrials.map((trial) => (\n            <div key={trial.id} className=\"border border-gray-200 rounded-lg p-4\">\n              <div className=\"flex items-start justify-between mb-3\">\n                <div className=\"flex-1\">\n                  <h3 className=\"font-semibold text-gray-900 mb-1\">{trial.title}</h3>\n                  <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                    <span>Phase {trial.phase}</span>\n                    <span>•</span>\n                    <span className=\"capitalize\">{trial.status}</span>\n                    <span>•</span>\n                    <span>{trial.sponsor}</span>\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <div className={`px-2 py-1 rounded-full text-xs font-medium ${\n                    trial.eligibility_match > 0.8 ? 'bg-green-100 text-green-600' :\n                    trial.eligibility_match > 0.6 ? 'bg-yellow-100 text-yellow-600' :\n                    'bg-red-100 text-red-600'\n                  }`}>\n                    {(trial.eligibility_match * 100).toFixed(0)}% match\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"grid md:grid-cols-4 gap-4 text-sm\">\n                <div>\n                  <div className=\"text-gray-600\">Primary Endpoint:</div>\n                  <div className=\"font-medium\">{trial.primary_endpoint}</div>\n                </div>\n                <div>\n                  <div className=\"text-gray-600\">Location:</div>\n                  <div className=\"font-medium\">{trial.location}</div>\n                </div>\n                <div>\n                  <div className=\"text-gray-600\">Completion:</div>\n                  <div className=\"font-medium\">{new Date(trial.estimated_completion).toLocaleDateString()}</div>\n                </div>\n                <div>\n                  <div className=\"text-gray-600\">Predicted Benefit:</div>\n                  <div className={`font-medium ${\n                    trial.predicted_benefit > 0.7 ? 'text-green-600' :\n                    trial.predicted_benefit > 0.5 ? 'text-yellow-600' : 'text-red-600'\n                  }`}>\n                    {(trial.predicted_benefit * 100).toFixed(0)}%\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default TreatmentOutcomesEngine;"],"names":["__iconNode","ArrowDown","createLucideIcon","ArrowUp","TreatmentOutcomesEngine","state","usePatient","currentPatient","predictions","setPredictions","useState","models","setModels","selectedPrediction","setSelectedPrediction","populationComparisons","setPopulationComparisons","clinicalTrials","setClinicalTrials","isGenerating","setIsGenerating","selectedTimeframe","setSelectedTimeframe","riskProfile","setRiskProfile","useEffect","initializePredictiveData","aiModels","treatmentPredictions","comparisons","trials","generateNewPredictions","resolve","getPredictionIcon","type","jsx","Timer","Target","Shield","Activity","Heart","Brain","getRecommendationColor","level","getImpactIcon","impact","Minus","getComparisonIcon","status","TrendingUp","TrendingDown","selectedPredictionData","p","jsxs","Card","LoadingSpinner","Sparkles","Microscope","model","feature","idx","e","prediction","toxicity","factor","Star","consideration","ArrowRight","Users","comparison","index","Stethoscope","trial"],"mappings":"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","x_google_ignoreList":[0,1]}