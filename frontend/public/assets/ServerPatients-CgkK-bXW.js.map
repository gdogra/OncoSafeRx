{"version":3,"file":"ServerPatients-CgkK-bXW.js","sources":["../../src/pages/ServerPatients.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport Card from '../components/UI/Card';\nimport { usePatient } from '../context/PatientContext';\nimport { supabase } from '../lib/supabase';\nimport { Search, ChevronLeft, ChevronRight, RefreshCw, Edit, X } from 'lucide-react';\nimport { useToast } from '../components/UI/Toast';\n\nconst PAGE_SIZE = 10;\n\nconst ServerPatients: React.FC = () => {\n  console.log('üöÄ ServerPatients component loaded');\n  const { actions } = usePatient();\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [patients, setPatients] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [editing, setEditing] = useState<any | null>(null);\n  const [saving, setSaving] = useState(false);\n  const [saveError, setSaveError] = useState<string | null>(null);\n  const [usingDemoData, setUsingDemoData] = useState(false);\n  const totalPages = useMemo(() => Math.max(1, Math.ceil(total / PAGE_SIZE)), [total]);\n  const { showToast } = useToast();\n\n  const fetchPatients = async (opts?: { resetPage?: boolean }) => {\n    console.log('üéØ fetchPatients called with opts:', opts);\n    setLoading(true);\n    console.log('‚ö° setLoading(true) completed');\n    try {\n      console.log('üí´ Getting authentication token...');\n      \n      // Try multiple ways to get the token since getSession() times out\n      let token = null;\n      \n      // Method 1: Try stored JWT tokens (from localStorage)\n      try {\n        const storedTokens = localStorage.getItem('osrx_auth_tokens');\n        console.log('üí´ Stored tokens raw:', storedTokens ? 'Found' : 'Not found');\n        if (storedTokens) {\n          const parsed = JSON.parse(storedTokens);\n          console.log('üí´ Parsed token info:', { hasAccessToken: !!parsed.access_token, expiresAt: parsed.expires_at, now: Date.now() });\n          if (parsed.access_token && parsed.expires_at > Date.now()) {\n            token = parsed.access_token;\n            console.log('üí´ Using stored JWT token');\n          } else {\n            console.log('üí´ Stored token expired or invalid');\n          }\n        }\n      } catch (e) {\n        console.warn('üí´ Failed to get stored token:', e);\n      }\n      \n      // Method 2: Try getSession with short timeout (only if no stored token)\n      if (!token) {\n        try {\n          const sessionPromise = supabase.auth.getSession();\n          const timeoutPromise = new Promise((_, reject) => \n            setTimeout(() => reject(new Error('Session timeout')), 1000)\n          );\n          \n          const { data } = await Promise.race([sessionPromise, timeoutPromise]);\n          token = data?.session?.access_token;\n          console.log('üí´ Got token from getSession()');\n        } catch (error) {\n          console.warn('üí´ getSession() failed:', error.message);\n        }\n      }\n      \n      console.log('üí´ Final token status:', { hasToken: !!token });\n      const p = opts?.resetPage ? 1 : page;\n      const params = new URLSearchParams({ q: query, page: String(p), pageSize: String(PAGE_SIZE) });\n      \n      console.log('üîç Fetching patients:', {\n        url: `/api/patients?${params.toString()}`,\n        hasToken: !!token,\n        page: p,\n        query,\n        environment: process.env.NODE_ENV,\n        baseURL: window.location.origin\n      });\n      \n      // Test if API proxy is working at all\n      try {\n        const testResp = await fetch('/api/health', { signal: AbortSignal.timeout(3000) });\n        console.log('üè• API health check:', {\n          status: testResp.status,\n          ok: testResp.ok,\n          url: testResp.url\n        });\n      } catch (healthError) {\n        console.warn('‚ö†Ô∏è API health check failed:', healthError?.message);\n      }\n      \n      let resp = await fetch(`/api/patients?${params.toString()}`, { \n        headers: token ? { Authorization: `Bearer ${token}` } : {},\n        signal: AbortSignal.timeout(5000) // 5 second timeout\n      });\n      \n      console.log('üì° Patients API response:', {\n        status: resp.status,\n        ok: resp.ok,\n        statusText: resp.statusText,\n        hasToken: !!token\n      });\n      \n      // If auth failed, this is expected behavior now - no retries\n      if (!resp.ok && resp.status === 401) {\n        console.log('üîÑ Authentication required - this is expected in production');\n      }\n      \n      if (resp.ok) {\n        const body = await resp.json();\n        console.log('‚úÖ Patients API success:', {\n          patientsCount: body.patients?.length || 0,\n          total: body.total || 0,\n          offline: body.offline,\n          samplePatient: body.patients?.[0]\n        });\n        setPatients(body.patients || []);\n        setTotal(body.total || 0);\n        setUsingDemoData(body.offline || false);\n        if (opts?.resetPage) setPage(1);\n      } else {\n        // API call failed\n        console.error('‚ùå Patients API failed:', {\n          status: resp.status,\n          statusText: resp.statusText,\n          headers: Object.fromEntries(resp.headers.entries()),\n          url: resp.url\n        });\n        \n        const body = await resp.text();\n        console.error('‚ùå Error response body:', body);\n        \n        // Clear patients list and show appropriate error\n        setPatients([]);\n        setTotal(0);\n        setUsingDemoData(false);\n        \n        if (resp.status === 401) {\n          console.error('‚ùå Authentication failed - user may need to log in again');\n        } else if (resp.status === 503) {\n          console.error('‚ùå Database service unavailable');\n        }\n        \n        if (opts?.resetPage) setPage(1);\n      }\n    } catch (error) {\n      console.error('‚ùå Error fetching patients:', error);\n      console.error('‚ùå Error details:', {\n        name: error?.name,\n        message: error?.message,\n        stack: error?.stack\n      });\n      \n      // Clear data on error\n      setPatients([]);\n      setTotal(0);\n      setUsingDemoData(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => { \n    console.log('üìÖ useEffect triggered (page:', page, '), calling fetchPatients');\n    fetchPatients(); \n    /* eslint-disable-next-line */ \n  }, [page]);\n\n  const selectAndClose = (p: any) => {\n    const data = p.data || p;\n    actions.setCurrentPatient({ ...data, id: p.id || data.id });\n  };\n\n  const openEdit = (p: any) => {\n    const d = p.data?.demographics || p.demographics || {};\n    setEditing({\n      id: p.id,\n      firstName: d.firstName || '',\n      lastName: d.lastName || '',\n      mrn: d.mrn || '',\n      dateOfBirth: d.dateOfBirth || '',\n      sex: d.sex || 'unknown',\n      original: p,\n    });\n    setSaveError(null);\n  };\n\n  const saveEdit = async () => {\n    if (!editing) return;\n    if (!editing.firstName?.trim() || !editing.lastName?.trim()) {\n      setSaveError('First and last name are required');\n      return;\n    }\n    setSaving(true);\n    setSaveError(null);\n    try {\n      const { data: sess } = await supabase.auth.getSession();\n      const token = sess?.session?.access_token;\n      if (!token) { \n        console.log('‚ö†Ô∏è No Supabase token, proceeding without authentication (backend will use default user)');\n      }\n      const base = editing.original?.data || editing.original;\n      const updated = {\n        ...(base || {}),\n        id: editing.id,\n        demographics: {\n          ...(base?.demographics || {}),\n          firstName: editing.firstName,\n          lastName: editing.lastName,\n          mrn: editing.mrn,\n          dateOfBirth: editing.dateOfBirth,\n          sex: editing.sex,\n        },\n        lastUpdated: new Date().toISOString(),\n      };\n      const headers: Record<string, string> = { 'Content-Type': 'application/json' };\n      if (token) {\n        headers.Authorization = `Bearer ${token}`;\n      }\n      const resp = await fetch('/api/patients', {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({ patient: updated })\n      });\n      if (!resp.ok) {\n        const body = await resp.json().catch(() => ({}));\n        throw new Error(body?.error || `Save failed (${resp.status})`);\n      }\n      setEditing(null);\n      await fetchPatients();\n      showToast('success', 'Patient updated');\n    } catch (e: any) {\n      setSaveError(e?.message || 'Save failed');\n      showToast('error', e?.message || 'Save failed');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <div className=\"flex items-center space-x-2 mb-4\">\n          <Search className=\"w-5 h-5 text-gray-400\" />\n          <h1 className=\"text-xl font-semibold text-gray-900\">All Patients</h1>\n        </div>\n        \n        {patients.length === 0 && !loading && (\n          <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <p className=\"text-sm text-blue-800\">\n              <strong>No Patients Found:</strong> You haven't created any patients yet.\n            </p>\n            <p className=\"text-xs text-blue-600 mt-1\">\n              Use the \"Create Patient\" button in the patient selector to add your first patient.\n            </p>\n          </div>\n        )}\n        <div className=\"flex items-center gap-2 mb-4\">\n          <input\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Search by name or MRN\"\n            className=\"flex-1 border border-gray-300 rounded px-3 py-2 text-sm\"\n          />\n          <button onClick={() => fetchPatients({ resetPage: true })} className=\"px-3 py-2 bg-blue-600 text-white rounded text-sm\">Search</button>\n          <button onClick={() => { setQuery(''); fetchPatients({ resetPage: true }); }} className=\"px-3 py-2 bg-white border rounded text-sm\">Clear</button>\n          <button onClick={() => fetchPatients()} className=\"px-3 py-2 bg-white border rounded text-sm flex items-center gap-1\">\n            <RefreshCw className=\"w-4 h-4\" /> Refresh\n          </button>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">MRN</th>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">DOB</th>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Last Updated</th>\n                <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {patients.map((p) => {\n                const d = p.data?.demographics || p.demographics || {};\n                const name = `${d.firstName || ''} ${d.lastName || ''}`.trim();\n                const mrn = d.mrn || '';\n                const dob = d.dateOfBirth ? new Date(d.dateOfBirth).toLocaleDateString() : '';\n                const updated = (p.data?.lastUpdated || p.lastUpdated) ? new Date(p.data?.lastUpdated || p.lastUpdated).toLocaleString() : '';\n                return (\n                  <tr key={p.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-4 py-2 text-sm text-gray-900 cursor-pointer\" onClick={() => selectAndClose(p)}>{name || '‚Äî'}</td>\n                    <td className=\"px-4 py-2 text-sm text-gray-600 cursor-pointer\" onClick={() => selectAndClose(p)}>{mrn || '‚Äî'}</td>\n                    <td className=\"px-4 py-2 text-sm text-gray-600 cursor-pointer\" onClick={() => selectAndClose(p)}>{dob || '‚Äî'}</td>\n                    <td className=\"px-4 py-2 text-sm text-gray-600 cursor-pointer\" onClick={() => selectAndClose(p)}>{updated || '‚Äî'}</td>\n                    <td className=\"px-4 py-2 text-sm text-gray-600\">\n                      <button onClick={() => openEdit(p)} className=\"inline-flex items-center px-2 py-1 bg-white border rounded text-xs hover:bg-gray-50\">\n                        <Edit className=\"w-4 h-4 mr-1\"/> Edit\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n              {patients.length === 0 && !loading && (\n                <tr>\n                  <td colSpan={4} className=\"px-4 py-6 text-center text-sm text-gray-500\">No patients found</td>\n                </tr>\n              )}\n              {loading && (\n                <tr>\n                  <td colSpan={4} className=\"px-4 py-6 text-center text-sm text-gray-500\">Loading‚Ä¶</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"mt-4 flex items-center justify-between\">\n          <div className=\"text-sm text-gray-600\">Page {page} of {totalPages} ‚Ä¢ {total} total</div>\n          <div className=\"flex items-center gap-2\">\n            <button disabled={page <= 1} onClick={() => setPage((p) => Math.max(1, p - 1))} className=\"px-2 py-1 bg-white border rounded disabled:opacity-50\"><ChevronLeft className=\"w-4 h-4\"/></button>\n            <button disabled={page >= totalPages} onClick={() => setPage((p) => p + 1)} className=\"px-2 py-1 bg-white border rounded disabled:opacity-50\"><ChevronRight className=\"w-4 h-4\"/></button>\n          </div>\n        </div>\n      </Card>\n\n      {editing && (\n        <div className=\"fixed inset-0 z-50 bg-black/40 flex items-center justify-center\">\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">Edit Patient</h2>\n              <button onClick={() => setEditing(null)} className=\"text-gray-400 hover:text-gray-600\" aria-label=\"Close\"><X className=\"w-5 h-5\"/></button>\n            </div>\n            {saveError && <div className=\"mb-3 text-sm text-red-700\">{saveError}</div>}\n            <div className=\"space-y-3\">\n              <div>\n                <label className=\"block text-sm text-gray-700 mb-1\">First Name</label>\n                <input value={editing.firstName} onChange={(e) => setEditing({ ...editing, firstName: e.target.value })} className=\"w-full border rounded px-3 py-2 text-sm\"/>\n              </div>\n              <div>\n                <label className=\"block text-sm text-gray-700 mb-1\">Last Name</label>\n                <input value={editing.lastName} onChange={(e) => setEditing({ ...editing, lastName: e.target.value })} className=\"w-full border rounded px-3 py-2 text-sm\"/>\n              </div>\n              <div>\n                <label className=\"block text-sm text-gray-700 mb-1\">MRN</label>\n                <input value={editing.mrn} onChange={(e) => setEditing({ ...editing, mrn: e.target.value })} className=\"w-full border rounded px-3 py-2 text-sm\"/>\n              </div>\n              <div>\n                <label className=\"block text-sm text-gray-700 mb-1\">Date of Birth</label>\n                <input type=\"date\" value={editing.dateOfBirth} onChange={(e) => setEditing({ ...editing, dateOfBirth: e.target.value })} className=\"w-full border rounded px-3 py-2 text-sm\"/>\n              </div>\n              <div>\n                <label className=\"block text-sm text-gray-700 mb-1\">Sex</label>\n                <select value={editing.sex} onChange={(e) => setEditing({ ...editing, sex: e.target.value })} className=\"w-full border rounded px-3 py-2 text-sm\">\n                  <option value=\"female\">Female</option>\n                  <option value=\"male\">Male</option>\n                  <option value=\"other\">Other</option>\n                  <option value=\"unknown\">Unknown</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"mt-5 flex items-center justify-end gap-2\">\n              <button onClick={() => setEditing(null)} className=\"px-3 py-1.5 text-sm bg-white border rounded\">Cancel</button>\n              <button onClick={saveEdit} disabled={saving} className=\"px-3 py-1.5 text-sm bg-blue-600 text-white rounded disabled:opacity-50\">{saving ? 'Saving‚Ä¶' : 'Save'}</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ServerPatients;\n"],"names":["PAGE_SIZE","ServerPatients","actions","usePatient","query","setQuery","useState","page","setPage","total","setTotal","patients","setPatients","loading","setLoading","editing","setEditing","saving","setSaving","saveError","setSaveError","usingDemoData","setUsingDemoData","totalPages","useMemo","showToast","useToast","fetchPatients","opts","token","storedTokens","parsed","e","sessionPromise","supabase","timeoutPromise","_","reject","data","error","p","params","testResp","healthError","resp","body","useEffect","selectAndClose","openEdit","d","saveEdit","sess","base","updated","headers","jsxs","Card","jsx","Search","RefreshCw","name","mrn","dob","Edit","ChevronLeft","ChevronRight","X"],"mappings":"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"}