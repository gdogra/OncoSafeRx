# Docker Compose for OncoSafeRx Development
version: '3.8'

services:
  # Frontend Development Server
  oncosaferx-frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: oncosaferx/frontend:dev
    container_name: oncosaferx-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"  # Vite dev server
      - "24678:24678"  # HMR port
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=true
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/dist
    networks:
      - oncosaferx-dev-network
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for development
  redis-dev:
    image: redis:7-alpine
    container_name: oncosaferx-redis-dev
    restart: unless-stopped
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    command: redis-server --appendonly yes
    volumes:
      - redis-dev-data:/data
    networks:
      - oncosaferx-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database for development (PostgreSQL)
  postgres-dev:
    image: postgres:15-alpine
    container_name: oncosaferx-postgres-dev
    restart: unless-stopped
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    environment:
      - POSTGRES_DB=oncosaferx_dev
      - POSTGRES_USER=oncosaferx
      - POSTGRES_PASSWORD=dev_password_123
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ./dev-db-init:/docker-entrypoint-initdb.d
    networks:
      - oncosaferx-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U oncosaferx -d oncosaferx_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development tools container
  dev-tools:
    image: node:20-alpine
    container_name: oncosaferx-dev-tools
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - oncosaferx-dev-network
    profiles:
      - tools
    command: tail -f /dev/null  # Keep container running

# Networks
networks:
  oncosaferx-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

# Volumes
volumes:
  redis-dev-data:
    driver: local
  postgres-dev-data:
    driver: local